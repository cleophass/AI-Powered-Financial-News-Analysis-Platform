{"version":3,"sources":["../../../../../../../../../libs/protos/src/generated/base/src/definitions/sonar/orders.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.5.0\n//   protoc               v5.29.1\n// source: src/definitions/sonar/orders.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nimport {\n  type CallOptions,\n  ChannelCredentials,\n  Client,\n  type ClientOptions,\n  type ClientUnaryCall,\n  type handleUnaryCall,\n  makeGenericClientConstructor,\n  Metadata,\n  type ServiceError,\n  type UntypedServiceImplementation,\n} from \"@grpc/grpc-js\";\nimport { Empty } from \"../../../google/protobuf/empty\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\n\nexport interface Order {\n  id: string;\n  base: string;\n  quote: string;\n  side: string;\n  type: string;\n  volume?: number | undefined;\n  quoteVolume?: number | undefined;\n  displayVolume?: number | undefined;\n  timeInForce?: string | undefined;\n  limitPrice?: number | undefined;\n  trailingDelta?: number | undefined;\n  triggerPrice?: number | undefined;\n}\n\nexport interface PlaceOrdersRequest {\n  userId: string;\n  broker: string;\n  expireAt: Date | undefined;\n  orders: Order[];\n}\n\nexport interface OrdersListResponse {\n  orders: Order[];\n}\n\nexport interface CancelRequest {\n  id: string;\n  base: string;\n  quote: string;\n}\n\nexport interface CancelOrdersRequest {\n  userId: string;\n  broker: string;\n  orders: CancelRequest[];\n}\n\nfunction createBaseOrder(): Order {\n  return {\n    id: \"\",\n    base: \"\",\n    quote: \"\",\n    side: \"\",\n    type: \"\",\n    volume: undefined,\n    quoteVolume: undefined,\n    displayVolume: undefined,\n    timeInForce: undefined,\n    limitPrice: undefined,\n    trailingDelta: undefined,\n    triggerPrice: undefined,\n  };\n}\n\nexport const Order: MessageFns<Order> = {\n  encode(message: Order, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.base !== \"\") {\n      writer.uint32(18).string(message.base);\n    }\n    if (message.quote !== \"\") {\n      writer.uint32(26).string(message.quote);\n    }\n    if (message.side !== \"\") {\n      writer.uint32(34).string(message.side);\n    }\n    if (message.type !== \"\") {\n      writer.uint32(42).string(message.type);\n    }\n    if (message.volume !== undefined) {\n      writer.uint32(49).double(message.volume);\n    }\n    if (message.quoteVolume !== undefined) {\n      writer.uint32(57).double(message.quoteVolume);\n    }\n    if (message.displayVolume !== undefined) {\n      writer.uint32(65).double(message.displayVolume);\n    }\n    if (message.timeInForce !== undefined) {\n      writer.uint32(74).string(message.timeInForce);\n    }\n    if (message.limitPrice !== undefined) {\n      writer.uint32(81).double(message.limitPrice);\n    }\n    if (message.trailingDelta !== undefined) {\n      writer.uint32(89).double(message.trailingDelta);\n    }\n    if (message.triggerPrice !== undefined) {\n      writer.uint32(97).double(message.triggerPrice);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): Order {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseOrder();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.base = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.quote = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.side = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.type = reader.string();\n          continue;\n        }\n        case 6: {\n          if (tag !== 49) {\n            break;\n          }\n\n          message.volume = reader.double();\n          continue;\n        }\n        case 7: {\n          if (tag !== 57) {\n            break;\n          }\n\n          message.quoteVolume = reader.double();\n          continue;\n        }\n        case 8: {\n          if (tag !== 65) {\n            break;\n          }\n\n          message.displayVolume = reader.double();\n          continue;\n        }\n        case 9: {\n          if (tag !== 74) {\n            break;\n          }\n\n          message.timeInForce = reader.string();\n          continue;\n        }\n        case 10: {\n          if (tag !== 81) {\n            break;\n          }\n\n          message.limitPrice = reader.double();\n          continue;\n        }\n        case 11: {\n          if (tag !== 89) {\n            break;\n          }\n\n          message.trailingDelta = reader.double();\n          continue;\n        }\n        case 12: {\n          if (tag !== 97) {\n            break;\n          }\n\n          message.triggerPrice = reader.double();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Order {\n    return {\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n      base: isSet(object.base) ? globalThis.String(object.base) : \"\",\n      quote: isSet(object.quote) ? globalThis.String(object.quote) : \"\",\n      side: isSet(object.side) ? globalThis.String(object.side) : \"\",\n      type: isSet(object.type) ? globalThis.String(object.type) : \"\",\n      volume: isSet(object.volume) ? globalThis.Number(object.volume) : undefined,\n      quoteVolume: isSet(object.quoteVolume) ? globalThis.Number(object.quoteVolume) : undefined,\n      displayVolume: isSet(object.displayVolume) ? globalThis.Number(object.displayVolume) : undefined,\n      timeInForce: isSet(object.timeInForce) ? globalThis.String(object.timeInForce) : undefined,\n      limitPrice: isSet(object.limitPrice) ? globalThis.Number(object.limitPrice) : undefined,\n      trailingDelta: isSet(object.trailingDelta) ? globalThis.Number(object.trailingDelta) : undefined,\n      triggerPrice: isSet(object.triggerPrice) ? globalThis.Number(object.triggerPrice) : undefined,\n    };\n  },\n\n  toJSON(message: Order): unknown {\n    const obj: any = {};\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    if (message.base !== \"\") {\n      obj.base = message.base;\n    }\n    if (message.quote !== \"\") {\n      obj.quote = message.quote;\n    }\n    if (message.side !== \"\") {\n      obj.side = message.side;\n    }\n    if (message.type !== \"\") {\n      obj.type = message.type;\n    }\n    if (message.volume !== undefined) {\n      obj.volume = message.volume;\n    }\n    if (message.quoteVolume !== undefined) {\n      obj.quoteVolume = message.quoteVolume;\n    }\n    if (message.displayVolume !== undefined) {\n      obj.displayVolume = message.displayVolume;\n    }\n    if (message.timeInForce !== undefined) {\n      obj.timeInForce = message.timeInForce;\n    }\n    if (message.limitPrice !== undefined) {\n      obj.limitPrice = message.limitPrice;\n    }\n    if (message.trailingDelta !== undefined) {\n      obj.trailingDelta = message.trailingDelta;\n    }\n    if (message.triggerPrice !== undefined) {\n      obj.triggerPrice = message.triggerPrice;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<Order>, I>>(base?: I): Order {\n    return Order.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<Order>, I>>(object: I): Order {\n    const message = createBaseOrder();\n    message.id = object.id ?? \"\";\n    message.base = object.base ?? \"\";\n    message.quote = object.quote ?? \"\";\n    message.side = object.side ?? \"\";\n    message.type = object.type ?? \"\";\n    message.volume = object.volume ?? undefined;\n    message.quoteVolume = object.quoteVolume ?? undefined;\n    message.displayVolume = object.displayVolume ?? undefined;\n    message.timeInForce = object.timeInForce ?? undefined;\n    message.limitPrice = object.limitPrice ?? undefined;\n    message.trailingDelta = object.trailingDelta ?? undefined;\n    message.triggerPrice = object.triggerPrice ?? undefined;\n    return message;\n  },\n};\n\nfunction createBasePlaceOrdersRequest(): PlaceOrdersRequest {\n  return { userId: \"\", broker: \"\", expireAt: undefined, orders: [] };\n}\n\nexport const PlaceOrdersRequest: MessageFns<PlaceOrdersRequest> = {\n  encode(message: PlaceOrdersRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.broker !== \"\") {\n      writer.uint32(18).string(message.broker);\n    }\n    if (message.expireAt !== undefined) {\n      Timestamp.encode(toTimestamp(message.expireAt), writer.uint32(26).fork()).join();\n    }\n    for (const v of message.orders) {\n      Order.encode(v!, writer.uint32(34).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): PlaceOrdersRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePlaceOrdersRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.broker = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.expireAt = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.orders.push(Order.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PlaceOrdersRequest {\n    return {\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      broker: isSet(object.broker) ? globalThis.String(object.broker) : \"\",\n      expireAt: isSet(object.expireAt) ? fromJsonTimestamp(object.expireAt) : undefined,\n      orders: globalThis.Array.isArray(object?.orders) ? object.orders.map((e: any) => Order.fromJSON(e)) : [],\n    };\n  },\n\n  toJSON(message: PlaceOrdersRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.broker !== \"\") {\n      obj.broker = message.broker;\n    }\n    if (message.expireAt !== undefined) {\n      obj.expireAt = message.expireAt.toISOString();\n    }\n    if (message.orders?.length) {\n      obj.orders = message.orders.map((e) => Order.toJSON(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<PlaceOrdersRequest>, I>>(base?: I): PlaceOrdersRequest {\n    return PlaceOrdersRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<PlaceOrdersRequest>, I>>(object: I): PlaceOrdersRequest {\n    const message = createBasePlaceOrdersRequest();\n    message.userId = object.userId ?? \"\";\n    message.broker = object.broker ?? \"\";\n    message.expireAt = object.expireAt ?? undefined;\n    message.orders = object.orders?.map((e) => Order.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseOrdersListResponse(): OrdersListResponse {\n  return { orders: [] };\n}\n\nexport const OrdersListResponse: MessageFns<OrdersListResponse> = {\n  encode(message: OrdersListResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.orders) {\n      Order.encode(v!, writer.uint32(10).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): OrdersListResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseOrdersListResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.orders.push(Order.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): OrdersListResponse {\n    return { orders: globalThis.Array.isArray(object?.orders) ? object.orders.map((e: any) => Order.fromJSON(e)) : [] };\n  },\n\n  toJSON(message: OrdersListResponse): unknown {\n    const obj: any = {};\n    if (message.orders?.length) {\n      obj.orders = message.orders.map((e) => Order.toJSON(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<OrdersListResponse>, I>>(base?: I): OrdersListResponse {\n    return OrdersListResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<OrdersListResponse>, I>>(object: I): OrdersListResponse {\n    const message = createBaseOrdersListResponse();\n    message.orders = object.orders?.map((e) => Order.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseCancelRequest(): CancelRequest {\n  return { id: \"\", base: \"\", quote: \"\" };\n}\n\nexport const CancelRequest: MessageFns<CancelRequest> = {\n  encode(message: CancelRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.base !== \"\") {\n      writer.uint32(18).string(message.base);\n    }\n    if (message.quote !== \"\") {\n      writer.uint32(26).string(message.quote);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): CancelRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCancelRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.base = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.quote = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): CancelRequest {\n    return {\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n      base: isSet(object.base) ? globalThis.String(object.base) : \"\",\n      quote: isSet(object.quote) ? globalThis.String(object.quote) : \"\",\n    };\n  },\n\n  toJSON(message: CancelRequest): unknown {\n    const obj: any = {};\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    if (message.base !== \"\") {\n      obj.base = message.base;\n    }\n    if (message.quote !== \"\") {\n      obj.quote = message.quote;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<CancelRequest>, I>>(base?: I): CancelRequest {\n    return CancelRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<CancelRequest>, I>>(object: I): CancelRequest {\n    const message = createBaseCancelRequest();\n    message.id = object.id ?? \"\";\n    message.base = object.base ?? \"\";\n    message.quote = object.quote ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseCancelOrdersRequest(): CancelOrdersRequest {\n  return { userId: \"\", broker: \"\", orders: [] };\n}\n\nexport const CancelOrdersRequest: MessageFns<CancelOrdersRequest> = {\n  encode(message: CancelOrdersRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.broker !== \"\") {\n      writer.uint32(18).string(message.broker);\n    }\n    for (const v of message.orders) {\n      CancelRequest.encode(v!, writer.uint32(26).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): CancelOrdersRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCancelOrdersRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.broker = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.orders.push(CancelRequest.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): CancelOrdersRequest {\n    return {\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      broker: isSet(object.broker) ? globalThis.String(object.broker) : \"\",\n      orders: globalThis.Array.isArray(object?.orders) ? object.orders.map((e: any) => CancelRequest.fromJSON(e)) : [],\n    };\n  },\n\n  toJSON(message: CancelOrdersRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.broker !== \"\") {\n      obj.broker = message.broker;\n    }\n    if (message.orders?.length) {\n      obj.orders = message.orders.map((e) => CancelRequest.toJSON(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<CancelOrdersRequest>, I>>(base?: I): CancelOrdersRequest {\n    return CancelOrdersRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<CancelOrdersRequest>, I>>(object: I): CancelOrdersRequest {\n    const message = createBaseCancelOrdersRequest();\n    message.userId = object.userId ?? \"\";\n    message.broker = object.broker ?? \"\";\n    message.orders = object.orders?.map((e) => CancelRequest.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nexport type OrdersService = typeof OrdersService;\nexport const OrdersService = {\n  placeOrders: {\n    path: \"/sonar.Orders/PlaceOrders\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: PlaceOrdersRequest) => Buffer.from(PlaceOrdersRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => PlaceOrdersRequest.decode(value),\n    responseSerialize: (value: OrdersListResponse) => Buffer.from(OrdersListResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => OrdersListResponse.decode(value),\n  },\n  cancelOrders: {\n    path: \"/sonar.Orders/CancelOrders\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: CancelOrdersRequest) => Buffer.from(CancelOrdersRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => CancelOrdersRequest.decode(value),\n    responseSerialize: (value: Empty) => Buffer.from(Empty.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => Empty.decode(value),\n  },\n} as const;\n\nexport interface OrdersServer extends UntypedServiceImplementation {\n  placeOrders: handleUnaryCall<PlaceOrdersRequest, OrdersListResponse>;\n  cancelOrders: handleUnaryCall<CancelOrdersRequest, Empty>;\n}\n\nexport interface OrdersClient extends Client {\n  placeOrders(\n    request: PlaceOrdersRequest,\n    callback: (error: ServiceError | null, response: OrdersListResponse) => void,\n  ): ClientUnaryCall;\n  placeOrders(\n    request: PlaceOrdersRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: OrdersListResponse) => void,\n  ): ClientUnaryCall;\n  placeOrders(\n    request: PlaceOrdersRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: OrdersListResponse) => void,\n  ): ClientUnaryCall;\n  cancelOrders(\n    request: CancelOrdersRequest,\n    callback: (error: ServiceError | null, response: Empty) => void,\n  ): ClientUnaryCall;\n  cancelOrders(\n    request: CancelOrdersRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: Empty) => void,\n  ): ClientUnaryCall;\n  cancelOrders(\n    request: CancelOrdersRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: Empty) => void,\n  ): ClientUnaryCall;\n}\n\nexport const OrdersClient = makeGenericClientConstructor(OrdersService, \"sonar.Orders\") as unknown as {\n  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): OrdersClient;\n  service: typeof OrdersService;\n  serviceName: string;\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\ntype DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\ntype Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction toTimestamp(date: Date): Timestamp {\n  const seconds = Math.trunc(date.getTime() / 1_000);\n  const nanos = (date.getTime() % 1_000) * 1_000_000;\n  return { seconds, nanos };\n}\n\nfunction fromTimestamp(t: Timestamp): Date {\n  let millis = (t.seconds || 0) * 1_000;\n  millis += (t.nanos || 0) / 1_000_000;\n  return new globalThis.Date(millis);\n}\n\nfunction fromJsonTimestamp(o: any): Date {\n  if (o instanceof globalThis.Date) {\n    return o;\n  } else if (typeof o === \"string\") {\n    return new globalThis.Date(o);\n  } else {\n    return fromTimestamp(Timestamp.fromJSON(o));\n  }\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n\ninterface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  fromJSON(object: any): T;\n  toJSON(message: T): unknown;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n"],"names":["CancelOrdersRequest","CancelRequest","Order","OrdersClient","OrdersListResponse","OrdersService","PlaceOrdersRequest","createBaseOrder","id","base","quote","side","type","volume","undefined","quoteVolume","displayVolume","timeInForce","limitPrice","trailingDelta","triggerPrice","encode","message","writer","BinaryWriter","uint32","string","double","decode","input","length","reader","BinaryReader","end","len","pos","tag","skip","fromJSON","object","isSet","globalThis","String","Number","toJSON","obj","create","fromPartial","createBasePlaceOrdersRequest","userId","broker","expireAt","orders","Timestamp","toTimestamp","fork","join","v","fromTimestamp","push","fromJsonTimestamp","Array","isArray","map","e","toISOString","createBaseOrdersListResponse","createBaseCancelRequest","createBaseCancelOrdersRequest","placeOrders","path","requestStream","responseStream","requestSerialize","value","Buffer","from","finish","requestDeserialize","responseSerialize","responseDeserialize","cancelOrders","Empty","makeGenericClientConstructor","date","seconds","Math","trunc","getTime","nanos","t","millis","Date","o"],"mappings":"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"}
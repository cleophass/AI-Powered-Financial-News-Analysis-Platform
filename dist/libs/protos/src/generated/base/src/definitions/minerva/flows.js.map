{"version":3,"sources":["../../../../../../../../../libs/protos/src/generated/base/src/definitions/minerva/flows.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.5.0\n//   protoc               v5.29.1\n// source: src/definitions/minerva/flows.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nimport {\n  type CallOptions,\n  ChannelCredentials,\n  Client,\n  type ClientOptions,\n  type ClientUnaryCall,\n  type handleUnaryCall,\n  makeGenericClientConstructor,\n  Metadata,\n  type ServiceError,\n  type UntypedServiceImplementation,\n} from \"@grpc/grpc-js\";\nimport { Struct } from \"../../../google/protobuf/struct\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\n\nexport interface FlowResponse {\n  id: string;\n  userId: string;\n  strategyId: string;\n  graph: { [key: string]: any } | undefined;\n  ast: { [key: string]: any } | undefined;\n  status: string;\n  isArchived: boolean;\n  backtestsCount: number;\n  executionsCount: number;\n  createdAt: Date | undefined;\n  updatedAt: Date | undefined;\n}\n\nexport interface FlowsListResponse {\n  flows: FlowResponse[];\n}\n\nexport interface CreateDraftFlowRequest {\n  userId: string;\n  strategyId: string;\n  graph: { [key: string]: any } | undefined;\n}\n\nexport interface PromoteDraftFlowRequest {\n  strategyId: string;\n  userId: string;\n}\n\nexport interface ArchivedFlowsByStrategyIdRequest {\n  userId: string;\n  strategyId: string;\n  status: string;\n}\n\nexport interface FlowByStrategyIdRequest {\n  userId: string;\n  strategyId: string;\n  status: string;\n}\n\nexport interface FlowsByStrategyIdRequest {\n  userId: string;\n  strategyId: string;\n}\n\nexport interface FlowByIdRequest {\n  id: string;\n  userId: string;\n}\n\nexport interface ListFlowsByStrategyIdsRequest {\n  ids: string[];\n}\n\nfunction createBaseFlowResponse(): FlowResponse {\n  return {\n    id: \"\",\n    userId: \"\",\n    strategyId: \"\",\n    graph: undefined,\n    ast: undefined,\n    status: \"\",\n    isArchived: false,\n    backtestsCount: 0,\n    executionsCount: 0,\n    createdAt: undefined,\n    updatedAt: undefined,\n  };\n}\n\nexport const FlowResponse: MessageFns<FlowResponse> = {\n  encode(message: FlowResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(18).string(message.userId);\n    }\n    if (message.strategyId !== \"\") {\n      writer.uint32(26).string(message.strategyId);\n    }\n    if (message.graph !== undefined) {\n      Struct.encode(Struct.wrap(message.graph), writer.uint32(34).fork()).join();\n    }\n    if (message.ast !== undefined) {\n      Struct.encode(Struct.wrap(message.ast), writer.uint32(42).fork()).join();\n    }\n    if (message.status !== \"\") {\n      writer.uint32(50).string(message.status);\n    }\n    if (message.isArchived !== false) {\n      writer.uint32(56).bool(message.isArchived);\n    }\n    if (message.backtestsCount !== 0) {\n      writer.uint32(64).int32(message.backtestsCount);\n    }\n    if (message.executionsCount !== 0) {\n      writer.uint32(72).int32(message.executionsCount);\n    }\n    if (message.createdAt !== undefined) {\n      Timestamp.encode(toTimestamp(message.createdAt), writer.uint32(82).fork()).join();\n    }\n    if (message.updatedAt !== undefined) {\n      Timestamp.encode(toTimestamp(message.updatedAt), writer.uint32(90).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): FlowResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFlowResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.strategyId = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.graph = Struct.unwrap(Struct.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.ast = Struct.unwrap(Struct.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 6: {\n          if (tag !== 50) {\n            break;\n          }\n\n          message.status = reader.string();\n          continue;\n        }\n        case 7: {\n          if (tag !== 56) {\n            break;\n          }\n\n          message.isArchived = reader.bool();\n          continue;\n        }\n        case 8: {\n          if (tag !== 64) {\n            break;\n          }\n\n          message.backtestsCount = reader.int32();\n          continue;\n        }\n        case 9: {\n          if (tag !== 72) {\n            break;\n          }\n\n          message.executionsCount = reader.int32();\n          continue;\n        }\n        case 10: {\n          if (tag !== 82) {\n            break;\n          }\n\n          message.createdAt = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 11: {\n          if (tag !== 90) {\n            break;\n          }\n\n          message.updatedAt = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): FlowResponse {\n    return {\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      strategyId: isSet(object.strategyId) ? globalThis.String(object.strategyId) : \"\",\n      graph: isObject(object.graph) ? object.graph : undefined,\n      ast: isObject(object.ast) ? object.ast : undefined,\n      status: isSet(object.status) ? globalThis.String(object.status) : \"\",\n      isArchived: isSet(object.isArchived) ? globalThis.Boolean(object.isArchived) : false,\n      backtestsCount: isSet(object.backtestsCount) ? globalThis.Number(object.backtestsCount) : 0,\n      executionsCount: isSet(object.executionsCount) ? globalThis.Number(object.executionsCount) : 0,\n      createdAt: isSet(object.createdAt) ? fromJsonTimestamp(object.createdAt) : undefined,\n      updatedAt: isSet(object.updatedAt) ? fromJsonTimestamp(object.updatedAt) : undefined,\n    };\n  },\n\n  toJSON(message: FlowResponse): unknown {\n    const obj: any = {};\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.strategyId !== \"\") {\n      obj.strategyId = message.strategyId;\n    }\n    if (message.graph !== undefined) {\n      obj.graph = message.graph;\n    }\n    if (message.ast !== undefined) {\n      obj.ast = message.ast;\n    }\n    if (message.status !== \"\") {\n      obj.status = message.status;\n    }\n    if (message.isArchived !== false) {\n      obj.isArchived = message.isArchived;\n    }\n    if (message.backtestsCount !== 0) {\n      obj.backtestsCount = Math.round(message.backtestsCount);\n    }\n    if (message.executionsCount !== 0) {\n      obj.executionsCount = Math.round(message.executionsCount);\n    }\n    if (message.createdAt !== undefined) {\n      obj.createdAt = message.createdAt.toISOString();\n    }\n    if (message.updatedAt !== undefined) {\n      obj.updatedAt = message.updatedAt.toISOString();\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<FlowResponse>, I>>(base?: I): FlowResponse {\n    return FlowResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<FlowResponse>, I>>(object: I): FlowResponse {\n    const message = createBaseFlowResponse();\n    message.id = object.id ?? \"\";\n    message.userId = object.userId ?? \"\";\n    message.strategyId = object.strategyId ?? \"\";\n    message.graph = object.graph ?? undefined;\n    message.ast = object.ast ?? undefined;\n    message.status = object.status ?? \"\";\n    message.isArchived = object.isArchived ?? false;\n    message.backtestsCount = object.backtestsCount ?? 0;\n    message.executionsCount = object.executionsCount ?? 0;\n    message.createdAt = object.createdAt ?? undefined;\n    message.updatedAt = object.updatedAt ?? undefined;\n    return message;\n  },\n};\n\nfunction createBaseFlowsListResponse(): FlowsListResponse {\n  return { flows: [] };\n}\n\nexport const FlowsListResponse: MessageFns<FlowsListResponse> = {\n  encode(message: FlowsListResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.flows) {\n      FlowResponse.encode(v!, writer.uint32(10).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): FlowsListResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFlowsListResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.flows.push(FlowResponse.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): FlowsListResponse {\n    return {\n      flows: globalThis.Array.isArray(object?.flows) ? object.flows.map((e: any) => FlowResponse.fromJSON(e)) : [],\n    };\n  },\n\n  toJSON(message: FlowsListResponse): unknown {\n    const obj: any = {};\n    if (message.flows?.length) {\n      obj.flows = message.flows.map((e) => FlowResponse.toJSON(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<FlowsListResponse>, I>>(base?: I): FlowsListResponse {\n    return FlowsListResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<FlowsListResponse>, I>>(object: I): FlowsListResponse {\n    const message = createBaseFlowsListResponse();\n    message.flows = object.flows?.map((e) => FlowResponse.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseCreateDraftFlowRequest(): CreateDraftFlowRequest {\n  return { userId: \"\", strategyId: \"\", graph: undefined };\n}\n\nexport const CreateDraftFlowRequest: MessageFns<CreateDraftFlowRequest> = {\n  encode(message: CreateDraftFlowRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.strategyId !== \"\") {\n      writer.uint32(18).string(message.strategyId);\n    }\n    if (message.graph !== undefined) {\n      Struct.encode(Struct.wrap(message.graph), writer.uint32(26).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): CreateDraftFlowRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCreateDraftFlowRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.strategyId = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.graph = Struct.unwrap(Struct.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): CreateDraftFlowRequest {\n    return {\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      strategyId: isSet(object.strategyId) ? globalThis.String(object.strategyId) : \"\",\n      graph: isObject(object.graph) ? object.graph : undefined,\n    };\n  },\n\n  toJSON(message: CreateDraftFlowRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.strategyId !== \"\") {\n      obj.strategyId = message.strategyId;\n    }\n    if (message.graph !== undefined) {\n      obj.graph = message.graph;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<CreateDraftFlowRequest>, I>>(base?: I): CreateDraftFlowRequest {\n    return CreateDraftFlowRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<CreateDraftFlowRequest>, I>>(object: I): CreateDraftFlowRequest {\n    const message = createBaseCreateDraftFlowRequest();\n    message.userId = object.userId ?? \"\";\n    message.strategyId = object.strategyId ?? \"\";\n    message.graph = object.graph ?? undefined;\n    return message;\n  },\n};\n\nfunction createBasePromoteDraftFlowRequest(): PromoteDraftFlowRequest {\n  return { strategyId: \"\", userId: \"\" };\n}\n\nexport const PromoteDraftFlowRequest: MessageFns<PromoteDraftFlowRequest> = {\n  encode(message: PromoteDraftFlowRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.strategyId !== \"\") {\n      writer.uint32(10).string(message.strategyId);\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(18).string(message.userId);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): PromoteDraftFlowRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePromoteDraftFlowRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.strategyId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PromoteDraftFlowRequest {\n    return {\n      strategyId: isSet(object.strategyId) ? globalThis.String(object.strategyId) : \"\",\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n    };\n  },\n\n  toJSON(message: PromoteDraftFlowRequest): unknown {\n    const obj: any = {};\n    if (message.strategyId !== \"\") {\n      obj.strategyId = message.strategyId;\n    }\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<PromoteDraftFlowRequest>, I>>(base?: I): PromoteDraftFlowRequest {\n    return PromoteDraftFlowRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<PromoteDraftFlowRequest>, I>>(object: I): PromoteDraftFlowRequest {\n    const message = createBasePromoteDraftFlowRequest();\n    message.strategyId = object.strategyId ?? \"\";\n    message.userId = object.userId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseArchivedFlowsByStrategyIdRequest(): ArchivedFlowsByStrategyIdRequest {\n  return { userId: \"\", strategyId: \"\", status: \"\" };\n}\n\nexport const ArchivedFlowsByStrategyIdRequest: MessageFns<ArchivedFlowsByStrategyIdRequest> = {\n  encode(message: ArchivedFlowsByStrategyIdRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.strategyId !== \"\") {\n      writer.uint32(18).string(message.strategyId);\n    }\n    if (message.status !== \"\") {\n      writer.uint32(26).string(message.status);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ArchivedFlowsByStrategyIdRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseArchivedFlowsByStrategyIdRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.strategyId = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.status = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ArchivedFlowsByStrategyIdRequest {\n    return {\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      strategyId: isSet(object.strategyId) ? globalThis.String(object.strategyId) : \"\",\n      status: isSet(object.status) ? globalThis.String(object.status) : \"\",\n    };\n  },\n\n  toJSON(message: ArchivedFlowsByStrategyIdRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.strategyId !== \"\") {\n      obj.strategyId = message.strategyId;\n    }\n    if (message.status !== \"\") {\n      obj.status = message.status;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ArchivedFlowsByStrategyIdRequest>, I>>(\n    base?: I,\n  ): ArchivedFlowsByStrategyIdRequest {\n    return ArchivedFlowsByStrategyIdRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ArchivedFlowsByStrategyIdRequest>, I>>(\n    object: I,\n  ): ArchivedFlowsByStrategyIdRequest {\n    const message = createBaseArchivedFlowsByStrategyIdRequest();\n    message.userId = object.userId ?? \"\";\n    message.strategyId = object.strategyId ?? \"\";\n    message.status = object.status ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseFlowByStrategyIdRequest(): FlowByStrategyIdRequest {\n  return { userId: \"\", strategyId: \"\", status: \"\" };\n}\n\nexport const FlowByStrategyIdRequest: MessageFns<FlowByStrategyIdRequest> = {\n  encode(message: FlowByStrategyIdRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.strategyId !== \"\") {\n      writer.uint32(18).string(message.strategyId);\n    }\n    if (message.status !== \"\") {\n      writer.uint32(26).string(message.status);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): FlowByStrategyIdRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFlowByStrategyIdRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.strategyId = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.status = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): FlowByStrategyIdRequest {\n    return {\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      strategyId: isSet(object.strategyId) ? globalThis.String(object.strategyId) : \"\",\n      status: isSet(object.status) ? globalThis.String(object.status) : \"\",\n    };\n  },\n\n  toJSON(message: FlowByStrategyIdRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.strategyId !== \"\") {\n      obj.strategyId = message.strategyId;\n    }\n    if (message.status !== \"\") {\n      obj.status = message.status;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<FlowByStrategyIdRequest>, I>>(base?: I): FlowByStrategyIdRequest {\n    return FlowByStrategyIdRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<FlowByStrategyIdRequest>, I>>(object: I): FlowByStrategyIdRequest {\n    const message = createBaseFlowByStrategyIdRequest();\n    message.userId = object.userId ?? \"\";\n    message.strategyId = object.strategyId ?? \"\";\n    message.status = object.status ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseFlowsByStrategyIdRequest(): FlowsByStrategyIdRequest {\n  return { userId: \"\", strategyId: \"\" };\n}\n\nexport const FlowsByStrategyIdRequest: MessageFns<FlowsByStrategyIdRequest> = {\n  encode(message: FlowsByStrategyIdRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.strategyId !== \"\") {\n      writer.uint32(18).string(message.strategyId);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): FlowsByStrategyIdRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFlowsByStrategyIdRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.strategyId = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): FlowsByStrategyIdRequest {\n    return {\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      strategyId: isSet(object.strategyId) ? globalThis.String(object.strategyId) : \"\",\n    };\n  },\n\n  toJSON(message: FlowsByStrategyIdRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.strategyId !== \"\") {\n      obj.strategyId = message.strategyId;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<FlowsByStrategyIdRequest>, I>>(base?: I): FlowsByStrategyIdRequest {\n    return FlowsByStrategyIdRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<FlowsByStrategyIdRequest>, I>>(object: I): FlowsByStrategyIdRequest {\n    const message = createBaseFlowsByStrategyIdRequest();\n    message.userId = object.userId ?? \"\";\n    message.strategyId = object.strategyId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseFlowByIdRequest(): FlowByIdRequest {\n  return { id: \"\", userId: \"\" };\n}\n\nexport const FlowByIdRequest: MessageFns<FlowByIdRequest> = {\n  encode(message: FlowByIdRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(18).string(message.userId);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): FlowByIdRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFlowByIdRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): FlowByIdRequest {\n    return {\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n    };\n  },\n\n  toJSON(message: FlowByIdRequest): unknown {\n    const obj: any = {};\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<FlowByIdRequest>, I>>(base?: I): FlowByIdRequest {\n    return FlowByIdRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<FlowByIdRequest>, I>>(object: I): FlowByIdRequest {\n    const message = createBaseFlowByIdRequest();\n    message.id = object.id ?? \"\";\n    message.userId = object.userId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseListFlowsByStrategyIdsRequest(): ListFlowsByStrategyIdsRequest {\n  return { ids: [] };\n}\n\nexport const ListFlowsByStrategyIdsRequest: MessageFns<ListFlowsByStrategyIdsRequest> = {\n  encode(message: ListFlowsByStrategyIdsRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.ids) {\n      writer.uint32(10).string(v!);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ListFlowsByStrategyIdsRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseListFlowsByStrategyIdsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.ids.push(reader.string());\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ListFlowsByStrategyIdsRequest {\n    return { ids: globalThis.Array.isArray(object?.ids) ? object.ids.map((e: any) => globalThis.String(e)) : [] };\n  },\n\n  toJSON(message: ListFlowsByStrategyIdsRequest): unknown {\n    const obj: any = {};\n    if (message.ids?.length) {\n      obj.ids = message.ids;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ListFlowsByStrategyIdsRequest>, I>>(base?: I): ListFlowsByStrategyIdsRequest {\n    return ListFlowsByStrategyIdsRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ListFlowsByStrategyIdsRequest>, I>>(\n    object: I,\n  ): ListFlowsByStrategyIdsRequest {\n    const message = createBaseListFlowsByStrategyIdsRequest();\n    message.ids = object.ids?.map((e) => e) || [];\n    return message;\n  },\n};\n\nexport type FlowsService = typeof FlowsService;\nexport const FlowsService = {\n  createDraftFlow: {\n    path: \"/minerva.Flows/CreateDraftFlow\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: CreateDraftFlowRequest) => Buffer.from(CreateDraftFlowRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => CreateDraftFlowRequest.decode(value),\n    responseSerialize: (value: FlowResponse) => Buffer.from(FlowResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => FlowResponse.decode(value),\n  },\n  promoteDraftFlow: {\n    path: \"/minerva.Flows/PromoteDraftFlow\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: PromoteDraftFlowRequest) => Buffer.from(PromoteDraftFlowRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => PromoteDraftFlowRequest.decode(value),\n    responseSerialize: (value: FlowResponse) => Buffer.from(FlowResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => FlowResponse.decode(value),\n  },\n  listArchivedFlowsByStrategyId: {\n    path: \"/minerva.Flows/ListArchivedFlowsByStrategyId\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: ArchivedFlowsByStrategyIdRequest) =>\n      Buffer.from(ArchivedFlowsByStrategyIdRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => ArchivedFlowsByStrategyIdRequest.decode(value),\n    responseSerialize: (value: FlowsListResponse) => Buffer.from(FlowsListResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => FlowsListResponse.decode(value),\n  },\n  getFlowByStrategyId: {\n    path: \"/minerva.Flows/GetFlowByStrategyId\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: FlowByStrategyIdRequest) => Buffer.from(FlowByStrategyIdRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => FlowByStrategyIdRequest.decode(value),\n    responseSerialize: (value: FlowResponse) => Buffer.from(FlowResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => FlowResponse.decode(value),\n  },\n  listFlowsByStrategyId: {\n    path: \"/minerva.Flows/ListFlowsByStrategyId\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: FlowsByStrategyIdRequest) => Buffer.from(FlowsByStrategyIdRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => FlowsByStrategyIdRequest.decode(value),\n    responseSerialize: (value: FlowsListResponse) => Buffer.from(FlowsListResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => FlowsListResponse.decode(value),\n  },\n  getFlowById: {\n    path: \"/minerva.Flows/GetFlowById\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: FlowByIdRequest) => Buffer.from(FlowByIdRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => FlowByIdRequest.decode(value),\n    responseSerialize: (value: FlowResponse) => Buffer.from(FlowResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => FlowResponse.decode(value),\n  },\n  listFlowsByStrategyIds: {\n    path: \"/minerva.Flows/ListFlowsByStrategyIds\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: ListFlowsByStrategyIdsRequest) =>\n      Buffer.from(ListFlowsByStrategyIdsRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => ListFlowsByStrategyIdsRequest.decode(value),\n    responseSerialize: (value: FlowsListResponse) => Buffer.from(FlowsListResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => FlowsListResponse.decode(value),\n  },\n} as const;\n\nexport interface FlowsServer extends UntypedServiceImplementation {\n  createDraftFlow: handleUnaryCall<CreateDraftFlowRequest, FlowResponse>;\n  promoteDraftFlow: handleUnaryCall<PromoteDraftFlowRequest, FlowResponse>;\n  listArchivedFlowsByStrategyId: handleUnaryCall<ArchivedFlowsByStrategyIdRequest, FlowsListResponse>;\n  getFlowByStrategyId: handleUnaryCall<FlowByStrategyIdRequest, FlowResponse>;\n  listFlowsByStrategyId: handleUnaryCall<FlowsByStrategyIdRequest, FlowsListResponse>;\n  getFlowById: handleUnaryCall<FlowByIdRequest, FlowResponse>;\n  listFlowsByStrategyIds: handleUnaryCall<ListFlowsByStrategyIdsRequest, FlowsListResponse>;\n}\n\nexport interface FlowsClient extends Client {\n  createDraftFlow(\n    request: CreateDraftFlowRequest,\n    callback: (error: ServiceError | null, response: FlowResponse) => void,\n  ): ClientUnaryCall;\n  createDraftFlow(\n    request: CreateDraftFlowRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: FlowResponse) => void,\n  ): ClientUnaryCall;\n  createDraftFlow(\n    request: CreateDraftFlowRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: FlowResponse) => void,\n  ): ClientUnaryCall;\n  promoteDraftFlow(\n    request: PromoteDraftFlowRequest,\n    callback: (error: ServiceError | null, response: FlowResponse) => void,\n  ): ClientUnaryCall;\n  promoteDraftFlow(\n    request: PromoteDraftFlowRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: FlowResponse) => void,\n  ): ClientUnaryCall;\n  promoteDraftFlow(\n    request: PromoteDraftFlowRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: FlowResponse) => void,\n  ): ClientUnaryCall;\n  listArchivedFlowsByStrategyId(\n    request: ArchivedFlowsByStrategyIdRequest,\n    callback: (error: ServiceError | null, response: FlowsListResponse) => void,\n  ): ClientUnaryCall;\n  listArchivedFlowsByStrategyId(\n    request: ArchivedFlowsByStrategyIdRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: FlowsListResponse) => void,\n  ): ClientUnaryCall;\n  listArchivedFlowsByStrategyId(\n    request: ArchivedFlowsByStrategyIdRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: FlowsListResponse) => void,\n  ): ClientUnaryCall;\n  getFlowByStrategyId(\n    request: FlowByStrategyIdRequest,\n    callback: (error: ServiceError | null, response: FlowResponse) => void,\n  ): ClientUnaryCall;\n  getFlowByStrategyId(\n    request: FlowByStrategyIdRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: FlowResponse) => void,\n  ): ClientUnaryCall;\n  getFlowByStrategyId(\n    request: FlowByStrategyIdRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: FlowResponse) => void,\n  ): ClientUnaryCall;\n  listFlowsByStrategyId(\n    request: FlowsByStrategyIdRequest,\n    callback: (error: ServiceError | null, response: FlowsListResponse) => void,\n  ): ClientUnaryCall;\n  listFlowsByStrategyId(\n    request: FlowsByStrategyIdRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: FlowsListResponse) => void,\n  ): ClientUnaryCall;\n  listFlowsByStrategyId(\n    request: FlowsByStrategyIdRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: FlowsListResponse) => void,\n  ): ClientUnaryCall;\n  getFlowById(\n    request: FlowByIdRequest,\n    callback: (error: ServiceError | null, response: FlowResponse) => void,\n  ): ClientUnaryCall;\n  getFlowById(\n    request: FlowByIdRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: FlowResponse) => void,\n  ): ClientUnaryCall;\n  getFlowById(\n    request: FlowByIdRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: FlowResponse) => void,\n  ): ClientUnaryCall;\n  listFlowsByStrategyIds(\n    request: ListFlowsByStrategyIdsRequest,\n    callback: (error: ServiceError | null, response: FlowsListResponse) => void,\n  ): ClientUnaryCall;\n  listFlowsByStrategyIds(\n    request: ListFlowsByStrategyIdsRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: FlowsListResponse) => void,\n  ): ClientUnaryCall;\n  listFlowsByStrategyIds(\n    request: ListFlowsByStrategyIdsRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: FlowsListResponse) => void,\n  ): ClientUnaryCall;\n}\n\nexport const FlowsClient = makeGenericClientConstructor(FlowsService, \"minerva.Flows\") as unknown as {\n  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): FlowsClient;\n  service: typeof FlowsService;\n  serviceName: string;\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\ntype DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\ntype Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction toTimestamp(date: Date): Timestamp {\n  const seconds = Math.trunc(date.getTime() / 1_000);\n  const nanos = (date.getTime() % 1_000) * 1_000_000;\n  return { seconds, nanos };\n}\n\nfunction fromTimestamp(t: Timestamp): Date {\n  let millis = (t.seconds || 0) * 1_000;\n  millis += (t.nanos || 0) / 1_000_000;\n  return new globalThis.Date(millis);\n}\n\nfunction fromJsonTimestamp(o: any): Date {\n  if (o instanceof globalThis.Date) {\n    return o;\n  } else if (typeof o === \"string\") {\n    return new globalThis.Date(o);\n  } else {\n    return fromTimestamp(Timestamp.fromJSON(o));\n  }\n}\n\nfunction isObject(value: any): boolean {\n  return typeof value === \"object\" && value !== null;\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n\ninterface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  fromJSON(object: any): T;\n  toJSON(message: T): unknown;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n"],"names":["ArchivedFlowsByStrategyIdRequest","CreateDraftFlowRequest","FlowByIdRequest","FlowByStrategyIdRequest","FlowResponse","FlowsByStrategyIdRequest","FlowsClient","FlowsListResponse","FlowsService","ListFlowsByStrategyIdsRequest","PromoteDraftFlowRequest","createBaseFlowResponse","id","userId","strategyId","graph","undefined","ast","status","isArchived","backtestsCount","executionsCount","createdAt","updatedAt","encode","message","writer","BinaryWriter","uint32","string","Struct","wrap","fork","join","bool","int32","Timestamp","toTimestamp","decode","input","length","reader","BinaryReader","end","len","pos","tag","unwrap","fromTimestamp","skip","fromJSON","object","isSet","globalThis","String","isObject","Boolean","Number","fromJsonTimestamp","toJSON","obj","Math","round","toISOString","create","base","fromPartial","createBaseFlowsListResponse","flows","v","push","Array","isArray","map","e","createBaseCreateDraftFlowRequest","createBasePromoteDraftFlowRequest","createBaseArchivedFlowsByStrategyIdRequest","createBaseFlowByStrategyIdRequest","createBaseFlowsByStrategyIdRequest","createBaseFlowByIdRequest","createBaseListFlowsByStrategyIdsRequest","ids","createDraftFlow","path","requestStream","responseStream","requestSerialize","value","Buffer","from","finish","requestDeserialize","responseSerialize","responseDeserialize","promoteDraftFlow","listArchivedFlowsByStrategyId","getFlowByStrategyId","listFlowsByStrategyId","getFlowById","listFlowsByStrategyIds","makeGenericClientConstructor","date","seconds","trunc","getTime","nanos","t","millis","Date","o"],"mappings":"AAAA,sDAAsD;AACtD,YAAY;AACZ,gCAAgC;AAChC,iCAAiC;AACjC,8CAA8C;AAE9C,kBAAkB;;;;;;;;;;;IAwhBLA,gCAAgC;eAAhCA;;IAxKAC,sBAAsB;eAAtBA;;IAgbAC,eAAe;eAAfA;;IAxKAC,uBAAuB;eAAvBA;;IAhiBAC,YAAY;eAAZA;;IA4nBAC,wBAAwB;eAAxBA;;IA2YAC,WAAW;eAAXA;;IA3yBAC,iBAAiB;eAAjBA;;IAinBAC,YAAY;eAAZA;;IAzDAC,6BAA6B;eAA7BA;;IAhaAC,uBAAuB;eAAvBA;;;sBA3c8B;wBAYpC;wBACgB;2BACG;AAyD1B,SAASC;IACP,OAAO;QACLC,IAAI;QACJC,QAAQ;QACRC,YAAY;QACZC,OAAOC;QACPC,KAAKD;QACLE,QAAQ;QACRC,YAAY;QACZC,gBAAgB;QAChBC,iBAAiB;QACjBC,WAAWN;QACXO,WAAWP;IACb;AACF;AAEO,MAAMZ,eAAyC;IACpDoB,QAAOC,OAAqB,EAAEC,SAAuB,IAAIC,kBAAY,EAAE;QACrE,IAAIF,QAAQb,EAAE,KAAK,IAAI;YACrBc,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQb,EAAE;QACrC;QACA,IAAIa,QAAQZ,MAAM,KAAK,IAAI;YACzBa,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQZ,MAAM;QACzC;QACA,IAAIY,QAAQX,UAAU,KAAK,IAAI;YAC7BY,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQX,UAAU;QAC7C;QACA,IAAIW,QAAQV,KAAK,KAAKC,WAAW;YAC/Bc,cAAM,CAACN,MAAM,CAACM,cAAM,CAACC,IAAI,CAACN,QAAQV,KAAK,GAAGW,OAAOE,MAAM,CAAC,IAAII,IAAI,IAAIC,IAAI;QAC1E;QACA,IAAIR,QAAQR,GAAG,KAAKD,WAAW;YAC7Bc,cAAM,CAACN,MAAM,CAACM,cAAM,CAACC,IAAI,CAACN,QAAQR,GAAG,GAAGS,OAAOE,MAAM,CAAC,IAAII,IAAI,IAAIC,IAAI;QACxE;QACA,IAAIR,QAAQP,MAAM,KAAK,IAAI;YACzBQ,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQP,MAAM;QACzC;QACA,IAAIO,QAAQN,UAAU,KAAK,OAAO;YAChCO,OAAOE,MAAM,CAAC,IAAIM,IAAI,CAACT,QAAQN,UAAU;QAC3C;QACA,IAAIM,QAAQL,cAAc,KAAK,GAAG;YAChCM,OAAOE,MAAM,CAAC,IAAIO,KAAK,CAACV,QAAQL,cAAc;QAChD;QACA,IAAIK,QAAQJ,eAAe,KAAK,GAAG;YACjCK,OAAOE,MAAM,CAAC,IAAIO,KAAK,CAACV,QAAQJ,eAAe;QACjD;QACA,IAAII,QAAQH,SAAS,KAAKN,WAAW;YACnCoB,oBAAS,CAACZ,MAAM,CAACa,YAAYZ,QAAQH,SAAS,GAAGI,OAAOE,MAAM,CAAC,IAAII,IAAI,IAAIC,IAAI;QACjF;QACA,IAAIR,QAAQF,SAAS,KAAKP,WAAW;YACnCoB,oBAAS,CAACZ,MAAM,CAACa,YAAYZ,QAAQF,SAAS,GAAGG,OAAOE,MAAM,CAAC,IAAII,IAAI,IAAIC,IAAI;QACjF;QACA,OAAOP;IACT;IAEAY,QAAOC,KAAgC,EAAEC,MAAe;QACtD,MAAMC,SAASF,iBAAiBG,kBAAY,GAAGH,QAAQ,IAAIG,kBAAY,CAACH;QACxE,IAAII,MAAMH,WAAWxB,YAAYyB,OAAOG,GAAG,GAAGH,OAAOI,GAAG,GAAGL;QAC3D,MAAMf,UAAUd;QAChB,MAAO8B,OAAOI,GAAG,GAAGF,IAAK;YACvB,MAAMG,MAAML,OAAOb,MAAM;YACzB,OAAQkB,QAAQ;gBACd,KAAK;oBAAG;wBACN,IAAIA,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQb,EAAE,GAAG6B,OAAOZ,MAAM;wBAC1B;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIiB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQZ,MAAM,GAAG4B,OAAOZ,MAAM;wBAC9B;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIiB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQX,UAAU,GAAG2B,OAAOZ,MAAM;wBAClC;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIiB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQV,KAAK,GAAGe,cAAM,CAACiB,MAAM,CAACjB,cAAM,CAACQ,MAAM,CAACG,QAAQA,OAAOb,MAAM;wBACjE;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIkB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQR,GAAG,GAAGa,cAAM,CAACiB,MAAM,CAACjB,cAAM,CAACQ,MAAM,CAACG,QAAQA,OAAOb,MAAM;wBAC/D;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIkB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQP,MAAM,GAAGuB,OAAOZ,MAAM;wBAC9B;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIiB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQN,UAAU,GAAGsB,OAAOP,IAAI;wBAChC;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIY,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQL,cAAc,GAAGqB,OAAON,KAAK;wBACrC;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIW,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQJ,eAAe,GAAGoB,OAAON,KAAK;wBACtC;oBACF;gBACA,KAAK;oBAAI;wBACP,IAAIW,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQH,SAAS,GAAG0B,cAAcZ,oBAAS,CAACE,MAAM,CAACG,QAAQA,OAAOb,MAAM;wBACxE;oBACF;gBACA,KAAK;oBAAI;wBACP,IAAIkB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQF,SAAS,GAAGyB,cAAcZ,oBAAS,CAACE,MAAM,CAACG,QAAQA,OAAOb,MAAM;wBACxE;oBACF;YACF;YACA,IAAI,AAACkB,CAAAA,MAAM,CAAA,MAAO,KAAKA,QAAQ,GAAG;gBAChC;YACF;YACAL,OAAOQ,IAAI,CAACH,MAAM;QACpB;QACA,OAAOrB;IACT;IAEAyB,UAASC,MAAW;QAClB,OAAO;YACLvC,IAAIwC,MAAMD,OAAOvC,EAAE,IAAIyC,WAAWC,MAAM,CAACH,OAAOvC,EAAE,IAAI;YACtDC,QAAQuC,MAAMD,OAAOtC,MAAM,IAAIwC,WAAWC,MAAM,CAACH,OAAOtC,MAAM,IAAI;YAClEC,YAAYsC,MAAMD,OAAOrC,UAAU,IAAIuC,WAAWC,MAAM,CAACH,OAAOrC,UAAU,IAAI;YAC9EC,OAAOwC,SAASJ,OAAOpC,KAAK,IAAIoC,OAAOpC,KAAK,GAAGC;YAC/CC,KAAKsC,SAASJ,OAAOlC,GAAG,IAAIkC,OAAOlC,GAAG,GAAGD;YACzCE,QAAQkC,MAAMD,OAAOjC,MAAM,IAAImC,WAAWC,MAAM,CAACH,OAAOjC,MAAM,IAAI;YAClEC,YAAYiC,MAAMD,OAAOhC,UAAU,IAAIkC,WAAWG,OAAO,CAACL,OAAOhC,UAAU,IAAI;YAC/EC,gBAAgBgC,MAAMD,OAAO/B,cAAc,IAAIiC,WAAWI,MAAM,CAACN,OAAO/B,cAAc,IAAI;YAC1FC,iBAAiB+B,MAAMD,OAAO9B,eAAe,IAAIgC,WAAWI,MAAM,CAACN,OAAO9B,eAAe,IAAI;YAC7FC,WAAW8B,MAAMD,OAAO7B,SAAS,IAAIoC,kBAAkBP,OAAO7B,SAAS,IAAIN;YAC3EO,WAAW6B,MAAMD,OAAO5B,SAAS,IAAImC,kBAAkBP,OAAO5B,SAAS,IAAIP;QAC7E;IACF;IAEA2C,QAAOlC,OAAqB;QAC1B,MAAMmC,MAAW,CAAC;QAClB,IAAInC,QAAQb,EAAE,KAAK,IAAI;YACrBgD,IAAIhD,EAAE,GAAGa,QAAQb,EAAE;QACrB;QACA,IAAIa,QAAQZ,MAAM,KAAK,IAAI;YACzB+C,IAAI/C,MAAM,GAAGY,QAAQZ,MAAM;QAC7B;QACA,IAAIY,QAAQX,UAAU,KAAK,IAAI;YAC7B8C,IAAI9C,UAAU,GAAGW,QAAQX,UAAU;QACrC;QACA,IAAIW,QAAQV,KAAK,KAAKC,WAAW;YAC/B4C,IAAI7C,KAAK,GAAGU,QAAQV,KAAK;QAC3B;QACA,IAAIU,QAAQR,GAAG,KAAKD,WAAW;YAC7B4C,IAAI3C,GAAG,GAAGQ,QAAQR,GAAG;QACvB;QACA,IAAIQ,QAAQP,MAAM,KAAK,IAAI;YACzB0C,IAAI1C,MAAM,GAAGO,QAAQP,MAAM;QAC7B;QACA,IAAIO,QAAQN,UAAU,KAAK,OAAO;YAChCyC,IAAIzC,UAAU,GAAGM,QAAQN,UAAU;QACrC;QACA,IAAIM,QAAQL,cAAc,KAAK,GAAG;YAChCwC,IAAIxC,cAAc,GAAGyC,KAAKC,KAAK,CAACrC,QAAQL,cAAc;QACxD;QACA,IAAIK,QAAQJ,eAAe,KAAK,GAAG;YACjCuC,IAAIvC,eAAe,GAAGwC,KAAKC,KAAK,CAACrC,QAAQJ,eAAe;QAC1D;QACA,IAAII,QAAQH,SAAS,KAAKN,WAAW;YACnC4C,IAAItC,SAAS,GAAGG,QAAQH,SAAS,CAACyC,WAAW;QAC/C;QACA,IAAItC,QAAQF,SAAS,KAAKP,WAAW;YACnC4C,IAAIrC,SAAS,GAAGE,QAAQF,SAAS,CAACwC,WAAW;QAC/C;QACA,OAAOH;IACT;IAEAI,QAAsDC,IAAQ;QAC5D,OAAO7D,aAAa8D,WAAW,CAACD,eAAAA,OAAS,CAAC;IAC5C;IACAC,aAA2Df,MAAS;QAClE,MAAM1B,UAAUd;YACHwC;QAAb1B,QAAQb,EAAE,GAAGuC,CAAAA,aAAAA,OAAOvC,EAAE,YAATuC,aAAa;YACTA;QAAjB1B,QAAQZ,MAAM,GAAGsC,CAAAA,iBAAAA,OAAOtC,MAAM,YAAbsC,iBAAiB;YACbA;QAArB1B,QAAQX,UAAU,GAAGqC,CAAAA,qBAAAA,OAAOrC,UAAU,YAAjBqC,qBAAqB;YAC1BA;QAAhB1B,QAAQV,KAAK,GAAGoC,CAAAA,gBAAAA,OAAOpC,KAAK,YAAZoC,gBAAgBnC;YAClBmC;QAAd1B,QAAQR,GAAG,GAAGkC,CAAAA,cAAAA,OAAOlC,GAAG,YAAVkC,cAAcnC;YACXmC;QAAjB1B,QAAQP,MAAM,GAAGiC,CAAAA,iBAAAA,OAAOjC,MAAM,YAAbiC,iBAAiB;YACbA;QAArB1B,QAAQN,UAAU,GAAGgC,CAAAA,qBAAAA,OAAOhC,UAAU,YAAjBgC,qBAAqB;YACjBA;QAAzB1B,QAAQL,cAAc,GAAG+B,CAAAA,yBAAAA,OAAO/B,cAAc,YAArB+B,yBAAyB;YACxBA;QAA1B1B,QAAQJ,eAAe,GAAG8B,CAAAA,0BAAAA,OAAO9B,eAAe,YAAtB8B,0BAA0B;YAChCA;QAApB1B,QAAQH,SAAS,GAAG6B,CAAAA,oBAAAA,OAAO7B,SAAS,YAAhB6B,oBAAoBnC;YACpBmC;QAApB1B,QAAQF,SAAS,GAAG4B,CAAAA,oBAAAA,OAAO5B,SAAS,YAAhB4B,oBAAoBnC;QACxC,OAAOS;IACT;AACF;AAEA,SAAS0C;IACP,OAAO;QAAEC,OAAO,EAAE;IAAC;AACrB;AAEO,MAAM7D,oBAAmD;IAC9DiB,QAAOC,OAA0B,EAAEC,SAAuB,IAAIC,kBAAY,EAAE;QAC1E,KAAK,MAAM0C,KAAK5C,QAAQ2C,KAAK,CAAE;YAC7BhE,aAAaoB,MAAM,CAAC6C,GAAI3C,OAAOE,MAAM,CAAC,IAAII,IAAI,IAAIC,IAAI;QACxD;QACA,OAAOP;IACT;IAEAY,QAAOC,KAAgC,EAAEC,MAAe;QACtD,MAAMC,SAASF,iBAAiBG,kBAAY,GAAGH,QAAQ,IAAIG,kBAAY,CAACH;QACxE,IAAII,MAAMH,WAAWxB,YAAYyB,OAAOG,GAAG,GAAGH,OAAOI,GAAG,GAAGL;QAC3D,MAAMf,UAAU0C;QAChB,MAAO1B,OAAOI,GAAG,GAAGF,IAAK;YACvB,MAAMG,MAAML,OAAOb,MAAM;YACzB,OAAQkB,QAAQ;gBACd,KAAK;oBAAG;wBACN,IAAIA,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQ2C,KAAK,CAACE,IAAI,CAAClE,aAAakC,MAAM,CAACG,QAAQA,OAAOb,MAAM;wBAC5D;oBACF;YACF;YACA,IAAI,AAACkB,CAAAA,MAAM,CAAA,MAAO,KAAKA,QAAQ,GAAG;gBAChC;YACF;YACAL,OAAOQ,IAAI,CAACH,MAAM;QACpB;QACA,OAAOrB;IACT;IAEAyB,UAASC,MAAW;QAClB,OAAO;YACLiB,OAAOf,WAAWkB,KAAK,CAACC,OAAO,CAACrB,0BAAAA,OAAQiB,KAAK,IAAIjB,OAAOiB,KAAK,CAACK,GAAG,CAAC,CAACC,IAAWtE,aAAa8C,QAAQ,CAACwB,MAAM,EAAE;QAC9G;IACF;IAEAf,QAAOlC,OAA0B;YAE3BA;QADJ,MAAMmC,MAAW,CAAC;QAClB,KAAInC,iBAAAA,QAAQ2C,KAAK,qBAAb3C,eAAee,MAAM,EAAE;YACzBoB,IAAIQ,KAAK,GAAG3C,QAAQ2C,KAAK,CAACK,GAAG,CAAC,CAACC,IAAMtE,aAAauD,MAAM,CAACe;QAC3D;QACA,OAAOd;IACT;IAEAI,QAA2DC,IAAQ;QACjE,OAAO1D,kBAAkB2D,WAAW,CAACD,eAAAA,OAAS,CAAC;IACjD;IACAC,aAAgEf,MAAS;YAEvDA;QADhB,MAAM1B,UAAU0C;QAChB1C,QAAQ2C,KAAK,GAAGjB,EAAAA,gBAAAA,OAAOiB,KAAK,qBAAZjB,cAAcsB,GAAG,CAAC,CAACC,IAAMtE,aAAa8D,WAAW,CAACQ,QAAO,EAAE;QAC3E,OAAOjD;IACT;AACF;AAEA,SAASkD;IACP,OAAO;QAAE9D,QAAQ;QAAIC,YAAY;QAAIC,OAAOC;IAAU;AACxD;AAEO,MAAMf,yBAA6D;IACxEuB,QAAOC,OAA+B,EAAEC,SAAuB,IAAIC,kBAAY,EAAE;QAC/E,IAAIF,QAAQZ,MAAM,KAAK,IAAI;YACzBa,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQZ,MAAM;QACzC;QACA,IAAIY,QAAQX,UAAU,KAAK,IAAI;YAC7BY,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQX,UAAU;QAC7C;QACA,IAAIW,QAAQV,KAAK,KAAKC,WAAW;YAC/Bc,cAAM,CAACN,MAAM,CAACM,cAAM,CAACC,IAAI,CAACN,QAAQV,KAAK,GAAGW,OAAOE,MAAM,CAAC,IAAII,IAAI,IAAIC,IAAI;QAC1E;QACA,OAAOP;IACT;IAEAY,QAAOC,KAAgC,EAAEC,MAAe;QACtD,MAAMC,SAASF,iBAAiBG,kBAAY,GAAGH,QAAQ,IAAIG,kBAAY,CAACH;QACxE,IAAII,MAAMH,WAAWxB,YAAYyB,OAAOG,GAAG,GAAGH,OAAOI,GAAG,GAAGL;QAC3D,MAAMf,UAAUkD;QAChB,MAAOlC,OAAOI,GAAG,GAAGF,IAAK;YACvB,MAAMG,MAAML,OAAOb,MAAM;YACzB,OAAQkB,QAAQ;gBACd,KAAK;oBAAG;wBACN,IAAIA,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQZ,MAAM,GAAG4B,OAAOZ,MAAM;wBAC9B;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIiB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQX,UAAU,GAAG2B,OAAOZ,MAAM;wBAClC;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIiB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQV,KAAK,GAAGe,cAAM,CAACiB,MAAM,CAACjB,cAAM,CAACQ,MAAM,CAACG,QAAQA,OAAOb,MAAM;wBACjE;oBACF;YACF;YACA,IAAI,AAACkB,CAAAA,MAAM,CAAA,MAAO,KAAKA,QAAQ,GAAG;gBAChC;YACF;YACAL,OAAOQ,IAAI,CAACH,MAAM;QACpB;QACA,OAAOrB;IACT;IAEAyB,UAASC,MAAW;QAClB,OAAO;YACLtC,QAAQuC,MAAMD,OAAOtC,MAAM,IAAIwC,WAAWC,MAAM,CAACH,OAAOtC,MAAM,IAAI;YAClEC,YAAYsC,MAAMD,OAAOrC,UAAU,IAAIuC,WAAWC,MAAM,CAACH,OAAOrC,UAAU,IAAI;YAC9EC,OAAOwC,SAASJ,OAAOpC,KAAK,IAAIoC,OAAOpC,KAAK,GAAGC;QACjD;IACF;IAEA2C,QAAOlC,OAA+B;QACpC,MAAMmC,MAAW,CAAC;QAClB,IAAInC,QAAQZ,MAAM,KAAK,IAAI;YACzB+C,IAAI/C,MAAM,GAAGY,QAAQZ,MAAM;QAC7B;QACA,IAAIY,QAAQX,UAAU,KAAK,IAAI;YAC7B8C,IAAI9C,UAAU,GAAGW,QAAQX,UAAU;QACrC;QACA,IAAIW,QAAQV,KAAK,KAAKC,WAAW;YAC/B4C,IAAI7C,KAAK,GAAGU,QAAQV,KAAK;QAC3B;QACA,OAAO6C;IACT;IAEAI,QAAgEC,IAAQ;QACtE,OAAOhE,uBAAuBiE,WAAW,CAACD,eAAAA,OAAS,CAAC;IACtD;IACAC,aAAqEf,MAAS;QAC5E,MAAM1B,UAAUkD;YACCxB;QAAjB1B,QAAQZ,MAAM,GAAGsC,CAAAA,iBAAAA,OAAOtC,MAAM,YAAbsC,iBAAiB;YACbA;QAArB1B,QAAQX,UAAU,GAAGqC,CAAAA,qBAAAA,OAAOrC,UAAU,YAAjBqC,qBAAqB;YAC1BA;QAAhB1B,QAAQV,KAAK,GAAGoC,CAAAA,gBAAAA,OAAOpC,KAAK,YAAZoC,gBAAgBnC;QAChC,OAAOS;IACT;AACF;AAEA,SAASmD;IACP,OAAO;QAAE9D,YAAY;QAAID,QAAQ;IAAG;AACtC;AAEO,MAAMH,0BAA+D;IAC1Ec,QAAOC,OAAgC,EAAEC,SAAuB,IAAIC,kBAAY,EAAE;QAChF,IAAIF,QAAQX,UAAU,KAAK,IAAI;YAC7BY,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQX,UAAU;QAC7C;QACA,IAAIW,QAAQZ,MAAM,KAAK,IAAI;YACzBa,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQZ,MAAM;QACzC;QACA,OAAOa;IACT;IAEAY,QAAOC,KAAgC,EAAEC,MAAe;QACtD,MAAMC,SAASF,iBAAiBG,kBAAY,GAAGH,QAAQ,IAAIG,kBAAY,CAACH;QACxE,IAAII,MAAMH,WAAWxB,YAAYyB,OAAOG,GAAG,GAAGH,OAAOI,GAAG,GAAGL;QAC3D,MAAMf,UAAUmD;QAChB,MAAOnC,OAAOI,GAAG,GAAGF,IAAK;YACvB,MAAMG,MAAML,OAAOb,MAAM;YACzB,OAAQkB,QAAQ;gBACd,KAAK;oBAAG;wBACN,IAAIA,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQX,UAAU,GAAG2B,OAAOZ,MAAM;wBAClC;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIiB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQZ,MAAM,GAAG4B,OAAOZ,MAAM;wBAC9B;oBACF;YACF;YACA,IAAI,AAACiB,CAAAA,MAAM,CAAA,MAAO,KAAKA,QAAQ,GAAG;gBAChC;YACF;YACAL,OAAOQ,IAAI,CAACH,MAAM;QACpB;QACA,OAAOrB;IACT;IAEAyB,UAASC,MAAW;QAClB,OAAO;YACLrC,YAAYsC,MAAMD,OAAOrC,UAAU,IAAIuC,WAAWC,MAAM,CAACH,OAAOrC,UAAU,IAAI;YAC9ED,QAAQuC,MAAMD,OAAOtC,MAAM,IAAIwC,WAAWC,MAAM,CAACH,OAAOtC,MAAM,IAAI;QACpE;IACF;IAEA8C,QAAOlC,OAAgC;QACrC,MAAMmC,MAAW,CAAC;QAClB,IAAInC,QAAQX,UAAU,KAAK,IAAI;YAC7B8C,IAAI9C,UAAU,GAAGW,QAAQX,UAAU;QACrC;QACA,IAAIW,QAAQZ,MAAM,KAAK,IAAI;YACzB+C,IAAI/C,MAAM,GAAGY,QAAQZ,MAAM;QAC7B;QACA,OAAO+C;IACT;IAEAI,QAAiEC,IAAQ;QACvE,OAAOvD,wBAAwBwD,WAAW,CAACD,eAAAA,OAAS,CAAC;IACvD;IACAC,aAAsEf,MAAS;QAC7E,MAAM1B,UAAUmD;YACKzB;QAArB1B,QAAQX,UAAU,GAAGqC,CAAAA,qBAAAA,OAAOrC,UAAU,YAAjBqC,qBAAqB;YACzBA;QAAjB1B,QAAQZ,MAAM,GAAGsC,CAAAA,iBAAAA,OAAOtC,MAAM,YAAbsC,iBAAiB;QAClC,OAAO1B;IACT;AACF;AAEA,SAASoD;IACP,OAAO;QAAEhE,QAAQ;QAAIC,YAAY;QAAII,QAAQ;IAAG;AAClD;AAEO,MAAMlB,mCAAiF;IAC5FwB,QAAOC,OAAyC,EAAEC,SAAuB,IAAIC,kBAAY,EAAE;QACzF,IAAIF,QAAQZ,MAAM,KAAK,IAAI;YACzBa,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQZ,MAAM;QACzC;QACA,IAAIY,QAAQX,UAAU,KAAK,IAAI;YAC7BY,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQX,UAAU;QAC7C;QACA,IAAIW,QAAQP,MAAM,KAAK,IAAI;YACzBQ,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQP,MAAM;QACzC;QACA,OAAOQ;IACT;IAEAY,QAAOC,KAAgC,EAAEC,MAAe;QACtD,MAAMC,SAASF,iBAAiBG,kBAAY,GAAGH,QAAQ,IAAIG,kBAAY,CAACH;QACxE,IAAII,MAAMH,WAAWxB,YAAYyB,OAAOG,GAAG,GAAGH,OAAOI,GAAG,GAAGL;QAC3D,MAAMf,UAAUoD;QAChB,MAAOpC,OAAOI,GAAG,GAAGF,IAAK;YACvB,MAAMG,MAAML,OAAOb,MAAM;YACzB,OAAQkB,QAAQ;gBACd,KAAK;oBAAG;wBACN,IAAIA,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQZ,MAAM,GAAG4B,OAAOZ,MAAM;wBAC9B;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIiB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQX,UAAU,GAAG2B,OAAOZ,MAAM;wBAClC;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIiB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQP,MAAM,GAAGuB,OAAOZ,MAAM;wBAC9B;oBACF;YACF;YACA,IAAI,AAACiB,CAAAA,MAAM,CAAA,MAAO,KAAKA,QAAQ,GAAG;gBAChC;YACF;YACAL,OAAOQ,IAAI,CAACH,MAAM;QACpB;QACA,OAAOrB;IACT;IAEAyB,UAASC,MAAW;QAClB,OAAO;YACLtC,QAAQuC,MAAMD,OAAOtC,MAAM,IAAIwC,WAAWC,MAAM,CAACH,OAAOtC,MAAM,IAAI;YAClEC,YAAYsC,MAAMD,OAAOrC,UAAU,IAAIuC,WAAWC,MAAM,CAACH,OAAOrC,UAAU,IAAI;YAC9EI,QAAQkC,MAAMD,OAAOjC,MAAM,IAAImC,WAAWC,MAAM,CAACH,OAAOjC,MAAM,IAAI;QACpE;IACF;IAEAyC,QAAOlC,OAAyC;QAC9C,MAAMmC,MAAW,CAAC;QAClB,IAAInC,QAAQZ,MAAM,KAAK,IAAI;YACzB+C,IAAI/C,MAAM,GAAGY,QAAQZ,MAAM;QAC7B;QACA,IAAIY,QAAQX,UAAU,KAAK,IAAI;YAC7B8C,IAAI9C,UAAU,GAAGW,QAAQX,UAAU;QACrC;QACA,IAAIW,QAAQP,MAAM,KAAK,IAAI;YACzB0C,IAAI1C,MAAM,GAAGO,QAAQP,MAAM;QAC7B;QACA,OAAO0C;IACT;IAEAI,QACEC,IAAQ;QAER,OAAOjE,iCAAiCkE,WAAW,CAACD,eAAAA,OAAS,CAAC;IAChE;IACAC,aACEf,MAAS;QAET,MAAM1B,UAAUoD;YACC1B;QAAjB1B,QAAQZ,MAAM,GAAGsC,CAAAA,iBAAAA,OAAOtC,MAAM,YAAbsC,iBAAiB;YACbA;QAArB1B,QAAQX,UAAU,GAAGqC,CAAAA,qBAAAA,OAAOrC,UAAU,YAAjBqC,qBAAqB;YACzBA;QAAjB1B,QAAQP,MAAM,GAAGiC,CAAAA,iBAAAA,OAAOjC,MAAM,YAAbiC,iBAAiB;QAClC,OAAO1B;IACT;AACF;AAEA,SAASqD;IACP,OAAO;QAAEjE,QAAQ;QAAIC,YAAY;QAAII,QAAQ;IAAG;AAClD;AAEO,MAAMf,0BAA+D;IAC1EqB,QAAOC,OAAgC,EAAEC,SAAuB,IAAIC,kBAAY,EAAE;QAChF,IAAIF,QAAQZ,MAAM,KAAK,IAAI;YACzBa,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQZ,MAAM;QACzC;QACA,IAAIY,QAAQX,UAAU,KAAK,IAAI;YAC7BY,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQX,UAAU;QAC7C;QACA,IAAIW,QAAQP,MAAM,KAAK,IAAI;YACzBQ,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQP,MAAM;QACzC;QACA,OAAOQ;IACT;IAEAY,QAAOC,KAAgC,EAAEC,MAAe;QACtD,MAAMC,SAASF,iBAAiBG,kBAAY,GAAGH,QAAQ,IAAIG,kBAAY,CAACH;QACxE,IAAII,MAAMH,WAAWxB,YAAYyB,OAAOG,GAAG,GAAGH,OAAOI,GAAG,GAAGL;QAC3D,MAAMf,UAAUqD;QAChB,MAAOrC,OAAOI,GAAG,GAAGF,IAAK;YACvB,MAAMG,MAAML,OAAOb,MAAM;YACzB,OAAQkB,QAAQ;gBACd,KAAK;oBAAG;wBACN,IAAIA,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQZ,MAAM,GAAG4B,OAAOZ,MAAM;wBAC9B;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIiB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQX,UAAU,GAAG2B,OAAOZ,MAAM;wBAClC;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIiB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQP,MAAM,GAAGuB,OAAOZ,MAAM;wBAC9B;oBACF;YACF;YACA,IAAI,AAACiB,CAAAA,MAAM,CAAA,MAAO,KAAKA,QAAQ,GAAG;gBAChC;YACF;YACAL,OAAOQ,IAAI,CAACH,MAAM;QACpB;QACA,OAAOrB;IACT;IAEAyB,UAASC,MAAW;QAClB,OAAO;YACLtC,QAAQuC,MAAMD,OAAOtC,MAAM,IAAIwC,WAAWC,MAAM,CAACH,OAAOtC,MAAM,IAAI;YAClEC,YAAYsC,MAAMD,OAAOrC,UAAU,IAAIuC,WAAWC,MAAM,CAACH,OAAOrC,UAAU,IAAI;YAC9EI,QAAQkC,MAAMD,OAAOjC,MAAM,IAAImC,WAAWC,MAAM,CAACH,OAAOjC,MAAM,IAAI;QACpE;IACF;IAEAyC,QAAOlC,OAAgC;QACrC,MAAMmC,MAAW,CAAC;QAClB,IAAInC,QAAQZ,MAAM,KAAK,IAAI;YACzB+C,IAAI/C,MAAM,GAAGY,QAAQZ,MAAM;QAC7B;QACA,IAAIY,QAAQX,UAAU,KAAK,IAAI;YAC7B8C,IAAI9C,UAAU,GAAGW,QAAQX,UAAU;QACrC;QACA,IAAIW,QAAQP,MAAM,KAAK,IAAI;YACzB0C,IAAI1C,MAAM,GAAGO,QAAQP,MAAM;QAC7B;QACA,OAAO0C;IACT;IAEAI,QAAiEC,IAAQ;QACvE,OAAO9D,wBAAwB+D,WAAW,CAACD,eAAAA,OAAS,CAAC;IACvD;IACAC,aAAsEf,MAAS;QAC7E,MAAM1B,UAAUqD;YACC3B;QAAjB1B,QAAQZ,MAAM,GAAGsC,CAAAA,iBAAAA,OAAOtC,MAAM,YAAbsC,iBAAiB;YACbA;QAArB1B,QAAQX,UAAU,GAAGqC,CAAAA,qBAAAA,OAAOrC,UAAU,YAAjBqC,qBAAqB;YACzBA;QAAjB1B,QAAQP,MAAM,GAAGiC,CAAAA,iBAAAA,OAAOjC,MAAM,YAAbiC,iBAAiB;QAClC,OAAO1B;IACT;AACF;AAEA,SAASsD;IACP,OAAO;QAAElE,QAAQ;QAAIC,YAAY;IAAG;AACtC;AAEO,MAAMT,2BAAiE;IAC5EmB,QAAOC,OAAiC,EAAEC,SAAuB,IAAIC,kBAAY,EAAE;QACjF,IAAIF,QAAQZ,MAAM,KAAK,IAAI;YACzBa,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQZ,MAAM;QACzC;QACA,IAAIY,QAAQX,UAAU,KAAK,IAAI;YAC7BY,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQX,UAAU;QAC7C;QACA,OAAOY;IACT;IAEAY,QAAOC,KAAgC,EAAEC,MAAe;QACtD,MAAMC,SAASF,iBAAiBG,kBAAY,GAAGH,QAAQ,IAAIG,kBAAY,CAACH;QACxE,IAAII,MAAMH,WAAWxB,YAAYyB,OAAOG,GAAG,GAAGH,OAAOI,GAAG,GAAGL;QAC3D,MAAMf,UAAUsD;QAChB,MAAOtC,OAAOI,GAAG,GAAGF,IAAK;YACvB,MAAMG,MAAML,OAAOb,MAAM;YACzB,OAAQkB,QAAQ;gBACd,KAAK;oBAAG;wBACN,IAAIA,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQZ,MAAM,GAAG4B,OAAOZ,MAAM;wBAC9B;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIiB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQX,UAAU,GAAG2B,OAAOZ,MAAM;wBAClC;oBACF;YACF;YACA,IAAI,AAACiB,CAAAA,MAAM,CAAA,MAAO,KAAKA,QAAQ,GAAG;gBAChC;YACF;YACAL,OAAOQ,IAAI,CAACH,MAAM;QACpB;QACA,OAAOrB;IACT;IAEAyB,UAASC,MAAW;QAClB,OAAO;YACLtC,QAAQuC,MAAMD,OAAOtC,MAAM,IAAIwC,WAAWC,MAAM,CAACH,OAAOtC,MAAM,IAAI;YAClEC,YAAYsC,MAAMD,OAAOrC,UAAU,IAAIuC,WAAWC,MAAM,CAACH,OAAOrC,UAAU,IAAI;QAChF;IACF;IAEA6C,QAAOlC,OAAiC;QACtC,MAAMmC,MAAW,CAAC;QAClB,IAAInC,QAAQZ,MAAM,KAAK,IAAI;YACzB+C,IAAI/C,MAAM,GAAGY,QAAQZ,MAAM;QAC7B;QACA,IAAIY,QAAQX,UAAU,KAAK,IAAI;YAC7B8C,IAAI9C,UAAU,GAAGW,QAAQX,UAAU;QACrC;QACA,OAAO8C;IACT;IAEAI,QAAkEC,IAAQ;QACxE,OAAO5D,yBAAyB6D,WAAW,CAACD,eAAAA,OAAS,CAAC;IACxD;IACAC,aAAuEf,MAAS;QAC9E,MAAM1B,UAAUsD;YACC5B;QAAjB1B,QAAQZ,MAAM,GAAGsC,CAAAA,iBAAAA,OAAOtC,MAAM,YAAbsC,iBAAiB;YACbA;QAArB1B,QAAQX,UAAU,GAAGqC,CAAAA,qBAAAA,OAAOrC,UAAU,YAAjBqC,qBAAqB;QAC1C,OAAO1B;IACT;AACF;AAEA,SAASuD;IACP,OAAO;QAAEpE,IAAI;QAAIC,QAAQ;IAAG;AAC9B;AAEO,MAAMX,kBAA+C;IAC1DsB,QAAOC,OAAwB,EAAEC,SAAuB,IAAIC,kBAAY,EAAE;QACxE,IAAIF,QAAQb,EAAE,KAAK,IAAI;YACrBc,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQb,EAAE;QACrC;QACA,IAAIa,QAAQZ,MAAM,KAAK,IAAI;YACzBa,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACJ,QAAQZ,MAAM;QACzC;QACA,OAAOa;IACT;IAEAY,QAAOC,KAAgC,EAAEC,MAAe;QACtD,MAAMC,SAASF,iBAAiBG,kBAAY,GAAGH,QAAQ,IAAIG,kBAAY,CAACH;QACxE,IAAII,MAAMH,WAAWxB,YAAYyB,OAAOG,GAAG,GAAGH,OAAOI,GAAG,GAAGL;QAC3D,MAAMf,UAAUuD;QAChB,MAAOvC,OAAOI,GAAG,GAAGF,IAAK;YACvB,MAAMG,MAAML,OAAOb,MAAM;YACzB,OAAQkB,QAAQ;gBACd,KAAK;oBAAG;wBACN,IAAIA,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQb,EAAE,GAAG6B,OAAOZ,MAAM;wBAC1B;oBACF;gBACA,KAAK;oBAAG;wBACN,IAAIiB,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQZ,MAAM,GAAG4B,OAAOZ,MAAM;wBAC9B;oBACF;YACF;YACA,IAAI,AAACiB,CAAAA,MAAM,CAAA,MAAO,KAAKA,QAAQ,GAAG;gBAChC;YACF;YACAL,OAAOQ,IAAI,CAACH,MAAM;QACpB;QACA,OAAOrB;IACT;IAEAyB,UAASC,MAAW;QAClB,OAAO;YACLvC,IAAIwC,MAAMD,OAAOvC,EAAE,IAAIyC,WAAWC,MAAM,CAACH,OAAOvC,EAAE,IAAI;YACtDC,QAAQuC,MAAMD,OAAOtC,MAAM,IAAIwC,WAAWC,MAAM,CAACH,OAAOtC,MAAM,IAAI;QACpE;IACF;IAEA8C,QAAOlC,OAAwB;QAC7B,MAAMmC,MAAW,CAAC;QAClB,IAAInC,QAAQb,EAAE,KAAK,IAAI;YACrBgD,IAAIhD,EAAE,GAAGa,QAAQb,EAAE;QACrB;QACA,IAAIa,QAAQZ,MAAM,KAAK,IAAI;YACzB+C,IAAI/C,MAAM,GAAGY,QAAQZ,MAAM;QAC7B;QACA,OAAO+C;IACT;IAEAI,QAAyDC,IAAQ;QAC/D,OAAO/D,gBAAgBgE,WAAW,CAACD,eAAAA,OAAS,CAAC;IAC/C;IACAC,aAA8Df,MAAS;QACrE,MAAM1B,UAAUuD;YACH7B;QAAb1B,QAAQb,EAAE,GAAGuC,CAAAA,aAAAA,OAAOvC,EAAE,YAATuC,aAAa;YACTA;QAAjB1B,QAAQZ,MAAM,GAAGsC,CAAAA,iBAAAA,OAAOtC,MAAM,YAAbsC,iBAAiB;QAClC,OAAO1B;IACT;AACF;AAEA,SAASwD;IACP,OAAO;QAAEC,KAAK,EAAE;IAAC;AACnB;AAEO,MAAMzE,gCAA2E;IACtFe,QAAOC,OAAsC,EAAEC,SAAuB,IAAIC,kBAAY,EAAE;QACtF,KAAK,MAAM0C,KAAK5C,QAAQyD,GAAG,CAAE;YAC3BxD,OAAOE,MAAM,CAAC,IAAIC,MAAM,CAACwC;QAC3B;QACA,OAAO3C;IACT;IAEAY,QAAOC,KAAgC,EAAEC,MAAe;QACtD,MAAMC,SAASF,iBAAiBG,kBAAY,GAAGH,QAAQ,IAAIG,kBAAY,CAACH;QACxE,IAAII,MAAMH,WAAWxB,YAAYyB,OAAOG,GAAG,GAAGH,OAAOI,GAAG,GAAGL;QAC3D,MAAMf,UAAUwD;QAChB,MAAOxC,OAAOI,GAAG,GAAGF,IAAK;YACvB,MAAMG,MAAML,OAAOb,MAAM;YACzB,OAAQkB,QAAQ;gBACd,KAAK;oBAAG;wBACN,IAAIA,QAAQ,IAAI;4BACd;wBACF;wBAEArB,QAAQyD,GAAG,CAACZ,IAAI,CAAC7B,OAAOZ,MAAM;wBAC9B;oBACF;YACF;YACA,IAAI,AAACiB,CAAAA,MAAM,CAAA,MAAO,KAAKA,QAAQ,GAAG;gBAChC;YACF;YACAL,OAAOQ,IAAI,CAACH,MAAM;QACpB;QACA,OAAOrB;IACT;IAEAyB,UAASC,MAAW;QAClB,OAAO;YAAE+B,KAAK7B,WAAWkB,KAAK,CAACC,OAAO,CAACrB,0BAAAA,OAAQ+B,GAAG,IAAI/B,OAAO+B,GAAG,CAACT,GAAG,CAAC,CAACC,IAAWrB,WAAWC,MAAM,CAACoB,MAAM,EAAE;QAAC;IAC9G;IAEAf,QAAOlC,OAAsC;YAEvCA;QADJ,MAAMmC,MAAW,CAAC;QAClB,KAAInC,eAAAA,QAAQyD,GAAG,qBAAXzD,aAAae,MAAM,EAAE;YACvBoB,IAAIsB,GAAG,GAAGzD,QAAQyD,GAAG;QACvB;QACA,OAAOtB;IACT;IAEAI,QAAuEC,IAAQ;QAC7E,OAAOxD,8BAA8ByD,WAAW,CAACD,eAAAA,OAAS,CAAC;IAC7D;IACAC,aACEf,MAAS;YAGKA;QADd,MAAM1B,UAAUwD;QAChBxD,QAAQyD,GAAG,GAAG/B,EAAAA,cAAAA,OAAO+B,GAAG,qBAAV/B,YAAYsB,GAAG,CAAC,CAACC,IAAMA,OAAM,EAAE;QAC7C,OAAOjD;IACT;AACF;AAGO,MAAMjB,eAAe;IAC1B2E,iBAAiB;QACfC,MAAM;QACNC,eAAe;QACfC,gBAAgB;QAChBC,kBAAkB,CAACC,QAAkCC,OAAOC,IAAI,CAACzF,uBAAuBuB,MAAM,CAACgE,OAAOG,MAAM;QAC5GC,oBAAoB,CAACJ,QAAkBvF,uBAAuBqC,MAAM,CAACkD;QACrEK,mBAAmB,CAACL,QAAwBC,OAAOC,IAAI,CAACtF,aAAaoB,MAAM,CAACgE,OAAOG,MAAM;QACzFG,qBAAqB,CAACN,QAAkBpF,aAAakC,MAAM,CAACkD;IAC9D;IACAO,kBAAkB;QAChBX,MAAM;QACNC,eAAe;QACfC,gBAAgB;QAChBC,kBAAkB,CAACC,QAAmCC,OAAOC,IAAI,CAAChF,wBAAwBc,MAAM,CAACgE,OAAOG,MAAM;QAC9GC,oBAAoB,CAACJ,QAAkB9E,wBAAwB4B,MAAM,CAACkD;QACtEK,mBAAmB,CAACL,QAAwBC,OAAOC,IAAI,CAACtF,aAAaoB,MAAM,CAACgE,OAAOG,MAAM;QACzFG,qBAAqB,CAACN,QAAkBpF,aAAakC,MAAM,CAACkD;IAC9D;IACAQ,+BAA+B;QAC7BZ,MAAM;QACNC,eAAe;QACfC,gBAAgB;QAChBC,kBAAkB,CAACC,QACjBC,OAAOC,IAAI,CAAC1F,iCAAiCwB,MAAM,CAACgE,OAAOG,MAAM;QACnEC,oBAAoB,CAACJ,QAAkBxF,iCAAiCsC,MAAM,CAACkD;QAC/EK,mBAAmB,CAACL,QAA6BC,OAAOC,IAAI,CAACnF,kBAAkBiB,MAAM,CAACgE,OAAOG,MAAM;QACnGG,qBAAqB,CAACN,QAAkBjF,kBAAkB+B,MAAM,CAACkD;IACnE;IACAS,qBAAqB;QACnBb,MAAM;QACNC,eAAe;QACfC,gBAAgB;QAChBC,kBAAkB,CAACC,QAAmCC,OAAOC,IAAI,CAACvF,wBAAwBqB,MAAM,CAACgE,OAAOG,MAAM;QAC9GC,oBAAoB,CAACJ,QAAkBrF,wBAAwBmC,MAAM,CAACkD;QACtEK,mBAAmB,CAACL,QAAwBC,OAAOC,IAAI,CAACtF,aAAaoB,MAAM,CAACgE,OAAOG,MAAM;QACzFG,qBAAqB,CAACN,QAAkBpF,aAAakC,MAAM,CAACkD;IAC9D;IACAU,uBAAuB;QACrBd,MAAM;QACNC,eAAe;QACfC,gBAAgB;QAChBC,kBAAkB,CAACC,QAAoCC,OAAOC,IAAI,CAACrF,yBAAyBmB,MAAM,CAACgE,OAAOG,MAAM;QAChHC,oBAAoB,CAACJ,QAAkBnF,yBAAyBiC,MAAM,CAACkD;QACvEK,mBAAmB,CAACL,QAA6BC,OAAOC,IAAI,CAACnF,kBAAkBiB,MAAM,CAACgE,OAAOG,MAAM;QACnGG,qBAAqB,CAACN,QAAkBjF,kBAAkB+B,MAAM,CAACkD;IACnE;IACAW,aAAa;QACXf,MAAM;QACNC,eAAe;QACfC,gBAAgB;QAChBC,kBAAkB,CAACC,QAA2BC,OAAOC,IAAI,CAACxF,gBAAgBsB,MAAM,CAACgE,OAAOG,MAAM;QAC9FC,oBAAoB,CAACJ,QAAkBtF,gBAAgBoC,MAAM,CAACkD;QAC9DK,mBAAmB,CAACL,QAAwBC,OAAOC,IAAI,CAACtF,aAAaoB,MAAM,CAACgE,OAAOG,MAAM;QACzFG,qBAAqB,CAACN,QAAkBpF,aAAakC,MAAM,CAACkD;IAC9D;IACAY,wBAAwB;QACtBhB,MAAM;QACNC,eAAe;QACfC,gBAAgB;QAChBC,kBAAkB,CAACC,QACjBC,OAAOC,IAAI,CAACjF,8BAA8Be,MAAM,CAACgE,OAAOG,MAAM;QAChEC,oBAAoB,CAACJ,QAAkB/E,8BAA8B6B,MAAM,CAACkD;QAC5EK,mBAAmB,CAACL,QAA6BC,OAAOC,IAAI,CAACnF,kBAAkBiB,MAAM,CAACgE,OAAOG,MAAM;QACnGG,qBAAqB,CAACN,QAAkBjF,kBAAkB+B,MAAM,CAACkD;IACnE;AACF;AAwHO,MAAMlF,cAAc+F,IAAAA,oCAA4B,EAAC7F,cAAc;AAkBtE,SAAS6B,YAAYiE,IAAU;IAC7B,MAAMC,UAAU1C,KAAK2C,KAAK,CAACF,KAAKG,OAAO,KAAK;IAC5C,MAAMC,QAAQ,AAACJ,KAAKG,OAAO,KAAK,OAAS;IACzC,OAAO;QAAEF;QAASG;IAAM;AAC1B;AAEA,SAAS1D,cAAc2D,CAAY;IACjC,IAAIC,SAAS,AAACD,CAAAA,EAAEJ,OAAO,IAAI,CAAA,IAAK;IAChCK,UAAU,AAACD,CAAAA,EAAED,KAAK,IAAI,CAAA,IAAK;IAC3B,OAAO,IAAIrD,WAAWwD,IAAI,CAACD;AAC7B;AAEA,SAASlD,kBAAkBoD,CAAM;IAC/B,IAAIA,aAAazD,WAAWwD,IAAI,EAAE;QAChC,OAAOC;IACT,OAAO,IAAI,OAAOA,MAAM,UAAU;QAChC,OAAO,IAAIzD,WAAWwD,IAAI,CAACC;IAC7B,OAAO;QACL,OAAO9D,cAAcZ,oBAAS,CAACc,QAAQ,CAAC4D;IAC1C;AACF;AAEA,SAASvD,SAASiC,KAAU;IAC1B,OAAO,OAAOA,UAAU,YAAYA,UAAU;AAChD;AAEA,SAASpC,MAAMoC,KAAU;IACvB,OAAOA,UAAU,QAAQA,UAAUxE;AACrC"}
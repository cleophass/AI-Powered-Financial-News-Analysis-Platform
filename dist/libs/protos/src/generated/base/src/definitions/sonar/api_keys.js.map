{"version":3,"sources":["../../../../../../../../../libs/protos/src/generated/base/src/definitions/sonar/api_keys.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.5.0\n//   protoc               v5.29.1\n// source: src/definitions/sonar/api_keys.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nimport {\n  type CallOptions,\n  ChannelCredentials,\n  Client,\n  type ClientOptions,\n  type ClientUnaryCall,\n  type handleUnaryCall,\n  makeGenericClientConstructor,\n  Metadata,\n  type ServiceError,\n  type UntypedServiceImplementation,\n} from \"@grpc/grpc-js\";\nimport { Empty } from \"../../../google/protobuf/empty\";\n\nexport interface CreateApiKeyRequest {\n  userId: string;\n  apiKey: string;\n  apiSecret: string;\n  broker: string;\n  name?: string | undefined;\n}\n\nexport interface DeleteApiKeyRequest {\n  userId: string;\n  id: string;\n}\n\nexport interface GetApiKeyRequest {\n  userId: string;\n  broker: string;\n}\n\nexport interface ListApiKeysByUserIdRequest {\n  userId: string;\n}\n\nexport interface Ed25519KeyResponse {\n  publicKey: string;\n}\n\nexport interface ApiKeyResponse {\n  id: string;\n  userId: string;\n  apiKey: string;\n  broker: string;\n  createdAt: string;\n  name?: string | undefined;\n}\n\nexport interface ApiKeysListResponse {\n  apiKeys: ApiKeyResponse[];\n}\n\nexport interface GetValidBrokersRequest {\n  userId: string;\n}\n\nexport interface ValidBrokersResponse {\n  brokers: string[];\n}\n\nfunction createBaseCreateApiKeyRequest(): CreateApiKeyRequest {\n  return { userId: \"\", apiKey: \"\", apiSecret: \"\", broker: \"\", name: undefined };\n}\n\nexport const CreateApiKeyRequest: MessageFns<CreateApiKeyRequest> = {\n  encode(message: CreateApiKeyRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.apiKey !== \"\") {\n      writer.uint32(18).string(message.apiKey);\n    }\n    if (message.apiSecret !== \"\") {\n      writer.uint32(26).string(message.apiSecret);\n    }\n    if (message.broker !== \"\") {\n      writer.uint32(34).string(message.broker);\n    }\n    if (message.name !== undefined) {\n      writer.uint32(42).string(message.name);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): CreateApiKeyRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCreateApiKeyRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.apiKey = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.apiSecret = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.broker = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): CreateApiKeyRequest {\n    return {\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      apiKey: isSet(object.apiKey) ? globalThis.String(object.apiKey) : \"\",\n      apiSecret: isSet(object.apiSecret) ? globalThis.String(object.apiSecret) : \"\",\n      broker: isSet(object.broker) ? globalThis.String(object.broker) : \"\",\n      name: isSet(object.name) ? globalThis.String(object.name) : undefined,\n    };\n  },\n\n  toJSON(message: CreateApiKeyRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.apiKey !== \"\") {\n      obj.apiKey = message.apiKey;\n    }\n    if (message.apiSecret !== \"\") {\n      obj.apiSecret = message.apiSecret;\n    }\n    if (message.broker !== \"\") {\n      obj.broker = message.broker;\n    }\n    if (message.name !== undefined) {\n      obj.name = message.name;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<CreateApiKeyRequest>, I>>(base?: I): CreateApiKeyRequest {\n    return CreateApiKeyRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<CreateApiKeyRequest>, I>>(object: I): CreateApiKeyRequest {\n    const message = createBaseCreateApiKeyRequest();\n    message.userId = object.userId ?? \"\";\n    message.apiKey = object.apiKey ?? \"\";\n    message.apiSecret = object.apiSecret ?? \"\";\n    message.broker = object.broker ?? \"\";\n    message.name = object.name ?? undefined;\n    return message;\n  },\n};\n\nfunction createBaseDeleteApiKeyRequest(): DeleteApiKeyRequest {\n  return { userId: \"\", id: \"\" };\n}\n\nexport const DeleteApiKeyRequest: MessageFns<DeleteApiKeyRequest> = {\n  encode(message: DeleteApiKeyRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.id !== \"\") {\n      writer.uint32(18).string(message.id);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): DeleteApiKeyRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseDeleteApiKeyRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): DeleteApiKeyRequest {\n    return {\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n    };\n  },\n\n  toJSON(message: DeleteApiKeyRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<DeleteApiKeyRequest>, I>>(base?: I): DeleteApiKeyRequest {\n    return DeleteApiKeyRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<DeleteApiKeyRequest>, I>>(object: I): DeleteApiKeyRequest {\n    const message = createBaseDeleteApiKeyRequest();\n    message.userId = object.userId ?? \"\";\n    message.id = object.id ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseGetApiKeyRequest(): GetApiKeyRequest {\n  return { userId: \"\", broker: \"\" };\n}\n\nexport const GetApiKeyRequest: MessageFns<GetApiKeyRequest> = {\n  encode(message: GetApiKeyRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.broker !== \"\") {\n      writer.uint32(18).string(message.broker);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): GetApiKeyRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetApiKeyRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.broker = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetApiKeyRequest {\n    return {\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      broker: isSet(object.broker) ? globalThis.String(object.broker) : \"\",\n    };\n  },\n\n  toJSON(message: GetApiKeyRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.broker !== \"\") {\n      obj.broker = message.broker;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<GetApiKeyRequest>, I>>(base?: I): GetApiKeyRequest {\n    return GetApiKeyRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<GetApiKeyRequest>, I>>(object: I): GetApiKeyRequest {\n    const message = createBaseGetApiKeyRequest();\n    message.userId = object.userId ?? \"\";\n    message.broker = object.broker ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseListApiKeysByUserIdRequest(): ListApiKeysByUserIdRequest {\n  return { userId: \"\" };\n}\n\nexport const ListApiKeysByUserIdRequest: MessageFns<ListApiKeysByUserIdRequest> = {\n  encode(message: ListApiKeysByUserIdRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ListApiKeysByUserIdRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseListApiKeysByUserIdRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ListApiKeysByUserIdRequest {\n    return { userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\" };\n  },\n\n  toJSON(message: ListApiKeysByUserIdRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ListApiKeysByUserIdRequest>, I>>(base?: I): ListApiKeysByUserIdRequest {\n    return ListApiKeysByUserIdRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ListApiKeysByUserIdRequest>, I>>(object: I): ListApiKeysByUserIdRequest {\n    const message = createBaseListApiKeysByUserIdRequest();\n    message.userId = object.userId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseEd25519KeyResponse(): Ed25519KeyResponse {\n  return { publicKey: \"\" };\n}\n\nexport const Ed25519KeyResponse: MessageFns<Ed25519KeyResponse> = {\n  encode(message: Ed25519KeyResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.publicKey !== \"\") {\n      writer.uint32(10).string(message.publicKey);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): Ed25519KeyResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseEd25519KeyResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.publicKey = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Ed25519KeyResponse {\n    return { publicKey: isSet(object.publicKey) ? globalThis.String(object.publicKey) : \"\" };\n  },\n\n  toJSON(message: Ed25519KeyResponse): unknown {\n    const obj: any = {};\n    if (message.publicKey !== \"\") {\n      obj.publicKey = message.publicKey;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<Ed25519KeyResponse>, I>>(base?: I): Ed25519KeyResponse {\n    return Ed25519KeyResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<Ed25519KeyResponse>, I>>(object: I): Ed25519KeyResponse {\n    const message = createBaseEd25519KeyResponse();\n    message.publicKey = object.publicKey ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseApiKeyResponse(): ApiKeyResponse {\n  return { id: \"\", userId: \"\", apiKey: \"\", broker: \"\", createdAt: \"\", name: undefined };\n}\n\nexport const ApiKeyResponse: MessageFns<ApiKeyResponse> = {\n  encode(message: ApiKeyResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(18).string(message.userId);\n    }\n    if (message.apiKey !== \"\") {\n      writer.uint32(26).string(message.apiKey);\n    }\n    if (message.broker !== \"\") {\n      writer.uint32(34).string(message.broker);\n    }\n    if (message.createdAt !== \"\") {\n      writer.uint32(42).string(message.createdAt);\n    }\n    if (message.name !== undefined) {\n      writer.uint32(50).string(message.name);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ApiKeyResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseApiKeyResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.apiKey = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.broker = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.createdAt = reader.string();\n          continue;\n        }\n        case 6: {\n          if (tag !== 50) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ApiKeyResponse {\n    return {\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      apiKey: isSet(object.apiKey) ? globalThis.String(object.apiKey) : \"\",\n      broker: isSet(object.broker) ? globalThis.String(object.broker) : \"\",\n      createdAt: isSet(object.createdAt) ? globalThis.String(object.createdAt) : \"\",\n      name: isSet(object.name) ? globalThis.String(object.name) : undefined,\n    };\n  },\n\n  toJSON(message: ApiKeyResponse): unknown {\n    const obj: any = {};\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.apiKey !== \"\") {\n      obj.apiKey = message.apiKey;\n    }\n    if (message.broker !== \"\") {\n      obj.broker = message.broker;\n    }\n    if (message.createdAt !== \"\") {\n      obj.createdAt = message.createdAt;\n    }\n    if (message.name !== undefined) {\n      obj.name = message.name;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ApiKeyResponse>, I>>(base?: I): ApiKeyResponse {\n    return ApiKeyResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ApiKeyResponse>, I>>(object: I): ApiKeyResponse {\n    const message = createBaseApiKeyResponse();\n    message.id = object.id ?? \"\";\n    message.userId = object.userId ?? \"\";\n    message.apiKey = object.apiKey ?? \"\";\n    message.broker = object.broker ?? \"\";\n    message.createdAt = object.createdAt ?? \"\";\n    message.name = object.name ?? undefined;\n    return message;\n  },\n};\n\nfunction createBaseApiKeysListResponse(): ApiKeysListResponse {\n  return { apiKeys: [] };\n}\n\nexport const ApiKeysListResponse: MessageFns<ApiKeysListResponse> = {\n  encode(message: ApiKeysListResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.apiKeys) {\n      ApiKeyResponse.encode(v!, writer.uint32(10).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ApiKeysListResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseApiKeysListResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.apiKeys.push(ApiKeyResponse.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ApiKeysListResponse {\n    return {\n      apiKeys: globalThis.Array.isArray(object?.apiKeys)\n        ? object.apiKeys.map((e: any) => ApiKeyResponse.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: ApiKeysListResponse): unknown {\n    const obj: any = {};\n    if (message.apiKeys?.length) {\n      obj.apiKeys = message.apiKeys.map((e) => ApiKeyResponse.toJSON(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ApiKeysListResponse>, I>>(base?: I): ApiKeysListResponse {\n    return ApiKeysListResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ApiKeysListResponse>, I>>(object: I): ApiKeysListResponse {\n    const message = createBaseApiKeysListResponse();\n    message.apiKeys = object.apiKeys?.map((e) => ApiKeyResponse.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseGetValidBrokersRequest(): GetValidBrokersRequest {\n  return { userId: \"\" };\n}\n\nexport const GetValidBrokersRequest: MessageFns<GetValidBrokersRequest> = {\n  encode(message: GetValidBrokersRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): GetValidBrokersRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetValidBrokersRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetValidBrokersRequest {\n    return { userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\" };\n  },\n\n  toJSON(message: GetValidBrokersRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<GetValidBrokersRequest>, I>>(base?: I): GetValidBrokersRequest {\n    return GetValidBrokersRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<GetValidBrokersRequest>, I>>(object: I): GetValidBrokersRequest {\n    const message = createBaseGetValidBrokersRequest();\n    message.userId = object.userId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseValidBrokersResponse(): ValidBrokersResponse {\n  return { brokers: [] };\n}\n\nexport const ValidBrokersResponse: MessageFns<ValidBrokersResponse> = {\n  encode(message: ValidBrokersResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.brokers) {\n      writer.uint32(10).string(v!);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ValidBrokersResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseValidBrokersResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.brokers.push(reader.string());\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ValidBrokersResponse {\n    return {\n      brokers: globalThis.Array.isArray(object?.brokers) ? object.brokers.map((e: any) => globalThis.String(e)) : [],\n    };\n  },\n\n  toJSON(message: ValidBrokersResponse): unknown {\n    const obj: any = {};\n    if (message.brokers?.length) {\n      obj.brokers = message.brokers;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ValidBrokersResponse>, I>>(base?: I): ValidBrokersResponse {\n    return ValidBrokersResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ValidBrokersResponse>, I>>(object: I): ValidBrokersResponse {\n    const message = createBaseValidBrokersResponse();\n    message.brokers = object.brokers?.map((e) => e) || [];\n    return message;\n  },\n};\n\nexport type ApiKeysService = typeof ApiKeysService;\nexport const ApiKeysService = {\n  generateEd25519KeyPair: {\n    path: \"/sonar.ApiKeys/GenerateEd25519KeyPair\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: Empty) => Buffer.from(Empty.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => Empty.decode(value),\n    responseSerialize: (value: Ed25519KeyResponse) => Buffer.from(Ed25519KeyResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => Ed25519KeyResponse.decode(value),\n  },\n  createApiKey: {\n    path: \"/sonar.ApiKeys/CreateApiKey\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: CreateApiKeyRequest) => Buffer.from(CreateApiKeyRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => CreateApiKeyRequest.decode(value),\n    responseSerialize: (value: ApiKeyResponse) => Buffer.from(ApiKeyResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => ApiKeyResponse.decode(value),\n  },\n  deleteApiKey: {\n    path: \"/sonar.ApiKeys/DeleteApiKey\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: DeleteApiKeyRequest) => Buffer.from(DeleteApiKeyRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => DeleteApiKeyRequest.decode(value),\n    responseSerialize: (value: Empty) => Buffer.from(Empty.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => Empty.decode(value),\n  },\n  getApiKey: {\n    path: \"/sonar.ApiKeys/GetApiKey\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: GetApiKeyRequest) => Buffer.from(GetApiKeyRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => GetApiKeyRequest.decode(value),\n    responseSerialize: (value: ApiKeyResponse) => Buffer.from(ApiKeyResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => ApiKeyResponse.decode(value),\n  },\n  listApiKeysByUserId: {\n    path: \"/sonar.ApiKeys/ListApiKeysByUserId\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: ListApiKeysByUserIdRequest) =>\n      Buffer.from(ListApiKeysByUserIdRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => ListApiKeysByUserIdRequest.decode(value),\n    responseSerialize: (value: ApiKeysListResponse) => Buffer.from(ApiKeysListResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => ApiKeysListResponse.decode(value),\n  },\n  getValidBrokers: {\n    path: \"/sonar.ApiKeys/GetValidBrokers\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: GetValidBrokersRequest) => Buffer.from(GetValidBrokersRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => GetValidBrokersRequest.decode(value),\n    responseSerialize: (value: ValidBrokersResponse) => Buffer.from(ValidBrokersResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => ValidBrokersResponse.decode(value),\n  },\n} as const;\n\nexport interface ApiKeysServer extends UntypedServiceImplementation {\n  generateEd25519KeyPair: handleUnaryCall<Empty, Ed25519KeyResponse>;\n  createApiKey: handleUnaryCall<CreateApiKeyRequest, ApiKeyResponse>;\n  deleteApiKey: handleUnaryCall<DeleteApiKeyRequest, Empty>;\n  getApiKey: handleUnaryCall<GetApiKeyRequest, ApiKeyResponse>;\n  listApiKeysByUserId: handleUnaryCall<ListApiKeysByUserIdRequest, ApiKeysListResponse>;\n  getValidBrokers: handleUnaryCall<GetValidBrokersRequest, ValidBrokersResponse>;\n}\n\nexport interface ApiKeysClient extends Client {\n  generateEd25519KeyPair(\n    request: Empty,\n    callback: (error: ServiceError | null, response: Ed25519KeyResponse) => void,\n  ): ClientUnaryCall;\n  generateEd25519KeyPair(\n    request: Empty,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: Ed25519KeyResponse) => void,\n  ): ClientUnaryCall;\n  generateEd25519KeyPair(\n    request: Empty,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: Ed25519KeyResponse) => void,\n  ): ClientUnaryCall;\n  createApiKey(\n    request: CreateApiKeyRequest,\n    callback: (error: ServiceError | null, response: ApiKeyResponse) => void,\n  ): ClientUnaryCall;\n  createApiKey(\n    request: CreateApiKeyRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: ApiKeyResponse) => void,\n  ): ClientUnaryCall;\n  createApiKey(\n    request: CreateApiKeyRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: ApiKeyResponse) => void,\n  ): ClientUnaryCall;\n  deleteApiKey(\n    request: DeleteApiKeyRequest,\n    callback: (error: ServiceError | null, response: Empty) => void,\n  ): ClientUnaryCall;\n  deleteApiKey(\n    request: DeleteApiKeyRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: Empty) => void,\n  ): ClientUnaryCall;\n  deleteApiKey(\n    request: DeleteApiKeyRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: Empty) => void,\n  ): ClientUnaryCall;\n  getApiKey(\n    request: GetApiKeyRequest,\n    callback: (error: ServiceError | null, response: ApiKeyResponse) => void,\n  ): ClientUnaryCall;\n  getApiKey(\n    request: GetApiKeyRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: ApiKeyResponse) => void,\n  ): ClientUnaryCall;\n  getApiKey(\n    request: GetApiKeyRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: ApiKeyResponse) => void,\n  ): ClientUnaryCall;\n  listApiKeysByUserId(\n    request: ListApiKeysByUserIdRequest,\n    callback: (error: ServiceError | null, response: ApiKeysListResponse) => void,\n  ): ClientUnaryCall;\n  listApiKeysByUserId(\n    request: ListApiKeysByUserIdRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: ApiKeysListResponse) => void,\n  ): ClientUnaryCall;\n  listApiKeysByUserId(\n    request: ListApiKeysByUserIdRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: ApiKeysListResponse) => void,\n  ): ClientUnaryCall;\n  getValidBrokers(\n    request: GetValidBrokersRequest,\n    callback: (error: ServiceError | null, response: ValidBrokersResponse) => void,\n  ): ClientUnaryCall;\n  getValidBrokers(\n    request: GetValidBrokersRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: ValidBrokersResponse) => void,\n  ): ClientUnaryCall;\n  getValidBrokers(\n    request: GetValidBrokersRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: ValidBrokersResponse) => void,\n  ): ClientUnaryCall;\n}\n\nexport const ApiKeysClient = makeGenericClientConstructor(ApiKeysService, \"sonar.ApiKeys\") as unknown as {\n  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): ApiKeysClient;\n  service: typeof ApiKeysService;\n  serviceName: string;\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\ntype DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\ntype Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n\ninterface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  fromJSON(object: any): T;\n  toJSON(message: T): unknown;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n"],"names":["ApiKeyResponse","ApiKeysClient","ApiKeysListResponse","ApiKeysService","CreateApiKeyRequest","DeleteApiKeyRequest","Ed25519KeyResponse","GetApiKeyRequest","GetValidBrokersRequest","ListApiKeysByUserIdRequest","ValidBrokersResponse","createBaseCreateApiKeyRequest","userId","apiKey","apiSecret","broker","name","undefined","encode","message","writer","BinaryWriter","uint32","string","decode","input","length","reader","BinaryReader","end","len","pos","tag","skip","fromJSON","object","isSet","globalThis","String","toJSON","obj","create","base","fromPartial","createBaseDeleteApiKeyRequest","id","createBaseGetApiKeyRequest","createBaseListApiKeysByUserIdRequest","createBaseEd25519KeyResponse","publicKey","createBaseApiKeyResponse","createdAt","createBaseApiKeysListResponse","apiKeys","v","fork","join","push","Array","isArray","map","e","createBaseGetValidBrokersRequest","createBaseValidBrokersResponse","brokers","generateEd25519KeyPair","path","requestStream","responseStream","requestSerialize","value","Buffer","from","Empty","finish","requestDeserialize","responseSerialize","responseDeserialize","createApiKey","deleteApiKey","getApiKey","listApiKeysByUserId","getValidBrokers","makeGenericClientConstructor"],"mappings":"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"}
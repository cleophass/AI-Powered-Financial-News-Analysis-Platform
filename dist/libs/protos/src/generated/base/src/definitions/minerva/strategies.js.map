{"version":3,"sources":["../../../../../../../../../libs/protos/src/generated/base/src/definitions/minerva/strategies.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.5.0\n//   protoc               v5.29.1\n// source: src/definitions/minerva/strategies.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nimport {\n  type CallOptions,\n  ChannelCredentials,\n  Client,\n  type ClientOptions,\n  type ClientUnaryCall,\n  type handleUnaryCall,\n  makeGenericClientConstructor,\n  Metadata,\n  type ServiceError,\n  type UntypedServiceImplementation,\n} from \"@grpc/grpc-js\";\nimport { Empty } from \"../../../google/protobuf/empty\";\nimport { Struct } from \"../../../google/protobuf/struct\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\n\nexport interface PairBroker {\n  base: string;\n  quote: string;\n  broker: string;\n}\n\nexport interface PairRatio {\n  base: string;\n  quote: string;\n  broker: string;\n  quoteRatio: number;\n  baseRatio: number;\n}\n\nexport interface RRuleOptions {\n  frequency: number;\n  interval: number;\n  dtstart:\n    | Date\n    | undefined;\n  /** protolint:disable REPEATED_FIELD_NAMES_PLURALIZED */\n  bysetpos: number[];\n  bymonth: number[];\n  bymonthday: number[];\n  byyearday: number[];\n  byweekno: number[];\n  byweekday: number[];\n  byhour: number[];\n  /** protolint:enable REPEATED_FIELD_NAMES_PLURALIZED */\n  byminute: number[];\n}\n\nexport interface StrategyResponse {\n  id: string;\n  userId: string;\n  name: string;\n  type: string;\n  isActive: boolean;\n  baseBudget: { [key: string]: any } | undefined;\n  lastBudgetChange?: Date | undefined;\n  recurrence?: RRuleOptions | undefined;\n  recurrenceDates: Date[];\n  runIfOrdersActive?: boolean | undefined;\n  stopIfError?: boolean | undefined;\n  maxExecutionDelay?: number | undefined;\n  cancelAllOrdersBeforeExecution?: boolean | undefined;\n  deployedAt?: Date | undefined;\n  createdAt: Date | undefined;\n  updatedAt: Date | undefined;\n  activePairs: PairRatio[];\n  draftPairs: PairBroker[];\n}\n\nexport interface StrategiesListResponse {\n  strategies: StrategyResponse[];\n}\n\nexport interface StrategiesByUserIdRequest {\n  userId: string;\n}\n\nexport interface StrategyByIdRequest {\n  userId: string;\n  id: string;\n}\n\nexport interface CreateStrategyRequest {\n  userId: string;\n  name: string;\n  type: string;\n  recurrence: RRuleOptions | undefined;\n}\n\nexport interface UpdateStrategyRequest {\n  id: string;\n  userId: string;\n  name?: string | undefined;\n  type?: string | undefined;\n  recurrence?: RRuleOptions | undefined;\n  isActive?: boolean | undefined;\n  runIfOrdersActive?: boolean | undefined;\n  stopIfError?: boolean | undefined;\n  maxExecutionDelay?: number | undefined;\n  cancelAllOrdersBeforeExecution?: boolean | undefined;\n  baseBudget?: { [key: string]: any } | undefined;\n}\n\nexport interface SetStrategyActivePairsRequest {\n  id: string;\n  userId: string;\n  activePairs: PairRatio[];\n  clear?: boolean | undefined;\n}\n\nexport interface SetStrategyDraftPairsRequest {\n  id: string;\n  userId: string;\n  draftPairs: PairBroker[];\n  clear?: boolean | undefined;\n}\n\nexport interface ListActiveStrategiesRequest {\n  base: string;\n  quote: string;\n  broker: string;\n  executionDate: Date | undefined;\n}\n\nfunction createBasePairBroker(): PairBroker {\n  return { base: \"\", quote: \"\", broker: \"\" };\n}\n\nexport const PairBroker: MessageFns<PairBroker> = {\n  encode(message: PairBroker, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.base !== \"\") {\n      writer.uint32(10).string(message.base);\n    }\n    if (message.quote !== \"\") {\n      writer.uint32(18).string(message.quote);\n    }\n    if (message.broker !== \"\") {\n      writer.uint32(26).string(message.broker);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): PairBroker {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePairBroker();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.base = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.quote = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.broker = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PairBroker {\n    return {\n      base: isSet(object.base) ? globalThis.String(object.base) : \"\",\n      quote: isSet(object.quote) ? globalThis.String(object.quote) : \"\",\n      broker: isSet(object.broker) ? globalThis.String(object.broker) : \"\",\n    };\n  },\n\n  toJSON(message: PairBroker): unknown {\n    const obj: any = {};\n    if (message.base !== \"\") {\n      obj.base = message.base;\n    }\n    if (message.quote !== \"\") {\n      obj.quote = message.quote;\n    }\n    if (message.broker !== \"\") {\n      obj.broker = message.broker;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<PairBroker>, I>>(base?: I): PairBroker {\n    return PairBroker.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<PairBroker>, I>>(object: I): PairBroker {\n    const message = createBasePairBroker();\n    message.base = object.base ?? \"\";\n    message.quote = object.quote ?? \"\";\n    message.broker = object.broker ?? \"\";\n    return message;\n  },\n};\n\nfunction createBasePairRatio(): PairRatio {\n  return { base: \"\", quote: \"\", broker: \"\", quoteRatio: 0, baseRatio: 0 };\n}\n\nexport const PairRatio: MessageFns<PairRatio> = {\n  encode(message: PairRatio, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.base !== \"\") {\n      writer.uint32(10).string(message.base);\n    }\n    if (message.quote !== \"\") {\n      writer.uint32(18).string(message.quote);\n    }\n    if (message.broker !== \"\") {\n      writer.uint32(26).string(message.broker);\n    }\n    if (message.quoteRatio !== 0) {\n      writer.uint32(33).double(message.quoteRatio);\n    }\n    if (message.baseRatio !== 0) {\n      writer.uint32(41).double(message.baseRatio);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): PairRatio {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBasePairRatio();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.base = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.quote = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.broker = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 33) {\n            break;\n          }\n\n          message.quoteRatio = reader.double();\n          continue;\n        }\n        case 5: {\n          if (tag !== 41) {\n            break;\n          }\n\n          message.baseRatio = reader.double();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): PairRatio {\n    return {\n      base: isSet(object.base) ? globalThis.String(object.base) : \"\",\n      quote: isSet(object.quote) ? globalThis.String(object.quote) : \"\",\n      broker: isSet(object.broker) ? globalThis.String(object.broker) : \"\",\n      quoteRatio: isSet(object.quoteRatio) ? globalThis.Number(object.quoteRatio) : 0,\n      baseRatio: isSet(object.baseRatio) ? globalThis.Number(object.baseRatio) : 0,\n    };\n  },\n\n  toJSON(message: PairRatio): unknown {\n    const obj: any = {};\n    if (message.base !== \"\") {\n      obj.base = message.base;\n    }\n    if (message.quote !== \"\") {\n      obj.quote = message.quote;\n    }\n    if (message.broker !== \"\") {\n      obj.broker = message.broker;\n    }\n    if (message.quoteRatio !== 0) {\n      obj.quoteRatio = message.quoteRatio;\n    }\n    if (message.baseRatio !== 0) {\n      obj.baseRatio = message.baseRatio;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<PairRatio>, I>>(base?: I): PairRatio {\n    return PairRatio.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<PairRatio>, I>>(object: I): PairRatio {\n    const message = createBasePairRatio();\n    message.base = object.base ?? \"\";\n    message.quote = object.quote ?? \"\";\n    message.broker = object.broker ?? \"\";\n    message.quoteRatio = object.quoteRatio ?? 0;\n    message.baseRatio = object.baseRatio ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseRRuleOptions(): RRuleOptions {\n  return {\n    frequency: 0,\n    interval: 0,\n    dtstart: undefined,\n    bysetpos: [],\n    bymonth: [],\n    bymonthday: [],\n    byyearday: [],\n    byweekno: [],\n    byweekday: [],\n    byhour: [],\n    byminute: [],\n  };\n}\n\nexport const RRuleOptions: MessageFns<RRuleOptions> = {\n  encode(message: RRuleOptions, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.frequency !== 0) {\n      writer.uint32(8).int32(message.frequency);\n    }\n    if (message.interval !== 0) {\n      writer.uint32(16).int32(message.interval);\n    }\n    if (message.dtstart !== undefined) {\n      Timestamp.encode(toTimestamp(message.dtstart), writer.uint32(26).fork()).join();\n    }\n    writer.uint32(34).fork();\n    for (const v of message.bysetpos) {\n      writer.int32(v);\n    }\n    writer.join();\n    writer.uint32(42).fork();\n    for (const v of message.bymonth) {\n      writer.int32(v);\n    }\n    writer.join();\n    writer.uint32(50).fork();\n    for (const v of message.bymonthday) {\n      writer.int32(v);\n    }\n    writer.join();\n    writer.uint32(58).fork();\n    for (const v of message.byyearday) {\n      writer.int32(v);\n    }\n    writer.join();\n    writer.uint32(66).fork();\n    for (const v of message.byweekno) {\n      writer.int32(v);\n    }\n    writer.join();\n    writer.uint32(74).fork();\n    for (const v of message.byweekday) {\n      writer.int32(v);\n    }\n    writer.join();\n    writer.uint32(82).fork();\n    for (const v of message.byhour) {\n      writer.int32(v);\n    }\n    writer.join();\n    writer.uint32(90).fork();\n    for (const v of message.byminute) {\n      writer.int32(v);\n    }\n    writer.join();\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): RRuleOptions {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRRuleOptions();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 8) {\n            break;\n          }\n\n          message.frequency = reader.int32();\n          continue;\n        }\n        case 2: {\n          if (tag !== 16) {\n            break;\n          }\n\n          message.interval = reader.int32();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.dtstart = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 4: {\n          if (tag === 32) {\n            message.bysetpos.push(reader.int32());\n\n            continue;\n          }\n\n          if (tag === 34) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.bysetpos.push(reader.int32());\n            }\n\n            continue;\n          }\n\n          break;\n        }\n        case 5: {\n          if (tag === 40) {\n            message.bymonth.push(reader.int32());\n\n            continue;\n          }\n\n          if (tag === 42) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.bymonth.push(reader.int32());\n            }\n\n            continue;\n          }\n\n          break;\n        }\n        case 6: {\n          if (tag === 48) {\n            message.bymonthday.push(reader.int32());\n\n            continue;\n          }\n\n          if (tag === 50) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.bymonthday.push(reader.int32());\n            }\n\n            continue;\n          }\n\n          break;\n        }\n        case 7: {\n          if (tag === 56) {\n            message.byyearday.push(reader.int32());\n\n            continue;\n          }\n\n          if (tag === 58) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.byyearday.push(reader.int32());\n            }\n\n            continue;\n          }\n\n          break;\n        }\n        case 8: {\n          if (tag === 64) {\n            message.byweekno.push(reader.int32());\n\n            continue;\n          }\n\n          if (tag === 66) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.byweekno.push(reader.int32());\n            }\n\n            continue;\n          }\n\n          break;\n        }\n        case 9: {\n          if (tag === 72) {\n            message.byweekday.push(reader.int32());\n\n            continue;\n          }\n\n          if (tag === 74) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.byweekday.push(reader.int32());\n            }\n\n            continue;\n          }\n\n          break;\n        }\n        case 10: {\n          if (tag === 80) {\n            message.byhour.push(reader.int32());\n\n            continue;\n          }\n\n          if (tag === 82) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.byhour.push(reader.int32());\n            }\n\n            continue;\n          }\n\n          break;\n        }\n        case 11: {\n          if (tag === 88) {\n            message.byminute.push(reader.int32());\n\n            continue;\n          }\n\n          if (tag === 90) {\n            const end2 = reader.uint32() + reader.pos;\n            while (reader.pos < end2) {\n              message.byminute.push(reader.int32());\n            }\n\n            continue;\n          }\n\n          break;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): RRuleOptions {\n    return {\n      frequency: isSet(object.frequency) ? globalThis.Number(object.frequency) : 0,\n      interval: isSet(object.interval) ? globalThis.Number(object.interval) : 0,\n      dtstart: isSet(object.dtstart) ? fromJsonTimestamp(object.dtstart) : undefined,\n      bysetpos: globalThis.Array.isArray(object?.bysetpos) ? object.bysetpos.map((e: any) => globalThis.Number(e)) : [],\n      bymonth: globalThis.Array.isArray(object?.bymonth) ? object.bymonth.map((e: any) => globalThis.Number(e)) : [],\n      bymonthday: globalThis.Array.isArray(object?.bymonthday)\n        ? object.bymonthday.map((e: any) => globalThis.Number(e))\n        : [],\n      byyearday: globalThis.Array.isArray(object?.byyearday)\n        ? object.byyearday.map((e: any) => globalThis.Number(e))\n        : [],\n      byweekno: globalThis.Array.isArray(object?.byweekno) ? object.byweekno.map((e: any) => globalThis.Number(e)) : [],\n      byweekday: globalThis.Array.isArray(object?.byweekday)\n        ? object.byweekday.map((e: any) => globalThis.Number(e))\n        : [],\n      byhour: globalThis.Array.isArray(object?.byhour) ? object.byhour.map((e: any) => globalThis.Number(e)) : [],\n      byminute: globalThis.Array.isArray(object?.byminute) ? object.byminute.map((e: any) => globalThis.Number(e)) : [],\n    };\n  },\n\n  toJSON(message: RRuleOptions): unknown {\n    const obj: any = {};\n    if (message.frequency !== 0) {\n      obj.frequency = Math.round(message.frequency);\n    }\n    if (message.interval !== 0) {\n      obj.interval = Math.round(message.interval);\n    }\n    if (message.dtstart !== undefined) {\n      obj.dtstart = message.dtstart.toISOString();\n    }\n    if (message.bysetpos?.length) {\n      obj.bysetpos = message.bysetpos.map((e) => Math.round(e));\n    }\n    if (message.bymonth?.length) {\n      obj.bymonth = message.bymonth.map((e) => Math.round(e));\n    }\n    if (message.bymonthday?.length) {\n      obj.bymonthday = message.bymonthday.map((e) => Math.round(e));\n    }\n    if (message.byyearday?.length) {\n      obj.byyearday = message.byyearday.map((e) => Math.round(e));\n    }\n    if (message.byweekno?.length) {\n      obj.byweekno = message.byweekno.map((e) => Math.round(e));\n    }\n    if (message.byweekday?.length) {\n      obj.byweekday = message.byweekday.map((e) => Math.round(e));\n    }\n    if (message.byhour?.length) {\n      obj.byhour = message.byhour.map((e) => Math.round(e));\n    }\n    if (message.byminute?.length) {\n      obj.byminute = message.byminute.map((e) => Math.round(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<RRuleOptions>, I>>(base?: I): RRuleOptions {\n    return RRuleOptions.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<RRuleOptions>, I>>(object: I): RRuleOptions {\n    const message = createBaseRRuleOptions();\n    message.frequency = object.frequency ?? 0;\n    message.interval = object.interval ?? 0;\n    message.dtstart = object.dtstart ?? undefined;\n    message.bysetpos = object.bysetpos?.map((e) => e) || [];\n    message.bymonth = object.bymonth?.map((e) => e) || [];\n    message.bymonthday = object.bymonthday?.map((e) => e) || [];\n    message.byyearday = object.byyearday?.map((e) => e) || [];\n    message.byweekno = object.byweekno?.map((e) => e) || [];\n    message.byweekday = object.byweekday?.map((e) => e) || [];\n    message.byhour = object.byhour?.map((e) => e) || [];\n    message.byminute = object.byminute?.map((e) => e) || [];\n    return message;\n  },\n};\n\nfunction createBaseStrategyResponse(): StrategyResponse {\n  return {\n    id: \"\",\n    userId: \"\",\n    name: \"\",\n    type: \"\",\n    isActive: false,\n    baseBudget: undefined,\n    lastBudgetChange: undefined,\n    recurrence: undefined,\n    recurrenceDates: [],\n    runIfOrdersActive: undefined,\n    stopIfError: undefined,\n    maxExecutionDelay: undefined,\n    cancelAllOrdersBeforeExecution: undefined,\n    deployedAt: undefined,\n    createdAt: undefined,\n    updatedAt: undefined,\n    activePairs: [],\n    draftPairs: [],\n  };\n}\n\nexport const StrategyResponse: MessageFns<StrategyResponse> = {\n  encode(message: StrategyResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(18).string(message.userId);\n    }\n    if (message.name !== \"\") {\n      writer.uint32(26).string(message.name);\n    }\n    if (message.type !== \"\") {\n      writer.uint32(34).string(message.type);\n    }\n    if (message.isActive !== false) {\n      writer.uint32(40).bool(message.isActive);\n    }\n    if (message.baseBudget !== undefined) {\n      Struct.encode(Struct.wrap(message.baseBudget), writer.uint32(50).fork()).join();\n    }\n    if (message.lastBudgetChange !== undefined) {\n      Timestamp.encode(toTimestamp(message.lastBudgetChange), writer.uint32(58).fork()).join();\n    }\n    if (message.recurrence !== undefined) {\n      RRuleOptions.encode(message.recurrence, writer.uint32(66).fork()).join();\n    }\n    for (const v of message.recurrenceDates) {\n      Timestamp.encode(toTimestamp(v!), writer.uint32(74).fork()).join();\n    }\n    if (message.runIfOrdersActive !== undefined) {\n      writer.uint32(80).bool(message.runIfOrdersActive);\n    }\n    if (message.stopIfError !== undefined) {\n      writer.uint32(88).bool(message.stopIfError);\n    }\n    if (message.maxExecutionDelay !== undefined) {\n      writer.uint32(96).int32(message.maxExecutionDelay);\n    }\n    if (message.cancelAllOrdersBeforeExecution !== undefined) {\n      writer.uint32(104).bool(message.cancelAllOrdersBeforeExecution);\n    }\n    if (message.deployedAt !== undefined) {\n      Timestamp.encode(toTimestamp(message.deployedAt), writer.uint32(114).fork()).join();\n    }\n    if (message.createdAt !== undefined) {\n      Timestamp.encode(toTimestamp(message.createdAt), writer.uint32(122).fork()).join();\n    }\n    if (message.updatedAt !== undefined) {\n      Timestamp.encode(toTimestamp(message.updatedAt), writer.uint32(130).fork()).join();\n    }\n    for (const v of message.activePairs) {\n      PairRatio.encode(v!, writer.uint32(138).fork()).join();\n    }\n    for (const v of message.draftPairs) {\n      PairBroker.encode(v!, writer.uint32(146).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): StrategyResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseStrategyResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.type = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 40) {\n            break;\n          }\n\n          message.isActive = reader.bool();\n          continue;\n        }\n        case 6: {\n          if (tag !== 50) {\n            break;\n          }\n\n          message.baseBudget = Struct.unwrap(Struct.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 7: {\n          if (tag !== 58) {\n            break;\n          }\n\n          message.lastBudgetChange = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 8: {\n          if (tag !== 66) {\n            break;\n          }\n\n          message.recurrence = RRuleOptions.decode(reader, reader.uint32());\n          continue;\n        }\n        case 9: {\n          if (tag !== 74) {\n            break;\n          }\n\n          message.recurrenceDates.push(fromTimestamp(Timestamp.decode(reader, reader.uint32())));\n          continue;\n        }\n        case 10: {\n          if (tag !== 80) {\n            break;\n          }\n\n          message.runIfOrdersActive = reader.bool();\n          continue;\n        }\n        case 11: {\n          if (tag !== 88) {\n            break;\n          }\n\n          message.stopIfError = reader.bool();\n          continue;\n        }\n        case 12: {\n          if (tag !== 96) {\n            break;\n          }\n\n          message.maxExecutionDelay = reader.int32();\n          continue;\n        }\n        case 13: {\n          if (tag !== 104) {\n            break;\n          }\n\n          message.cancelAllOrdersBeforeExecution = reader.bool();\n          continue;\n        }\n        case 14: {\n          if (tag !== 114) {\n            break;\n          }\n\n          message.deployedAt = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 15: {\n          if (tag !== 122) {\n            break;\n          }\n\n          message.createdAt = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 16: {\n          if (tag !== 130) {\n            break;\n          }\n\n          message.updatedAt = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 17: {\n          if (tag !== 138) {\n            break;\n          }\n\n          message.activePairs.push(PairRatio.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 18: {\n          if (tag !== 146) {\n            break;\n          }\n\n          message.draftPairs.push(PairBroker.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): StrategyResponse {\n    return {\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      name: isSet(object.name) ? globalThis.String(object.name) : \"\",\n      type: isSet(object.type) ? globalThis.String(object.type) : \"\",\n      isActive: isSet(object.isActive) ? globalThis.Boolean(object.isActive) : false,\n      baseBudget: isObject(object.baseBudget) ? object.baseBudget : undefined,\n      lastBudgetChange: isSet(object.lastBudgetChange) ? fromJsonTimestamp(object.lastBudgetChange) : undefined,\n      recurrence: isSet(object.recurrence) ? RRuleOptions.fromJSON(object.recurrence) : undefined,\n      recurrenceDates: globalThis.Array.isArray(object?.recurrenceDates)\n        ? object.recurrenceDates.map((e: any) => fromJsonTimestamp(e))\n        : [],\n      runIfOrdersActive: isSet(object.runIfOrdersActive) ? globalThis.Boolean(object.runIfOrdersActive) : undefined,\n      stopIfError: isSet(object.stopIfError) ? globalThis.Boolean(object.stopIfError) : undefined,\n      maxExecutionDelay: isSet(object.maxExecutionDelay) ? globalThis.Number(object.maxExecutionDelay) : undefined,\n      cancelAllOrdersBeforeExecution: isSet(object.cancelAllOrdersBeforeExecution)\n        ? globalThis.Boolean(object.cancelAllOrdersBeforeExecution)\n        : undefined,\n      deployedAt: isSet(object.deployedAt) ? fromJsonTimestamp(object.deployedAt) : undefined,\n      createdAt: isSet(object.createdAt) ? fromJsonTimestamp(object.createdAt) : undefined,\n      updatedAt: isSet(object.updatedAt) ? fromJsonTimestamp(object.updatedAt) : undefined,\n      activePairs: globalThis.Array.isArray(object?.activePairs)\n        ? object.activePairs.map((e: any) => PairRatio.fromJSON(e))\n        : [],\n      draftPairs: globalThis.Array.isArray(object?.draftPairs)\n        ? object.draftPairs.map((e: any) => PairBroker.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: StrategyResponse): unknown {\n    const obj: any = {};\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.name !== \"\") {\n      obj.name = message.name;\n    }\n    if (message.type !== \"\") {\n      obj.type = message.type;\n    }\n    if (message.isActive !== false) {\n      obj.isActive = message.isActive;\n    }\n    if (message.baseBudget !== undefined) {\n      obj.baseBudget = message.baseBudget;\n    }\n    if (message.lastBudgetChange !== undefined) {\n      obj.lastBudgetChange = message.lastBudgetChange.toISOString();\n    }\n    if (message.recurrence !== undefined) {\n      obj.recurrence = RRuleOptions.toJSON(message.recurrence);\n    }\n    if (message.recurrenceDates?.length) {\n      obj.recurrenceDates = message.recurrenceDates.map((e) => e.toISOString());\n    }\n    if (message.runIfOrdersActive !== undefined) {\n      obj.runIfOrdersActive = message.runIfOrdersActive;\n    }\n    if (message.stopIfError !== undefined) {\n      obj.stopIfError = message.stopIfError;\n    }\n    if (message.maxExecutionDelay !== undefined) {\n      obj.maxExecutionDelay = Math.round(message.maxExecutionDelay);\n    }\n    if (message.cancelAllOrdersBeforeExecution !== undefined) {\n      obj.cancelAllOrdersBeforeExecution = message.cancelAllOrdersBeforeExecution;\n    }\n    if (message.deployedAt !== undefined) {\n      obj.deployedAt = message.deployedAt.toISOString();\n    }\n    if (message.createdAt !== undefined) {\n      obj.createdAt = message.createdAt.toISOString();\n    }\n    if (message.updatedAt !== undefined) {\n      obj.updatedAt = message.updatedAt.toISOString();\n    }\n    if (message.activePairs?.length) {\n      obj.activePairs = message.activePairs.map((e) => PairRatio.toJSON(e));\n    }\n    if (message.draftPairs?.length) {\n      obj.draftPairs = message.draftPairs.map((e) => PairBroker.toJSON(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<StrategyResponse>, I>>(base?: I): StrategyResponse {\n    return StrategyResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<StrategyResponse>, I>>(object: I): StrategyResponse {\n    const message = createBaseStrategyResponse();\n    message.id = object.id ?? \"\";\n    message.userId = object.userId ?? \"\";\n    message.name = object.name ?? \"\";\n    message.type = object.type ?? \"\";\n    message.isActive = object.isActive ?? false;\n    message.baseBudget = object.baseBudget ?? undefined;\n    message.lastBudgetChange = object.lastBudgetChange ?? undefined;\n    message.recurrence = (object.recurrence !== undefined && object.recurrence !== null)\n      ? RRuleOptions.fromPartial(object.recurrence)\n      : undefined;\n    message.recurrenceDates = object.recurrenceDates?.map((e) => e) || [];\n    message.runIfOrdersActive = object.runIfOrdersActive ?? undefined;\n    message.stopIfError = object.stopIfError ?? undefined;\n    message.maxExecutionDelay = object.maxExecutionDelay ?? undefined;\n    message.cancelAllOrdersBeforeExecution = object.cancelAllOrdersBeforeExecution ?? undefined;\n    message.deployedAt = object.deployedAt ?? undefined;\n    message.createdAt = object.createdAt ?? undefined;\n    message.updatedAt = object.updatedAt ?? undefined;\n    message.activePairs = object.activePairs?.map((e) => PairRatio.fromPartial(e)) || [];\n    message.draftPairs = object.draftPairs?.map((e) => PairBroker.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseStrategiesListResponse(): StrategiesListResponse {\n  return { strategies: [] };\n}\n\nexport const StrategiesListResponse: MessageFns<StrategiesListResponse> = {\n  encode(message: StrategiesListResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.strategies) {\n      StrategyResponse.encode(v!, writer.uint32(10).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): StrategiesListResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseStrategiesListResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.strategies.push(StrategyResponse.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): StrategiesListResponse {\n    return {\n      strategies: globalThis.Array.isArray(object?.strategies)\n        ? object.strategies.map((e: any) => StrategyResponse.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: StrategiesListResponse): unknown {\n    const obj: any = {};\n    if (message.strategies?.length) {\n      obj.strategies = message.strategies.map((e) => StrategyResponse.toJSON(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<StrategiesListResponse>, I>>(base?: I): StrategiesListResponse {\n    return StrategiesListResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<StrategiesListResponse>, I>>(object: I): StrategiesListResponse {\n    const message = createBaseStrategiesListResponse();\n    message.strategies = object.strategies?.map((e) => StrategyResponse.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseStrategiesByUserIdRequest(): StrategiesByUserIdRequest {\n  return { userId: \"\" };\n}\n\nexport const StrategiesByUserIdRequest: MessageFns<StrategiesByUserIdRequest> = {\n  encode(message: StrategiesByUserIdRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): StrategiesByUserIdRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseStrategiesByUserIdRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): StrategiesByUserIdRequest {\n    return { userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\" };\n  },\n\n  toJSON(message: StrategiesByUserIdRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<StrategiesByUserIdRequest>, I>>(base?: I): StrategiesByUserIdRequest {\n    return StrategiesByUserIdRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<StrategiesByUserIdRequest>, I>>(object: I): StrategiesByUserIdRequest {\n    const message = createBaseStrategiesByUserIdRequest();\n    message.userId = object.userId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseStrategyByIdRequest(): StrategyByIdRequest {\n  return { userId: \"\", id: \"\" };\n}\n\nexport const StrategyByIdRequest: MessageFns<StrategyByIdRequest> = {\n  encode(message: StrategyByIdRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.id !== \"\") {\n      writer.uint32(18).string(message.id);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): StrategyByIdRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseStrategyByIdRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): StrategyByIdRequest {\n    return {\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n    };\n  },\n\n  toJSON(message: StrategyByIdRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<StrategyByIdRequest>, I>>(base?: I): StrategyByIdRequest {\n    return StrategyByIdRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<StrategyByIdRequest>, I>>(object: I): StrategyByIdRequest {\n    const message = createBaseStrategyByIdRequest();\n    message.userId = object.userId ?? \"\";\n    message.id = object.id ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseCreateStrategyRequest(): CreateStrategyRequest {\n  return { userId: \"\", name: \"\", type: \"\", recurrence: undefined };\n}\n\nexport const CreateStrategyRequest: MessageFns<CreateStrategyRequest> = {\n  encode(message: CreateStrategyRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.name !== \"\") {\n      writer.uint32(18).string(message.name);\n    }\n    if (message.type !== \"\") {\n      writer.uint32(26).string(message.type);\n    }\n    if (message.recurrence !== undefined) {\n      RRuleOptions.encode(message.recurrence, writer.uint32(34).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): CreateStrategyRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCreateStrategyRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.type = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.recurrence = RRuleOptions.decode(reader, reader.uint32());\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): CreateStrategyRequest {\n    return {\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      name: isSet(object.name) ? globalThis.String(object.name) : \"\",\n      type: isSet(object.type) ? globalThis.String(object.type) : \"\",\n      recurrence: isSet(object.recurrence) ? RRuleOptions.fromJSON(object.recurrence) : undefined,\n    };\n  },\n\n  toJSON(message: CreateStrategyRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.name !== \"\") {\n      obj.name = message.name;\n    }\n    if (message.type !== \"\") {\n      obj.type = message.type;\n    }\n    if (message.recurrence !== undefined) {\n      obj.recurrence = RRuleOptions.toJSON(message.recurrence);\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<CreateStrategyRequest>, I>>(base?: I): CreateStrategyRequest {\n    return CreateStrategyRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<CreateStrategyRequest>, I>>(object: I): CreateStrategyRequest {\n    const message = createBaseCreateStrategyRequest();\n    message.userId = object.userId ?? \"\";\n    message.name = object.name ?? \"\";\n    message.type = object.type ?? \"\";\n    message.recurrence = (object.recurrence !== undefined && object.recurrence !== null)\n      ? RRuleOptions.fromPartial(object.recurrence)\n      : undefined;\n    return message;\n  },\n};\n\nfunction createBaseUpdateStrategyRequest(): UpdateStrategyRequest {\n  return {\n    id: \"\",\n    userId: \"\",\n    name: undefined,\n    type: undefined,\n    recurrence: undefined,\n    isActive: undefined,\n    runIfOrdersActive: undefined,\n    stopIfError: undefined,\n    maxExecutionDelay: undefined,\n    cancelAllOrdersBeforeExecution: undefined,\n    baseBudget: undefined,\n  };\n}\n\nexport const UpdateStrategyRequest: MessageFns<UpdateStrategyRequest> = {\n  encode(message: UpdateStrategyRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(18).string(message.userId);\n    }\n    if (message.name !== undefined) {\n      writer.uint32(26).string(message.name);\n    }\n    if (message.type !== undefined) {\n      writer.uint32(34).string(message.type);\n    }\n    if (message.recurrence !== undefined) {\n      RRuleOptions.encode(message.recurrence, writer.uint32(42).fork()).join();\n    }\n    if (message.isActive !== undefined) {\n      writer.uint32(48).bool(message.isActive);\n    }\n    if (message.runIfOrdersActive !== undefined) {\n      writer.uint32(56).bool(message.runIfOrdersActive);\n    }\n    if (message.stopIfError !== undefined) {\n      writer.uint32(64).bool(message.stopIfError);\n    }\n    if (message.maxExecutionDelay !== undefined) {\n      writer.uint32(72).int32(message.maxExecutionDelay);\n    }\n    if (message.cancelAllOrdersBeforeExecution !== undefined) {\n      writer.uint32(80).bool(message.cancelAllOrdersBeforeExecution);\n    }\n    if (message.baseBudget !== undefined) {\n      Struct.encode(Struct.wrap(message.baseBudget), writer.uint32(90).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): UpdateStrategyRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseUpdateStrategyRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.type = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.recurrence = RRuleOptions.decode(reader, reader.uint32());\n          continue;\n        }\n        case 6: {\n          if (tag !== 48) {\n            break;\n          }\n\n          message.isActive = reader.bool();\n          continue;\n        }\n        case 7: {\n          if (tag !== 56) {\n            break;\n          }\n\n          message.runIfOrdersActive = reader.bool();\n          continue;\n        }\n        case 8: {\n          if (tag !== 64) {\n            break;\n          }\n\n          message.stopIfError = reader.bool();\n          continue;\n        }\n        case 9: {\n          if (tag !== 72) {\n            break;\n          }\n\n          message.maxExecutionDelay = reader.int32();\n          continue;\n        }\n        case 10: {\n          if (tag !== 80) {\n            break;\n          }\n\n          message.cancelAllOrdersBeforeExecution = reader.bool();\n          continue;\n        }\n        case 11: {\n          if (tag !== 90) {\n            break;\n          }\n\n          message.baseBudget = Struct.unwrap(Struct.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): UpdateStrategyRequest {\n    return {\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      name: isSet(object.name) ? globalThis.String(object.name) : undefined,\n      type: isSet(object.type) ? globalThis.String(object.type) : undefined,\n      recurrence: isSet(object.recurrence) ? RRuleOptions.fromJSON(object.recurrence) : undefined,\n      isActive: isSet(object.isActive) ? globalThis.Boolean(object.isActive) : undefined,\n      runIfOrdersActive: isSet(object.runIfOrdersActive) ? globalThis.Boolean(object.runIfOrdersActive) : undefined,\n      stopIfError: isSet(object.stopIfError) ? globalThis.Boolean(object.stopIfError) : undefined,\n      maxExecutionDelay: isSet(object.maxExecutionDelay) ? globalThis.Number(object.maxExecutionDelay) : undefined,\n      cancelAllOrdersBeforeExecution: isSet(object.cancelAllOrdersBeforeExecution)\n        ? globalThis.Boolean(object.cancelAllOrdersBeforeExecution)\n        : undefined,\n      baseBudget: isObject(object.baseBudget) ? object.baseBudget : undefined,\n    };\n  },\n\n  toJSON(message: UpdateStrategyRequest): unknown {\n    const obj: any = {};\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.name !== undefined) {\n      obj.name = message.name;\n    }\n    if (message.type !== undefined) {\n      obj.type = message.type;\n    }\n    if (message.recurrence !== undefined) {\n      obj.recurrence = RRuleOptions.toJSON(message.recurrence);\n    }\n    if (message.isActive !== undefined) {\n      obj.isActive = message.isActive;\n    }\n    if (message.runIfOrdersActive !== undefined) {\n      obj.runIfOrdersActive = message.runIfOrdersActive;\n    }\n    if (message.stopIfError !== undefined) {\n      obj.stopIfError = message.stopIfError;\n    }\n    if (message.maxExecutionDelay !== undefined) {\n      obj.maxExecutionDelay = Math.round(message.maxExecutionDelay);\n    }\n    if (message.cancelAllOrdersBeforeExecution !== undefined) {\n      obj.cancelAllOrdersBeforeExecution = message.cancelAllOrdersBeforeExecution;\n    }\n    if (message.baseBudget !== undefined) {\n      obj.baseBudget = message.baseBudget;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<UpdateStrategyRequest>, I>>(base?: I): UpdateStrategyRequest {\n    return UpdateStrategyRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<UpdateStrategyRequest>, I>>(object: I): UpdateStrategyRequest {\n    const message = createBaseUpdateStrategyRequest();\n    message.id = object.id ?? \"\";\n    message.userId = object.userId ?? \"\";\n    message.name = object.name ?? undefined;\n    message.type = object.type ?? undefined;\n    message.recurrence = (object.recurrence !== undefined && object.recurrence !== null)\n      ? RRuleOptions.fromPartial(object.recurrence)\n      : undefined;\n    message.isActive = object.isActive ?? undefined;\n    message.runIfOrdersActive = object.runIfOrdersActive ?? undefined;\n    message.stopIfError = object.stopIfError ?? undefined;\n    message.maxExecutionDelay = object.maxExecutionDelay ?? undefined;\n    message.cancelAllOrdersBeforeExecution = object.cancelAllOrdersBeforeExecution ?? undefined;\n    message.baseBudget = object.baseBudget ?? undefined;\n    return message;\n  },\n};\n\nfunction createBaseSetStrategyActivePairsRequest(): SetStrategyActivePairsRequest {\n  return { id: \"\", userId: \"\", activePairs: [], clear: undefined };\n}\n\nexport const SetStrategyActivePairsRequest: MessageFns<SetStrategyActivePairsRequest> = {\n  encode(message: SetStrategyActivePairsRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(18).string(message.userId);\n    }\n    for (const v of message.activePairs) {\n      PairRatio.encode(v!, writer.uint32(26).fork()).join();\n    }\n    if (message.clear !== undefined) {\n      writer.uint32(32).bool(message.clear);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): SetStrategyActivePairsRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSetStrategyActivePairsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.activePairs.push(PairRatio.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 4: {\n          if (tag !== 32) {\n            break;\n          }\n\n          message.clear = reader.bool();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SetStrategyActivePairsRequest {\n    return {\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      activePairs: globalThis.Array.isArray(object?.activePairs)\n        ? object.activePairs.map((e: any) => PairRatio.fromJSON(e))\n        : [],\n      clear: isSet(object.clear) ? globalThis.Boolean(object.clear) : undefined,\n    };\n  },\n\n  toJSON(message: SetStrategyActivePairsRequest): unknown {\n    const obj: any = {};\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.activePairs?.length) {\n      obj.activePairs = message.activePairs.map((e) => PairRatio.toJSON(e));\n    }\n    if (message.clear !== undefined) {\n      obj.clear = message.clear;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<SetStrategyActivePairsRequest>, I>>(base?: I): SetStrategyActivePairsRequest {\n    return SetStrategyActivePairsRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<SetStrategyActivePairsRequest>, I>>(\n    object: I,\n  ): SetStrategyActivePairsRequest {\n    const message = createBaseSetStrategyActivePairsRequest();\n    message.id = object.id ?? \"\";\n    message.userId = object.userId ?? \"\";\n    message.activePairs = object.activePairs?.map((e) => PairRatio.fromPartial(e)) || [];\n    message.clear = object.clear ?? undefined;\n    return message;\n  },\n};\n\nfunction createBaseSetStrategyDraftPairsRequest(): SetStrategyDraftPairsRequest {\n  return { id: \"\", userId: \"\", draftPairs: [], clear: undefined };\n}\n\nexport const SetStrategyDraftPairsRequest: MessageFns<SetStrategyDraftPairsRequest> = {\n  encode(message: SetStrategyDraftPairsRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(18).string(message.userId);\n    }\n    for (const v of message.draftPairs) {\n      PairBroker.encode(v!, writer.uint32(26).fork()).join();\n    }\n    if (message.clear !== undefined) {\n      writer.uint32(32).bool(message.clear);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): SetStrategyDraftPairsRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSetStrategyDraftPairsRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.draftPairs.push(PairBroker.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 4: {\n          if (tag !== 32) {\n            break;\n          }\n\n          message.clear = reader.bool();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SetStrategyDraftPairsRequest {\n    return {\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      draftPairs: globalThis.Array.isArray(object?.draftPairs)\n        ? object.draftPairs.map((e: any) => PairBroker.fromJSON(e))\n        : [],\n      clear: isSet(object.clear) ? globalThis.Boolean(object.clear) : undefined,\n    };\n  },\n\n  toJSON(message: SetStrategyDraftPairsRequest): unknown {\n    const obj: any = {};\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.draftPairs?.length) {\n      obj.draftPairs = message.draftPairs.map((e) => PairBroker.toJSON(e));\n    }\n    if (message.clear !== undefined) {\n      obj.clear = message.clear;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<SetStrategyDraftPairsRequest>, I>>(base?: I): SetStrategyDraftPairsRequest {\n    return SetStrategyDraftPairsRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<SetStrategyDraftPairsRequest>, I>>(object: I): SetStrategyDraftPairsRequest {\n    const message = createBaseSetStrategyDraftPairsRequest();\n    message.id = object.id ?? \"\";\n    message.userId = object.userId ?? \"\";\n    message.draftPairs = object.draftPairs?.map((e) => PairBroker.fromPartial(e)) || [];\n    message.clear = object.clear ?? undefined;\n    return message;\n  },\n};\n\nfunction createBaseListActiveStrategiesRequest(): ListActiveStrategiesRequest {\n  return { base: \"\", quote: \"\", broker: \"\", executionDate: undefined };\n}\n\nexport const ListActiveStrategiesRequest: MessageFns<ListActiveStrategiesRequest> = {\n  encode(message: ListActiveStrategiesRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.base !== \"\") {\n      writer.uint32(10).string(message.base);\n    }\n    if (message.quote !== \"\") {\n      writer.uint32(18).string(message.quote);\n    }\n    if (message.broker !== \"\") {\n      writer.uint32(26).string(message.broker);\n    }\n    if (message.executionDate !== undefined) {\n      Timestamp.encode(toTimestamp(message.executionDate), writer.uint32(34).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ListActiveStrategiesRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseListActiveStrategiesRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.base = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.quote = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.broker = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.executionDate = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ListActiveStrategiesRequest {\n    return {\n      base: isSet(object.base) ? globalThis.String(object.base) : \"\",\n      quote: isSet(object.quote) ? globalThis.String(object.quote) : \"\",\n      broker: isSet(object.broker) ? globalThis.String(object.broker) : \"\",\n      executionDate: isSet(object.executionDate) ? fromJsonTimestamp(object.executionDate) : undefined,\n    };\n  },\n\n  toJSON(message: ListActiveStrategiesRequest): unknown {\n    const obj: any = {};\n    if (message.base !== \"\") {\n      obj.base = message.base;\n    }\n    if (message.quote !== \"\") {\n      obj.quote = message.quote;\n    }\n    if (message.broker !== \"\") {\n      obj.broker = message.broker;\n    }\n    if (message.executionDate !== undefined) {\n      obj.executionDate = message.executionDate.toISOString();\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ListActiveStrategiesRequest>, I>>(base?: I): ListActiveStrategiesRequest {\n    return ListActiveStrategiesRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ListActiveStrategiesRequest>, I>>(object: I): ListActiveStrategiesRequest {\n    const message = createBaseListActiveStrategiesRequest();\n    message.base = object.base ?? \"\";\n    message.quote = object.quote ?? \"\";\n    message.broker = object.broker ?? \"\";\n    message.executionDate = object.executionDate ?? undefined;\n    return message;\n  },\n};\n\nexport type StrategiesService = typeof StrategiesService;\nexport const StrategiesService = {\n  listStrategiesByUserId: {\n    path: \"/minerva.Strategies/ListStrategiesByUserId\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: StrategiesByUserIdRequest) =>\n      Buffer.from(StrategiesByUserIdRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => StrategiesByUserIdRequest.decode(value),\n    responseSerialize: (value: StrategiesListResponse) => Buffer.from(StrategiesListResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => StrategiesListResponse.decode(value),\n  },\n  getStrategyById: {\n    path: \"/minerva.Strategies/GetStrategyById\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: StrategyByIdRequest) => Buffer.from(StrategyByIdRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => StrategyByIdRequest.decode(value),\n    responseSerialize: (value: StrategyResponse) => Buffer.from(StrategyResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => StrategyResponse.decode(value),\n  },\n  createStrategy: {\n    path: \"/minerva.Strategies/CreateStrategy\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: CreateStrategyRequest) => Buffer.from(CreateStrategyRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => CreateStrategyRequest.decode(value),\n    responseSerialize: (value: StrategyResponse) => Buffer.from(StrategyResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => StrategyResponse.decode(value),\n  },\n  updateStrategy: {\n    path: \"/minerva.Strategies/UpdateStrategy\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: UpdateStrategyRequest) => Buffer.from(UpdateStrategyRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => UpdateStrategyRequest.decode(value),\n    responseSerialize: (value: StrategyResponse) => Buffer.from(StrategyResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => StrategyResponse.decode(value),\n  },\n  setStrategyActivePairs: {\n    path: \"/minerva.Strategies/SetStrategyActivePairs\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: SetStrategyActivePairsRequest) =>\n      Buffer.from(SetStrategyActivePairsRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => SetStrategyActivePairsRequest.decode(value),\n    responseSerialize: (value: StrategyResponse) => Buffer.from(StrategyResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => StrategyResponse.decode(value),\n  },\n  setStrategyDraftPairs: {\n    path: \"/minerva.Strategies/SetStrategyDraftPairs\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: SetStrategyDraftPairsRequest) =>\n      Buffer.from(SetStrategyDraftPairsRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => SetStrategyDraftPairsRequest.decode(value),\n    responseSerialize: (value: StrategyResponse) => Buffer.from(StrategyResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => StrategyResponse.decode(value),\n  },\n  deleteStrategy: {\n    path: \"/minerva.Strategies/DeleteStrategy\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: StrategyByIdRequest) => Buffer.from(StrategyByIdRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => StrategyByIdRequest.decode(value),\n    responseSerialize: (value: Empty) => Buffer.from(Empty.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => Empty.decode(value),\n  },\n  listActiveStrategies: {\n    path: \"/minerva.Strategies/ListActiveStrategies\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: ListActiveStrategiesRequest) =>\n      Buffer.from(ListActiveStrategiesRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => ListActiveStrategiesRequest.decode(value),\n    responseSerialize: (value: StrategiesListResponse) => Buffer.from(StrategiesListResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => StrategiesListResponse.decode(value),\n  },\n} as const;\n\nexport interface StrategiesServer extends UntypedServiceImplementation {\n  listStrategiesByUserId: handleUnaryCall<StrategiesByUserIdRequest, StrategiesListResponse>;\n  getStrategyById: handleUnaryCall<StrategyByIdRequest, StrategyResponse>;\n  createStrategy: handleUnaryCall<CreateStrategyRequest, StrategyResponse>;\n  updateStrategy: handleUnaryCall<UpdateStrategyRequest, StrategyResponse>;\n  setStrategyActivePairs: handleUnaryCall<SetStrategyActivePairsRequest, StrategyResponse>;\n  setStrategyDraftPairs: handleUnaryCall<SetStrategyDraftPairsRequest, StrategyResponse>;\n  deleteStrategy: handleUnaryCall<StrategyByIdRequest, Empty>;\n  listActiveStrategies: handleUnaryCall<ListActiveStrategiesRequest, StrategiesListResponse>;\n}\n\nexport interface StrategiesClient extends Client {\n  listStrategiesByUserId(\n    request: StrategiesByUserIdRequest,\n    callback: (error: ServiceError | null, response: StrategiesListResponse) => void,\n  ): ClientUnaryCall;\n  listStrategiesByUserId(\n    request: StrategiesByUserIdRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: StrategiesListResponse) => void,\n  ): ClientUnaryCall;\n  listStrategiesByUserId(\n    request: StrategiesByUserIdRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: StrategiesListResponse) => void,\n  ): ClientUnaryCall;\n  getStrategyById(\n    request: StrategyByIdRequest,\n    callback: (error: ServiceError | null, response: StrategyResponse) => void,\n  ): ClientUnaryCall;\n  getStrategyById(\n    request: StrategyByIdRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: StrategyResponse) => void,\n  ): ClientUnaryCall;\n  getStrategyById(\n    request: StrategyByIdRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: StrategyResponse) => void,\n  ): ClientUnaryCall;\n  createStrategy(\n    request: CreateStrategyRequest,\n    callback: (error: ServiceError | null, response: StrategyResponse) => void,\n  ): ClientUnaryCall;\n  createStrategy(\n    request: CreateStrategyRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: StrategyResponse) => void,\n  ): ClientUnaryCall;\n  createStrategy(\n    request: CreateStrategyRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: StrategyResponse) => void,\n  ): ClientUnaryCall;\n  updateStrategy(\n    request: UpdateStrategyRequest,\n    callback: (error: ServiceError | null, response: StrategyResponse) => void,\n  ): ClientUnaryCall;\n  updateStrategy(\n    request: UpdateStrategyRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: StrategyResponse) => void,\n  ): ClientUnaryCall;\n  updateStrategy(\n    request: UpdateStrategyRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: StrategyResponse) => void,\n  ): ClientUnaryCall;\n  setStrategyActivePairs(\n    request: SetStrategyActivePairsRequest,\n    callback: (error: ServiceError | null, response: StrategyResponse) => void,\n  ): ClientUnaryCall;\n  setStrategyActivePairs(\n    request: SetStrategyActivePairsRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: StrategyResponse) => void,\n  ): ClientUnaryCall;\n  setStrategyActivePairs(\n    request: SetStrategyActivePairsRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: StrategyResponse) => void,\n  ): ClientUnaryCall;\n  setStrategyDraftPairs(\n    request: SetStrategyDraftPairsRequest,\n    callback: (error: ServiceError | null, response: StrategyResponse) => void,\n  ): ClientUnaryCall;\n  setStrategyDraftPairs(\n    request: SetStrategyDraftPairsRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: StrategyResponse) => void,\n  ): ClientUnaryCall;\n  setStrategyDraftPairs(\n    request: SetStrategyDraftPairsRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: StrategyResponse) => void,\n  ): ClientUnaryCall;\n  deleteStrategy(\n    request: StrategyByIdRequest,\n    callback: (error: ServiceError | null, response: Empty) => void,\n  ): ClientUnaryCall;\n  deleteStrategy(\n    request: StrategyByIdRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: Empty) => void,\n  ): ClientUnaryCall;\n  deleteStrategy(\n    request: StrategyByIdRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: Empty) => void,\n  ): ClientUnaryCall;\n  listActiveStrategies(\n    request: ListActiveStrategiesRequest,\n    callback: (error: ServiceError | null, response: StrategiesListResponse) => void,\n  ): ClientUnaryCall;\n  listActiveStrategies(\n    request: ListActiveStrategiesRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: StrategiesListResponse) => void,\n  ): ClientUnaryCall;\n  listActiveStrategies(\n    request: ListActiveStrategiesRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: StrategiesListResponse) => void,\n  ): ClientUnaryCall;\n}\n\nexport const StrategiesClient = makeGenericClientConstructor(StrategiesService, \"minerva.Strategies\") as unknown as {\n  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): StrategiesClient;\n  service: typeof StrategiesService;\n  serviceName: string;\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\ntype DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\ntype Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction toTimestamp(date: Date): Timestamp {\n  const seconds = Math.trunc(date.getTime() / 1_000);\n  const nanos = (date.getTime() % 1_000) * 1_000_000;\n  return { seconds, nanos };\n}\n\nfunction fromTimestamp(t: Timestamp): Date {\n  let millis = (t.seconds || 0) * 1_000;\n  millis += (t.nanos || 0) / 1_000_000;\n  return new globalThis.Date(millis);\n}\n\nfunction fromJsonTimestamp(o: any): Date {\n  if (o instanceof globalThis.Date) {\n    return o;\n  } else if (typeof o === \"string\") {\n    return new globalThis.Date(o);\n  } else {\n    return fromTimestamp(Timestamp.fromJSON(o));\n  }\n}\n\nfunction isObject(value: any): boolean {\n  return typeof value === \"object\" && value !== null;\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n\ninterface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  fromJSON(object: any): T;\n  toJSON(message: T): unknown;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n"],"names":["CreateStrategyRequest","ListActiveStrategiesRequest","PairBroker","PairRatio","RRuleOptions","SetStrategyActivePairsRequest","SetStrategyDraftPairsRequest","StrategiesByUserIdRequest","StrategiesClient","StrategiesListResponse","StrategiesService","StrategyByIdRequest","StrategyResponse","UpdateStrategyRequest","createBasePairBroker","base","quote","broker","encode","message","writer","BinaryWriter","uint32","string","decode","input","length","reader","BinaryReader","end","undefined","len","pos","tag","skip","fromJSON","object","isSet","globalThis","String","toJSON","obj","create","fromPartial","createBasePairRatio","quoteRatio","baseRatio","double","Number","createBaseRRuleOptions","frequency","interval","dtstart","bysetpos","bymonth","bymonthday","byyearday","byweekno","byweekday","byhour","byminute","int32","Timestamp","toTimestamp","fork","join","v","fromTimestamp","push","end2","fromJsonTimestamp","Array","isArray","map","e","Math","round","toISOString","createBaseStrategyResponse","id","userId","name","type","isActive","baseBudget","lastBudgetChange","recurrence","recurrenceDates","runIfOrdersActive","stopIfError","maxExecutionDelay","cancelAllOrdersBeforeExecution","deployedAt","createdAt","updatedAt","activePairs","draftPairs","bool","Struct","wrap","unwrap","Boolean","isObject","createBaseStrategiesListResponse","strategies","createBaseStrategiesByUserIdRequest","createBaseStrategyByIdRequest","createBaseCreateStrategyRequest","createBaseUpdateStrategyRequest","createBaseSetStrategyActivePairsRequest","clear","createBaseSetStrategyDraftPairsRequest","createBaseListActiveStrategiesRequest","executionDate","listStrategiesByUserId","path","requestStream","responseStream","requestSerialize","value","Buffer","from","finish","requestDeserialize","responseSerialize","responseDeserialize","getStrategyById","createStrategy","updateStrategy","setStrategyActivePairs","setStrategyDraftPairs","deleteStrategy","Empty","listActiveStrategies","makeGenericClientConstructor","date","seconds","trunc","getTime","nanos","t","millis","Date","o"],"mappings":"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"}
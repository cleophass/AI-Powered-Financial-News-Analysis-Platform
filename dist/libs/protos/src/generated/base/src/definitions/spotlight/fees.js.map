{"version":3,"sources":["../../../../../../../../../libs/protos/src/generated/base/src/definitions/spotlight/fees.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.5.0\n//   protoc               v5.29.1\n// source: src/definitions/spotlight/fees.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nimport {\n  type CallOptions,\n  ChannelCredentials,\n  Client,\n  type ClientOptions,\n  type ClientUnaryCall,\n  type handleUnaryCall,\n  makeGenericClientConstructor,\n  Metadata,\n  type ServiceError,\n  type UntypedServiceImplementation,\n} from \"@grpc/grpc-js\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\n\nexport interface Fee {\n  asset: string;\n  broker: string;\n  amount: number;\n}\n\nexport interface FeeResponse {\n  id: string;\n  userId: string;\n  orderId?: string | undefined;\n  asset: string;\n  broker: string;\n  amount: number;\n}\n\nexport interface FeesListResponse {\n  fees: FeeResponse[];\n}\n\nexport interface FeeByIdRequest {\n  id: string;\n  userId: string;\n}\n\nexport interface ListFeesByOrderIdRequest {\n  userId: string;\n  orderId: string;\n}\n\nexport interface ListFeesByStrategyIdRequest {\n  userId: string;\n  strategyId: string;\n  startDate?: Date | undefined;\n  endDate?: Date | undefined;\n}\n\nexport interface SetOrderFeesRequest {\n  userId: string;\n  orderId: string;\n  fees: Fee[];\n}\n\nfunction createBaseFee(): Fee {\n  return { asset: \"\", broker: \"\", amount: 0 };\n}\n\nexport const Fee: MessageFns<Fee> = {\n  encode(message: Fee, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.asset !== \"\") {\n      writer.uint32(10).string(message.asset);\n    }\n    if (message.broker !== \"\") {\n      writer.uint32(18).string(message.broker);\n    }\n    if (message.amount !== 0) {\n      writer.uint32(25).double(message.amount);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): Fee {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFee();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.asset = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.broker = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 25) {\n            break;\n          }\n\n          message.amount = reader.double();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Fee {\n    return {\n      asset: isSet(object.asset) ? globalThis.String(object.asset) : \"\",\n      broker: isSet(object.broker) ? globalThis.String(object.broker) : \"\",\n      amount: isSet(object.amount) ? globalThis.Number(object.amount) : 0,\n    };\n  },\n\n  toJSON(message: Fee): unknown {\n    const obj: any = {};\n    if (message.asset !== \"\") {\n      obj.asset = message.asset;\n    }\n    if (message.broker !== \"\") {\n      obj.broker = message.broker;\n    }\n    if (message.amount !== 0) {\n      obj.amount = message.amount;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<Fee>, I>>(base?: I): Fee {\n    return Fee.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<Fee>, I>>(object: I): Fee {\n    const message = createBaseFee();\n    message.asset = object.asset ?? \"\";\n    message.broker = object.broker ?? \"\";\n    message.amount = object.amount ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseFeeResponse(): FeeResponse {\n  return { id: \"\", userId: \"\", orderId: undefined, asset: \"\", broker: \"\", amount: 0 };\n}\n\nexport const FeeResponse: MessageFns<FeeResponse> = {\n  encode(message: FeeResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(18).string(message.userId);\n    }\n    if (message.orderId !== undefined) {\n      writer.uint32(26).string(message.orderId);\n    }\n    if (message.asset !== \"\") {\n      writer.uint32(34).string(message.asset);\n    }\n    if (message.broker !== \"\") {\n      writer.uint32(42).string(message.broker);\n    }\n    if (message.amount !== 0) {\n      writer.uint32(49).double(message.amount);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): FeeResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFeeResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.orderId = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.asset = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.broker = reader.string();\n          continue;\n        }\n        case 6: {\n          if (tag !== 49) {\n            break;\n          }\n\n          message.amount = reader.double();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): FeeResponse {\n    return {\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      orderId: isSet(object.orderId) ? globalThis.String(object.orderId) : undefined,\n      asset: isSet(object.asset) ? globalThis.String(object.asset) : \"\",\n      broker: isSet(object.broker) ? globalThis.String(object.broker) : \"\",\n      amount: isSet(object.amount) ? globalThis.Number(object.amount) : 0,\n    };\n  },\n\n  toJSON(message: FeeResponse): unknown {\n    const obj: any = {};\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.orderId !== undefined) {\n      obj.orderId = message.orderId;\n    }\n    if (message.asset !== \"\") {\n      obj.asset = message.asset;\n    }\n    if (message.broker !== \"\") {\n      obj.broker = message.broker;\n    }\n    if (message.amount !== 0) {\n      obj.amount = message.amount;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<FeeResponse>, I>>(base?: I): FeeResponse {\n    return FeeResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<FeeResponse>, I>>(object: I): FeeResponse {\n    const message = createBaseFeeResponse();\n    message.id = object.id ?? \"\";\n    message.userId = object.userId ?? \"\";\n    message.orderId = object.orderId ?? undefined;\n    message.asset = object.asset ?? \"\";\n    message.broker = object.broker ?? \"\";\n    message.amount = object.amount ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseFeesListResponse(): FeesListResponse {\n  return { fees: [] };\n}\n\nexport const FeesListResponse: MessageFns<FeesListResponse> = {\n  encode(message: FeesListResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.fees) {\n      FeeResponse.encode(v!, writer.uint32(10).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): FeesListResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFeesListResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.fees.push(FeeResponse.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): FeesListResponse {\n    return { fees: globalThis.Array.isArray(object?.fees) ? object.fees.map((e: any) => FeeResponse.fromJSON(e)) : [] };\n  },\n\n  toJSON(message: FeesListResponse): unknown {\n    const obj: any = {};\n    if (message.fees?.length) {\n      obj.fees = message.fees.map((e) => FeeResponse.toJSON(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<FeesListResponse>, I>>(base?: I): FeesListResponse {\n    return FeesListResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<FeesListResponse>, I>>(object: I): FeesListResponse {\n    const message = createBaseFeesListResponse();\n    message.fees = object.fees?.map((e) => FeeResponse.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseFeeByIdRequest(): FeeByIdRequest {\n  return { id: \"\", userId: \"\" };\n}\n\nexport const FeeByIdRequest: MessageFns<FeeByIdRequest> = {\n  encode(message: FeeByIdRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.id !== \"\") {\n      writer.uint32(10).string(message.id);\n    }\n    if (message.userId !== \"\") {\n      writer.uint32(18).string(message.userId);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): FeeByIdRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseFeeByIdRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.id = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): FeeByIdRequest {\n    return {\n      id: isSet(object.id) ? globalThis.String(object.id) : \"\",\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n    };\n  },\n\n  toJSON(message: FeeByIdRequest): unknown {\n    const obj: any = {};\n    if (message.id !== \"\") {\n      obj.id = message.id;\n    }\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<FeeByIdRequest>, I>>(base?: I): FeeByIdRequest {\n    return FeeByIdRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<FeeByIdRequest>, I>>(object: I): FeeByIdRequest {\n    const message = createBaseFeeByIdRequest();\n    message.id = object.id ?? \"\";\n    message.userId = object.userId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseListFeesByOrderIdRequest(): ListFeesByOrderIdRequest {\n  return { userId: \"\", orderId: \"\" };\n}\n\nexport const ListFeesByOrderIdRequest: MessageFns<ListFeesByOrderIdRequest> = {\n  encode(message: ListFeesByOrderIdRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.orderId !== \"\") {\n      writer.uint32(18).string(message.orderId);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ListFeesByOrderIdRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseListFeesByOrderIdRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.orderId = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ListFeesByOrderIdRequest {\n    return {\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      orderId: isSet(object.orderId) ? globalThis.String(object.orderId) : \"\",\n    };\n  },\n\n  toJSON(message: ListFeesByOrderIdRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.orderId !== \"\") {\n      obj.orderId = message.orderId;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ListFeesByOrderIdRequest>, I>>(base?: I): ListFeesByOrderIdRequest {\n    return ListFeesByOrderIdRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ListFeesByOrderIdRequest>, I>>(object: I): ListFeesByOrderIdRequest {\n    const message = createBaseListFeesByOrderIdRequest();\n    message.userId = object.userId ?? \"\";\n    message.orderId = object.orderId ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseListFeesByStrategyIdRequest(): ListFeesByStrategyIdRequest {\n  return { userId: \"\", strategyId: \"\", startDate: undefined, endDate: undefined };\n}\n\nexport const ListFeesByStrategyIdRequest: MessageFns<ListFeesByStrategyIdRequest> = {\n  encode(message: ListFeesByStrategyIdRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.strategyId !== \"\") {\n      writer.uint32(18).string(message.strategyId);\n    }\n    if (message.startDate !== undefined) {\n      Timestamp.encode(toTimestamp(message.startDate), writer.uint32(26).fork()).join();\n    }\n    if (message.endDate !== undefined) {\n      Timestamp.encode(toTimestamp(message.endDate), writer.uint32(34).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ListFeesByStrategyIdRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseListFeesByStrategyIdRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.strategyId = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.startDate = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.endDate = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ListFeesByStrategyIdRequest {\n    return {\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      strategyId: isSet(object.strategyId) ? globalThis.String(object.strategyId) : \"\",\n      startDate: isSet(object.startDate) ? fromJsonTimestamp(object.startDate) : undefined,\n      endDate: isSet(object.endDate) ? fromJsonTimestamp(object.endDate) : undefined,\n    };\n  },\n\n  toJSON(message: ListFeesByStrategyIdRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.strategyId !== \"\") {\n      obj.strategyId = message.strategyId;\n    }\n    if (message.startDate !== undefined) {\n      obj.startDate = message.startDate.toISOString();\n    }\n    if (message.endDate !== undefined) {\n      obj.endDate = message.endDate.toISOString();\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ListFeesByStrategyIdRequest>, I>>(base?: I): ListFeesByStrategyIdRequest {\n    return ListFeesByStrategyIdRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ListFeesByStrategyIdRequest>, I>>(object: I): ListFeesByStrategyIdRequest {\n    const message = createBaseListFeesByStrategyIdRequest();\n    message.userId = object.userId ?? \"\";\n    message.strategyId = object.strategyId ?? \"\";\n    message.startDate = object.startDate ?? undefined;\n    message.endDate = object.endDate ?? undefined;\n    return message;\n  },\n};\n\nfunction createBaseSetOrderFeesRequest(): SetOrderFeesRequest {\n  return { userId: \"\", orderId: \"\", fees: [] };\n}\n\nexport const SetOrderFeesRequest: MessageFns<SetOrderFeesRequest> = {\n  encode(message: SetOrderFeesRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.userId !== \"\") {\n      writer.uint32(10).string(message.userId);\n    }\n    if (message.orderId !== \"\") {\n      writer.uint32(18).string(message.orderId);\n    }\n    for (const v of message.fees) {\n      Fee.encode(v!, writer.uint32(26).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): SetOrderFeesRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseSetOrderFeesRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.userId = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.orderId = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.fees.push(Fee.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): SetOrderFeesRequest {\n    return {\n      userId: isSet(object.userId) ? globalThis.String(object.userId) : \"\",\n      orderId: isSet(object.orderId) ? globalThis.String(object.orderId) : \"\",\n      fees: globalThis.Array.isArray(object?.fees) ? object.fees.map((e: any) => Fee.fromJSON(e)) : [],\n    };\n  },\n\n  toJSON(message: SetOrderFeesRequest): unknown {\n    const obj: any = {};\n    if (message.userId !== \"\") {\n      obj.userId = message.userId;\n    }\n    if (message.orderId !== \"\") {\n      obj.orderId = message.orderId;\n    }\n    if (message.fees?.length) {\n      obj.fees = message.fees.map((e) => Fee.toJSON(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<SetOrderFeesRequest>, I>>(base?: I): SetOrderFeesRequest {\n    return SetOrderFeesRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<SetOrderFeesRequest>, I>>(object: I): SetOrderFeesRequest {\n    const message = createBaseSetOrderFeesRequest();\n    message.userId = object.userId ?? \"\";\n    message.orderId = object.orderId ?? \"\";\n    message.fees = object.fees?.map((e) => Fee.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nexport type FeesService = typeof FeesService;\nexport const FeesService = {\n  getFeeById: {\n    path: \"/spotlight.Fees/GetFeeById\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: FeeByIdRequest) => Buffer.from(FeeByIdRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => FeeByIdRequest.decode(value),\n    responseSerialize: (value: FeeResponse) => Buffer.from(FeeResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => FeeResponse.decode(value),\n  },\n  listFeesByOrderId: {\n    path: \"/spotlight.Fees/ListFeesByOrderId\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: ListFeesByOrderIdRequest) => Buffer.from(ListFeesByOrderIdRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => ListFeesByOrderIdRequest.decode(value),\n    responseSerialize: (value: FeesListResponse) => Buffer.from(FeesListResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => FeesListResponse.decode(value),\n  },\n  listFeesByStrategyId: {\n    path: \"/spotlight.Fees/ListFeesByStrategyId\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: ListFeesByStrategyIdRequest) =>\n      Buffer.from(ListFeesByStrategyIdRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => ListFeesByStrategyIdRequest.decode(value),\n    responseSerialize: (value: FeesListResponse) => Buffer.from(FeesListResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => FeesListResponse.decode(value),\n  },\n  setOrderFees: {\n    path: \"/spotlight.Fees/SetOrderFees\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: SetOrderFeesRequest) => Buffer.from(SetOrderFeesRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => SetOrderFeesRequest.decode(value),\n    responseSerialize: (value: FeesListResponse) => Buffer.from(FeesListResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => FeesListResponse.decode(value),\n  },\n} as const;\n\nexport interface FeesServer extends UntypedServiceImplementation {\n  getFeeById: handleUnaryCall<FeeByIdRequest, FeeResponse>;\n  listFeesByOrderId: handleUnaryCall<ListFeesByOrderIdRequest, FeesListResponse>;\n  listFeesByStrategyId: handleUnaryCall<ListFeesByStrategyIdRequest, FeesListResponse>;\n  setOrderFees: handleUnaryCall<SetOrderFeesRequest, FeesListResponse>;\n}\n\nexport interface FeesClient extends Client {\n  getFeeById(\n    request: FeeByIdRequest,\n    callback: (error: ServiceError | null, response: FeeResponse) => void,\n  ): ClientUnaryCall;\n  getFeeById(\n    request: FeeByIdRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: FeeResponse) => void,\n  ): ClientUnaryCall;\n  getFeeById(\n    request: FeeByIdRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: FeeResponse) => void,\n  ): ClientUnaryCall;\n  listFeesByOrderId(\n    request: ListFeesByOrderIdRequest,\n    callback: (error: ServiceError | null, response: FeesListResponse) => void,\n  ): ClientUnaryCall;\n  listFeesByOrderId(\n    request: ListFeesByOrderIdRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: FeesListResponse) => void,\n  ): ClientUnaryCall;\n  listFeesByOrderId(\n    request: ListFeesByOrderIdRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: FeesListResponse) => void,\n  ): ClientUnaryCall;\n  listFeesByStrategyId(\n    request: ListFeesByStrategyIdRequest,\n    callback: (error: ServiceError | null, response: FeesListResponse) => void,\n  ): ClientUnaryCall;\n  listFeesByStrategyId(\n    request: ListFeesByStrategyIdRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: FeesListResponse) => void,\n  ): ClientUnaryCall;\n  listFeesByStrategyId(\n    request: ListFeesByStrategyIdRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: FeesListResponse) => void,\n  ): ClientUnaryCall;\n  setOrderFees(\n    request: SetOrderFeesRequest,\n    callback: (error: ServiceError | null, response: FeesListResponse) => void,\n  ): ClientUnaryCall;\n  setOrderFees(\n    request: SetOrderFeesRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: FeesListResponse) => void,\n  ): ClientUnaryCall;\n  setOrderFees(\n    request: SetOrderFeesRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: FeesListResponse) => void,\n  ): ClientUnaryCall;\n}\n\nexport const FeesClient = makeGenericClientConstructor(FeesService, \"spotlight.Fees\") as unknown as {\n  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): FeesClient;\n  service: typeof FeesService;\n  serviceName: string;\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\ntype DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\ntype Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction toTimestamp(date: Date): Timestamp {\n  const seconds = Math.trunc(date.getTime() / 1_000);\n  const nanos = (date.getTime() % 1_000) * 1_000_000;\n  return { seconds, nanos };\n}\n\nfunction fromTimestamp(t: Timestamp): Date {\n  let millis = (t.seconds || 0) * 1_000;\n  millis += (t.nanos || 0) / 1_000_000;\n  return new globalThis.Date(millis);\n}\n\nfunction fromJsonTimestamp(o: any): Date {\n  if (o instanceof globalThis.Date) {\n    return o;\n  } else if (typeof o === \"string\") {\n    return new globalThis.Date(o);\n  } else {\n    return fromTimestamp(Timestamp.fromJSON(o));\n  }\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n\ninterface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  fromJSON(object: any): T;\n  toJSON(message: T): unknown;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n"],"names":["Fee","FeeByIdRequest","FeeResponse","FeesClient","FeesListResponse","FeesService","ListFeesByOrderIdRequest","ListFeesByStrategyIdRequest","SetOrderFeesRequest","createBaseFee","asset","broker","amount","encode","message","writer","BinaryWriter","uint32","string","double","decode","input","length","reader","BinaryReader","end","undefined","len","pos","tag","skip","fromJSON","object","isSet","globalThis","String","Number","toJSON","obj","create","base","fromPartial","createBaseFeeResponse","id","userId","orderId","createBaseFeesListResponse","fees","v","fork","join","push","Array","isArray","map","e","createBaseFeeByIdRequest","createBaseListFeesByOrderIdRequest","createBaseListFeesByStrategyIdRequest","strategyId","startDate","endDate","Timestamp","toTimestamp","fromTimestamp","fromJsonTimestamp","toISOString","createBaseSetOrderFeesRequest","getFeeById","path","requestStream","responseStream","requestSerialize","value","Buffer","from","finish","requestDeserialize","responseSerialize","responseDeserialize","listFeesByOrderId","listFeesByStrategyId","setOrderFees","makeGenericClientConstructor","date","seconds","Math","trunc","getTime","nanos","t","millis","Date","o"],"mappings":"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"}
{"version":3,"sources":["../../../../../../../../../libs/protos/src/generated/base/src/definitions/abacus/market_data.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.5.0\n//   protoc               v5.29.1\n// source: src/definitions/abacus/market_data.proto\n\n/* eslint-disable */\nimport { BinaryReader, BinaryWriter } from \"@bufbuild/protobuf/wire\";\nimport {\n  type CallOptions,\n  ChannelCredentials,\n  Client,\n  type ClientOptions,\n  type ClientUnaryCall,\n  type handleUnaryCall,\n  makeGenericClientConstructor,\n  Metadata,\n  type ServiceError,\n  type UntypedServiceImplementation,\n} from \"@grpc/grpc-js\";\nimport { Struct } from \"../../../google/protobuf/struct\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\n\nexport interface Asset {\n  base: string;\n  broker: string;\n}\n\nexport interface Rate {\n  base: string;\n  quote: string;\n  broker: string;\n  rate: number;\n}\n\nexport interface Indicator {\n  name: string;\n  parameters: { [key: string]: any } | undefined;\n}\n\nexport interface IndicatorMetadata {\n  key: string;\n  name: string;\n  parameters: { [key: string]: any } | undefined;\n}\n\nexport interface ComputedIndicator {\n  key: string;\n  outputs: { [key: string]: any } | undefined;\n}\n\nexport interface GetMarketDataRequest {\n  start: Date | undefined;\n  end: Date | undefined;\n  interval: string;\n  base: string;\n  quote: string;\n  broker: string;\n  indicators: Indicator[];\n}\n\nexport interface GetRatesRequest {\n  assets: Asset[];\n  quote: string;\n}\n\nexport interface Candle {\n  openTime: Date | undefined;\n  closeTime: Date | undefined;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  indicators: ComputedIndicator[];\n}\n\nexport interface MarketDataResponse {\n  indicators: IndicatorMetadata[];\n  candles: Candle[];\n}\n\nexport interface RatesResponse {\n  time: Date | undefined;\n  rates: Rate[];\n}\n\nfunction createBaseAsset(): Asset {\n  return { base: \"\", broker: \"\" };\n}\n\nexport const Asset: MessageFns<Asset> = {\n  encode(message: Asset, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.base !== \"\") {\n      writer.uint32(10).string(message.base);\n    }\n    if (message.broker !== \"\") {\n      writer.uint32(18).string(message.broker);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): Asset {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseAsset();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.base = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.broker = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Asset {\n    return {\n      base: isSet(object.base) ? globalThis.String(object.base) : \"\",\n      broker: isSet(object.broker) ? globalThis.String(object.broker) : \"\",\n    };\n  },\n\n  toJSON(message: Asset): unknown {\n    const obj: any = {};\n    if (message.base !== \"\") {\n      obj.base = message.base;\n    }\n    if (message.broker !== \"\") {\n      obj.broker = message.broker;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<Asset>, I>>(base?: I): Asset {\n    return Asset.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<Asset>, I>>(object: I): Asset {\n    const message = createBaseAsset();\n    message.base = object.base ?? \"\";\n    message.broker = object.broker ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseRate(): Rate {\n  return { base: \"\", quote: \"\", broker: \"\", rate: 0 };\n}\n\nexport const Rate: MessageFns<Rate> = {\n  encode(message: Rate, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.base !== \"\") {\n      writer.uint32(10).string(message.base);\n    }\n    if (message.quote !== \"\") {\n      writer.uint32(18).string(message.quote);\n    }\n    if (message.broker !== \"\") {\n      writer.uint32(26).string(message.broker);\n    }\n    if (message.rate !== 0) {\n      writer.uint32(33).double(message.rate);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): Rate {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRate();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.base = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.quote = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.broker = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 33) {\n            break;\n          }\n\n          message.rate = reader.double();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Rate {\n    return {\n      base: isSet(object.base) ? globalThis.String(object.base) : \"\",\n      quote: isSet(object.quote) ? globalThis.String(object.quote) : \"\",\n      broker: isSet(object.broker) ? globalThis.String(object.broker) : \"\",\n      rate: isSet(object.rate) ? globalThis.Number(object.rate) : 0,\n    };\n  },\n\n  toJSON(message: Rate): unknown {\n    const obj: any = {};\n    if (message.base !== \"\") {\n      obj.base = message.base;\n    }\n    if (message.quote !== \"\") {\n      obj.quote = message.quote;\n    }\n    if (message.broker !== \"\") {\n      obj.broker = message.broker;\n    }\n    if (message.rate !== 0) {\n      obj.rate = message.rate;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<Rate>, I>>(base?: I): Rate {\n    return Rate.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<Rate>, I>>(object: I): Rate {\n    const message = createBaseRate();\n    message.base = object.base ?? \"\";\n    message.quote = object.quote ?? \"\";\n    message.broker = object.broker ?? \"\";\n    message.rate = object.rate ?? 0;\n    return message;\n  },\n};\n\nfunction createBaseIndicator(): Indicator {\n  return { name: \"\", parameters: undefined };\n}\n\nexport const Indicator: MessageFns<Indicator> = {\n  encode(message: Indicator, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.name !== \"\") {\n      writer.uint32(10).string(message.name);\n    }\n    if (message.parameters !== undefined) {\n      Struct.encode(Struct.wrap(message.parameters), writer.uint32(18).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): Indicator {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseIndicator();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.parameters = Struct.unwrap(Struct.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Indicator {\n    return {\n      name: isSet(object.name) ? globalThis.String(object.name) : \"\",\n      parameters: isObject(object.parameters) ? object.parameters : undefined,\n    };\n  },\n\n  toJSON(message: Indicator): unknown {\n    const obj: any = {};\n    if (message.name !== \"\") {\n      obj.name = message.name;\n    }\n    if (message.parameters !== undefined) {\n      obj.parameters = message.parameters;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<Indicator>, I>>(base?: I): Indicator {\n    return Indicator.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<Indicator>, I>>(object: I): Indicator {\n    const message = createBaseIndicator();\n    message.name = object.name ?? \"\";\n    message.parameters = object.parameters ?? undefined;\n    return message;\n  },\n};\n\nfunction createBaseIndicatorMetadata(): IndicatorMetadata {\n  return { key: \"\", name: \"\", parameters: undefined };\n}\n\nexport const IndicatorMetadata: MessageFns<IndicatorMetadata> = {\n  encode(message: IndicatorMetadata, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.name !== \"\") {\n      writer.uint32(18).string(message.name);\n    }\n    if (message.parameters !== undefined) {\n      Struct.encode(Struct.wrap(message.parameters), writer.uint32(26).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): IndicatorMetadata {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseIndicatorMetadata();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.key = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.name = reader.string();\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.parameters = Struct.unwrap(Struct.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): IndicatorMetadata {\n    return {\n      key: isSet(object.key) ? globalThis.String(object.key) : \"\",\n      name: isSet(object.name) ? globalThis.String(object.name) : \"\",\n      parameters: isObject(object.parameters) ? object.parameters : undefined,\n    };\n  },\n\n  toJSON(message: IndicatorMetadata): unknown {\n    const obj: any = {};\n    if (message.key !== \"\") {\n      obj.key = message.key;\n    }\n    if (message.name !== \"\") {\n      obj.name = message.name;\n    }\n    if (message.parameters !== undefined) {\n      obj.parameters = message.parameters;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<IndicatorMetadata>, I>>(base?: I): IndicatorMetadata {\n    return IndicatorMetadata.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<IndicatorMetadata>, I>>(object: I): IndicatorMetadata {\n    const message = createBaseIndicatorMetadata();\n    message.key = object.key ?? \"\";\n    message.name = object.name ?? \"\";\n    message.parameters = object.parameters ?? undefined;\n    return message;\n  },\n};\n\nfunction createBaseComputedIndicator(): ComputedIndicator {\n  return { key: \"\", outputs: undefined };\n}\n\nexport const ComputedIndicator: MessageFns<ComputedIndicator> = {\n  encode(message: ComputedIndicator, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.key !== \"\") {\n      writer.uint32(10).string(message.key);\n    }\n    if (message.outputs !== undefined) {\n      Struct.encode(Struct.wrap(message.outputs), writer.uint32(18).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): ComputedIndicator {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseComputedIndicator();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.key = reader.string();\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.outputs = Struct.unwrap(Struct.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): ComputedIndicator {\n    return {\n      key: isSet(object.key) ? globalThis.String(object.key) : \"\",\n      outputs: isObject(object.outputs) ? object.outputs : undefined,\n    };\n  },\n\n  toJSON(message: ComputedIndicator): unknown {\n    const obj: any = {};\n    if (message.key !== \"\") {\n      obj.key = message.key;\n    }\n    if (message.outputs !== undefined) {\n      obj.outputs = message.outputs;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<ComputedIndicator>, I>>(base?: I): ComputedIndicator {\n    return ComputedIndicator.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<ComputedIndicator>, I>>(object: I): ComputedIndicator {\n    const message = createBaseComputedIndicator();\n    message.key = object.key ?? \"\";\n    message.outputs = object.outputs ?? undefined;\n    return message;\n  },\n};\n\nfunction createBaseGetMarketDataRequest(): GetMarketDataRequest {\n  return { start: undefined, end: undefined, interval: \"\", base: \"\", quote: \"\", broker: \"\", indicators: [] };\n}\n\nexport const GetMarketDataRequest: MessageFns<GetMarketDataRequest> = {\n  encode(message: GetMarketDataRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.start !== undefined) {\n      Timestamp.encode(toTimestamp(message.start), writer.uint32(10).fork()).join();\n    }\n    if (message.end !== undefined) {\n      Timestamp.encode(toTimestamp(message.end), writer.uint32(18).fork()).join();\n    }\n    if (message.interval !== \"\") {\n      writer.uint32(26).string(message.interval);\n    }\n    if (message.base !== \"\") {\n      writer.uint32(34).string(message.base);\n    }\n    if (message.quote !== \"\") {\n      writer.uint32(42).string(message.quote);\n    }\n    if (message.broker !== \"\") {\n      writer.uint32(50).string(message.broker);\n    }\n    for (const v of message.indicators) {\n      Indicator.encode(v!, writer.uint32(58).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): GetMarketDataRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetMarketDataRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.start = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.end = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 3: {\n          if (tag !== 26) {\n            break;\n          }\n\n          message.interval = reader.string();\n          continue;\n        }\n        case 4: {\n          if (tag !== 34) {\n            break;\n          }\n\n          message.base = reader.string();\n          continue;\n        }\n        case 5: {\n          if (tag !== 42) {\n            break;\n          }\n\n          message.quote = reader.string();\n          continue;\n        }\n        case 6: {\n          if (tag !== 50) {\n            break;\n          }\n\n          message.broker = reader.string();\n          continue;\n        }\n        case 7: {\n          if (tag !== 58) {\n            break;\n          }\n\n          message.indicators.push(Indicator.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetMarketDataRequest {\n    return {\n      start: isSet(object.start) ? fromJsonTimestamp(object.start) : undefined,\n      end: isSet(object.end) ? fromJsonTimestamp(object.end) : undefined,\n      interval: isSet(object.interval) ? globalThis.String(object.interval) : \"\",\n      base: isSet(object.base) ? globalThis.String(object.base) : \"\",\n      quote: isSet(object.quote) ? globalThis.String(object.quote) : \"\",\n      broker: isSet(object.broker) ? globalThis.String(object.broker) : \"\",\n      indicators: globalThis.Array.isArray(object?.indicators)\n        ? object.indicators.map((e: any) => Indicator.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: GetMarketDataRequest): unknown {\n    const obj: any = {};\n    if (message.start !== undefined) {\n      obj.start = message.start.toISOString();\n    }\n    if (message.end !== undefined) {\n      obj.end = message.end.toISOString();\n    }\n    if (message.interval !== \"\") {\n      obj.interval = message.interval;\n    }\n    if (message.base !== \"\") {\n      obj.base = message.base;\n    }\n    if (message.quote !== \"\") {\n      obj.quote = message.quote;\n    }\n    if (message.broker !== \"\") {\n      obj.broker = message.broker;\n    }\n    if (message.indicators?.length) {\n      obj.indicators = message.indicators.map((e) => Indicator.toJSON(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<GetMarketDataRequest>, I>>(base?: I): GetMarketDataRequest {\n    return GetMarketDataRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<GetMarketDataRequest>, I>>(object: I): GetMarketDataRequest {\n    const message = createBaseGetMarketDataRequest();\n    message.start = object.start ?? undefined;\n    message.end = object.end ?? undefined;\n    message.interval = object.interval ?? \"\";\n    message.base = object.base ?? \"\";\n    message.quote = object.quote ?? \"\";\n    message.broker = object.broker ?? \"\";\n    message.indicators = object.indicators?.map((e) => Indicator.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseGetRatesRequest(): GetRatesRequest {\n  return { assets: [], quote: \"\" };\n}\n\nexport const GetRatesRequest: MessageFns<GetRatesRequest> = {\n  encode(message: GetRatesRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.assets) {\n      Asset.encode(v!, writer.uint32(10).fork()).join();\n    }\n    if (message.quote !== \"\") {\n      writer.uint32(18).string(message.quote);\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): GetRatesRequest {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseGetRatesRequest();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.assets.push(Asset.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.quote = reader.string();\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): GetRatesRequest {\n    return {\n      assets: globalThis.Array.isArray(object?.assets) ? object.assets.map((e: any) => Asset.fromJSON(e)) : [],\n      quote: isSet(object.quote) ? globalThis.String(object.quote) : \"\",\n    };\n  },\n\n  toJSON(message: GetRatesRequest): unknown {\n    const obj: any = {};\n    if (message.assets?.length) {\n      obj.assets = message.assets.map((e) => Asset.toJSON(e));\n    }\n    if (message.quote !== \"\") {\n      obj.quote = message.quote;\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<GetRatesRequest>, I>>(base?: I): GetRatesRequest {\n    return GetRatesRequest.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<GetRatesRequest>, I>>(object: I): GetRatesRequest {\n    const message = createBaseGetRatesRequest();\n    message.assets = object.assets?.map((e) => Asset.fromPartial(e)) || [];\n    message.quote = object.quote ?? \"\";\n    return message;\n  },\n};\n\nfunction createBaseCandle(): Candle {\n  return { openTime: undefined, closeTime: undefined, open: 0, high: 0, low: 0, close: 0, volume: 0, indicators: [] };\n}\n\nexport const Candle: MessageFns<Candle> = {\n  encode(message: Candle, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.openTime !== undefined) {\n      Timestamp.encode(toTimestamp(message.openTime), writer.uint32(10).fork()).join();\n    }\n    if (message.closeTime !== undefined) {\n      Timestamp.encode(toTimestamp(message.closeTime), writer.uint32(18).fork()).join();\n    }\n    if (message.open !== 0) {\n      writer.uint32(25).double(message.open);\n    }\n    if (message.high !== 0) {\n      writer.uint32(33).double(message.high);\n    }\n    if (message.low !== 0) {\n      writer.uint32(41).double(message.low);\n    }\n    if (message.close !== 0) {\n      writer.uint32(49).double(message.close);\n    }\n    if (message.volume !== 0) {\n      writer.uint32(57).double(message.volume);\n    }\n    for (const v of message.indicators) {\n      ComputedIndicator.encode(v!, writer.uint32(66).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): Candle {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseCandle();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.openTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.closeTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 3: {\n          if (tag !== 25) {\n            break;\n          }\n\n          message.open = reader.double();\n          continue;\n        }\n        case 4: {\n          if (tag !== 33) {\n            break;\n          }\n\n          message.high = reader.double();\n          continue;\n        }\n        case 5: {\n          if (tag !== 41) {\n            break;\n          }\n\n          message.low = reader.double();\n          continue;\n        }\n        case 6: {\n          if (tag !== 49) {\n            break;\n          }\n\n          message.close = reader.double();\n          continue;\n        }\n        case 7: {\n          if (tag !== 57) {\n            break;\n          }\n\n          message.volume = reader.double();\n          continue;\n        }\n        case 8: {\n          if (tag !== 66) {\n            break;\n          }\n\n          message.indicators.push(ComputedIndicator.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): Candle {\n    return {\n      openTime: isSet(object.openTime) ? fromJsonTimestamp(object.openTime) : undefined,\n      closeTime: isSet(object.closeTime) ? fromJsonTimestamp(object.closeTime) : undefined,\n      open: isSet(object.open) ? globalThis.Number(object.open) : 0,\n      high: isSet(object.high) ? globalThis.Number(object.high) : 0,\n      low: isSet(object.low) ? globalThis.Number(object.low) : 0,\n      close: isSet(object.close) ? globalThis.Number(object.close) : 0,\n      volume: isSet(object.volume) ? globalThis.Number(object.volume) : 0,\n      indicators: globalThis.Array.isArray(object?.indicators)\n        ? object.indicators.map((e: any) => ComputedIndicator.fromJSON(e))\n        : [],\n    };\n  },\n\n  toJSON(message: Candle): unknown {\n    const obj: any = {};\n    if (message.openTime !== undefined) {\n      obj.openTime = message.openTime.toISOString();\n    }\n    if (message.closeTime !== undefined) {\n      obj.closeTime = message.closeTime.toISOString();\n    }\n    if (message.open !== 0) {\n      obj.open = message.open;\n    }\n    if (message.high !== 0) {\n      obj.high = message.high;\n    }\n    if (message.low !== 0) {\n      obj.low = message.low;\n    }\n    if (message.close !== 0) {\n      obj.close = message.close;\n    }\n    if (message.volume !== 0) {\n      obj.volume = message.volume;\n    }\n    if (message.indicators?.length) {\n      obj.indicators = message.indicators.map((e) => ComputedIndicator.toJSON(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<Candle>, I>>(base?: I): Candle {\n    return Candle.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<Candle>, I>>(object: I): Candle {\n    const message = createBaseCandle();\n    message.openTime = object.openTime ?? undefined;\n    message.closeTime = object.closeTime ?? undefined;\n    message.open = object.open ?? 0;\n    message.high = object.high ?? 0;\n    message.low = object.low ?? 0;\n    message.close = object.close ?? 0;\n    message.volume = object.volume ?? 0;\n    message.indicators = object.indicators?.map((e) => ComputedIndicator.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseMarketDataResponse(): MarketDataResponse {\n  return { indicators: [], candles: [] };\n}\n\nexport const MarketDataResponse: MessageFns<MarketDataResponse> = {\n  encode(message: MarketDataResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    for (const v of message.indicators) {\n      IndicatorMetadata.encode(v!, writer.uint32(10).fork()).join();\n    }\n    for (const v of message.candles) {\n      Candle.encode(v!, writer.uint32(18).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): MarketDataResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseMarketDataResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.indicators.push(IndicatorMetadata.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.candles.push(Candle.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): MarketDataResponse {\n    return {\n      indicators: globalThis.Array.isArray(object?.indicators)\n        ? object.indicators.map((e: any) => IndicatorMetadata.fromJSON(e))\n        : [],\n      candles: globalThis.Array.isArray(object?.candles) ? object.candles.map((e: any) => Candle.fromJSON(e)) : [],\n    };\n  },\n\n  toJSON(message: MarketDataResponse): unknown {\n    const obj: any = {};\n    if (message.indicators?.length) {\n      obj.indicators = message.indicators.map((e) => IndicatorMetadata.toJSON(e));\n    }\n    if (message.candles?.length) {\n      obj.candles = message.candles.map((e) => Candle.toJSON(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<MarketDataResponse>, I>>(base?: I): MarketDataResponse {\n    return MarketDataResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<MarketDataResponse>, I>>(object: I): MarketDataResponse {\n    const message = createBaseMarketDataResponse();\n    message.indicators = object.indicators?.map((e) => IndicatorMetadata.fromPartial(e)) || [];\n    message.candles = object.candles?.map((e) => Candle.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nfunction createBaseRatesResponse(): RatesResponse {\n  return { time: undefined, rates: [] };\n}\n\nexport const RatesResponse: MessageFns<RatesResponse> = {\n  encode(message: RatesResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {\n    if (message.time !== undefined) {\n      Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).join();\n    }\n    for (const v of message.rates) {\n      Rate.encode(v!, writer.uint32(18).fork()).join();\n    }\n    return writer;\n  },\n\n  decode(input: BinaryReader | Uint8Array, length?: number): RatesResponse {\n    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = createBaseRatesResponse();\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n      switch (tag >>> 3) {\n        case 1: {\n          if (tag !== 10) {\n            break;\n          }\n\n          message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n          continue;\n        }\n        case 2: {\n          if (tag !== 18) {\n            break;\n          }\n\n          message.rates.push(Rate.decode(reader, reader.uint32()));\n          continue;\n        }\n      }\n      if ((tag & 7) === 4 || tag === 0) {\n        break;\n      }\n      reader.skip(tag & 7);\n    }\n    return message;\n  },\n\n  fromJSON(object: any): RatesResponse {\n    return {\n      time: isSet(object.time) ? fromJsonTimestamp(object.time) : undefined,\n      rates: globalThis.Array.isArray(object?.rates) ? object.rates.map((e: any) => Rate.fromJSON(e)) : [],\n    };\n  },\n\n  toJSON(message: RatesResponse): unknown {\n    const obj: any = {};\n    if (message.time !== undefined) {\n      obj.time = message.time.toISOString();\n    }\n    if (message.rates?.length) {\n      obj.rates = message.rates.map((e) => Rate.toJSON(e));\n    }\n    return obj;\n  },\n\n  create<I extends Exact<DeepPartial<RatesResponse>, I>>(base?: I): RatesResponse {\n    return RatesResponse.fromPartial(base ?? ({} as any));\n  },\n  fromPartial<I extends Exact<DeepPartial<RatesResponse>, I>>(object: I): RatesResponse {\n    const message = createBaseRatesResponse();\n    message.time = object.time ?? undefined;\n    message.rates = object.rates?.map((e) => Rate.fromPartial(e)) || [];\n    return message;\n  },\n};\n\nexport type MarketDataService = typeof MarketDataService;\nexport const MarketDataService = {\n  getMarketData: {\n    path: \"/abacus.MarketData/GetMarketData\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: GetMarketDataRequest) => Buffer.from(GetMarketDataRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => GetMarketDataRequest.decode(value),\n    responseSerialize: (value: MarketDataResponse) => Buffer.from(MarketDataResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => MarketDataResponse.decode(value),\n  },\n  getRates: {\n    path: \"/abacus.MarketData/GetRates\",\n    requestStream: false,\n    responseStream: false,\n    requestSerialize: (value: GetRatesRequest) => Buffer.from(GetRatesRequest.encode(value).finish()),\n    requestDeserialize: (value: Buffer) => GetRatesRequest.decode(value),\n    responseSerialize: (value: RatesResponse) => Buffer.from(RatesResponse.encode(value).finish()),\n    responseDeserialize: (value: Buffer) => RatesResponse.decode(value),\n  },\n} as const;\n\nexport interface MarketDataServer extends UntypedServiceImplementation {\n  getMarketData: handleUnaryCall<GetMarketDataRequest, MarketDataResponse>;\n  getRates: handleUnaryCall<GetRatesRequest, RatesResponse>;\n}\n\nexport interface MarketDataClient extends Client {\n  getMarketData(\n    request: GetMarketDataRequest,\n    callback: (error: ServiceError | null, response: MarketDataResponse) => void,\n  ): ClientUnaryCall;\n  getMarketData(\n    request: GetMarketDataRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: MarketDataResponse) => void,\n  ): ClientUnaryCall;\n  getMarketData(\n    request: GetMarketDataRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: MarketDataResponse) => void,\n  ): ClientUnaryCall;\n  getRates(\n    request: GetRatesRequest,\n    callback: (error: ServiceError | null, response: RatesResponse) => void,\n  ): ClientUnaryCall;\n  getRates(\n    request: GetRatesRequest,\n    metadata: Metadata,\n    callback: (error: ServiceError | null, response: RatesResponse) => void,\n  ): ClientUnaryCall;\n  getRates(\n    request: GetRatesRequest,\n    metadata: Metadata,\n    options: Partial<CallOptions>,\n    callback: (error: ServiceError | null, response: RatesResponse) => void,\n  ): ClientUnaryCall;\n}\n\nexport const MarketDataClient = makeGenericClientConstructor(MarketDataService, \"abacus.MarketData\") as unknown as {\n  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): MarketDataClient;\n  service: typeof MarketDataService;\n  serviceName: string;\n};\n\ntype Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;\n\ntype DeepPartial<T> = T extends Builtin ? T\n  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>\n  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>\n  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }\n  : Partial<T>;\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\ntype Exact<P, I extends P> = P extends Builtin ? P\n  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };\n\nfunction toTimestamp(date: Date): Timestamp {\n  const seconds = Math.trunc(date.getTime() / 1_000);\n  const nanos = (date.getTime() % 1_000) * 1_000_000;\n  return { seconds, nanos };\n}\n\nfunction fromTimestamp(t: Timestamp): Date {\n  let millis = (t.seconds || 0) * 1_000;\n  millis += (t.nanos || 0) / 1_000_000;\n  return new globalThis.Date(millis);\n}\n\nfunction fromJsonTimestamp(o: any): Date {\n  if (o instanceof globalThis.Date) {\n    return o;\n  } else if (typeof o === \"string\") {\n    return new globalThis.Date(o);\n  } else {\n    return fromTimestamp(Timestamp.fromJSON(o));\n  }\n}\n\nfunction isObject(value: any): boolean {\n  return typeof value === \"object\" && value !== null;\n}\n\nfunction isSet(value: any): boolean {\n  return value !== null && value !== undefined;\n}\n\ninterface MessageFns<T> {\n  encode(message: T, writer?: BinaryWriter): BinaryWriter;\n  decode(input: BinaryReader | Uint8Array, length?: number): T;\n  fromJSON(object: any): T;\n  toJSON(message: T): unknown;\n  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;\n  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;\n}\n"],"names":["Asset","Candle","ComputedIndicator","GetMarketDataRequest","GetRatesRequest","Indicator","IndicatorMetadata","MarketDataClient","MarketDataResponse","MarketDataService","Rate","RatesResponse","createBaseAsset","base","broker","encode","message","writer","BinaryWriter","uint32","string","decode","input","length","reader","BinaryReader","end","undefined","len","pos","tag","skip","fromJSON","object","isSet","globalThis","String","toJSON","obj","create","fromPartial","createBaseRate","quote","rate","double","Number","createBaseIndicator","name","parameters","Struct","wrap","fork","join","unwrap","isObject","createBaseIndicatorMetadata","key","createBaseComputedIndicator","outputs","createBaseGetMarketDataRequest","start","interval","indicators","Timestamp","toTimestamp","v","fromTimestamp","push","fromJsonTimestamp","Array","isArray","map","e","toISOString","createBaseGetRatesRequest","assets","createBaseCandle","openTime","closeTime","open","high","low","close","volume","createBaseMarketDataResponse","candles","createBaseRatesResponse","time","rates","getMarketData","path","requestStream","responseStream","requestSerialize","value","Buffer","from","finish","requestDeserialize","responseSerialize","responseDeserialize","getRates","makeGenericClientConstructor","date","seconds","Math","trunc","getTime","nanos","t","millis","Date","o"],"mappings":"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"}
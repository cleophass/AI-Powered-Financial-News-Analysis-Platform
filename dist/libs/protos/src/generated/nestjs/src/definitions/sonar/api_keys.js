// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.5.0
//   protoc               v5.29.1
// source: src/definitions/sonar/api_keys.proto
/* eslint-disable */ "use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    API_KEYS_SERVICE_NAME: function() {
        return API_KEYS_SERVICE_NAME;
    },
    ApiKeysControllerMethods: function() {
        return ApiKeysControllerMethods;
    }
});
const _microservices = require("@nestjs/microservices");
function ApiKeysControllerMethods() {
    return function(constructor) {
        const grpcMethods = [
            "generateEd25519KeyPair",
            "createApiKey",
            "deleteApiKey",
            "getApiKey",
            "listApiKeysByUserId",
            "getValidBrokers"
        ];
        for (const method of grpcMethods){
            const descriptor = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
            (0, _microservices.GrpcMethod)("ApiKeys", method)(constructor.prototype[method], method, descriptor);
        }
        const grpcStreamMethods = [];
        for (const method of grpcStreamMethods){
            const descriptor = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
            (0, _microservices.GrpcStreamMethod)("ApiKeys", method)(constructor.prototype[method], method, descriptor);
        }
    };
}
const API_KEYS_SERVICE_NAME = "ApiKeys";

//# sourceMappingURL=api_keys.js.map
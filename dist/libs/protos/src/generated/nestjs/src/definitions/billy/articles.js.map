{"version":3,"sources":["../../../../../../../../../libs/protos/src/generated/nestjs/src/definitions/billy/articles.ts"],"sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.5.0\n//   protoc               v5.29.1\n// source: src/definitions/billy/articles.proto\n\n/* eslint-disable */\nimport { GrpcMethod, GrpcStreamMethod } from \"@nestjs/microservices\";\nimport { wrappers } from \"protobufjs\";\nimport { Observable } from \"rxjs\";\n\nexport interface ArticleResponse {\n  id: string;\n  title: string;\n  text: string;\n  url: string;\n  updatedAt: Date | undefined;\n  publicationDate: Date | undefined;\n  createdAt: Date | undefined;\n}\n\nexport interface CreateArticleRequest {\n  title: string;\n  text: string;\n  url: string;\n  publicationDate: Date | undefined;\n}\n\nexport interface CreateArticlesListRequest {\n  articles: CreateArticleRequest[];\n}\n\nexport interface ArticlesListResponse {\n  articles: ArticleResponse[];\n}\n\nwrappers[\".google.protobuf.Timestamp\"] = {\n  fromObject(value: Date) {\n    return { seconds: value.getTime() / 1000, nanos: (value.getTime() % 1000) * 1e6 };\n  },\n  toObject(message: { seconds: number; nanos: number }) {\n    return new Date(message.seconds * 1000 + message.nanos / 1e6);\n  },\n} as any;\n\nexport interface ArticlesClient {\n  createArticlesList(request: CreateArticlesListRequest): Observable<ArticlesListResponse>;\n}\n\nexport interface ArticlesController {\n  createArticlesList(\n    request: CreateArticlesListRequest,\n  ): Promise<ArticlesListResponse> | Observable<ArticlesListResponse> | ArticlesListResponse;\n}\n\nexport function ArticlesControllerMethods() {\n  return function (constructor: Function) {\n    const grpcMethods: string[] = [\"createArticlesList\"];\n    for (const method of grpcMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcMethod(\"Articles\", method)(constructor.prototype[method], method, descriptor);\n    }\n    const grpcStreamMethods: string[] = [];\n    for (const method of grpcStreamMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcStreamMethod(\"Articles\", method)(constructor.prototype[method], method, descriptor);\n    }\n  };\n}\n\nexport const ARTICLES_SERVICE_NAME = \"Articles\";\n"],"names":["ARTICLES_SERVICE_NAME","ArticlesControllerMethods","wrappers","fromObject","value","seconds","getTime","nanos","toObject","message","Date","constructor","grpcMethods","method","descriptor","Reflect","getOwnPropertyDescriptor","prototype","GrpcMethod","grpcStreamMethods","GrpcStreamMethod"],"mappings":"AAAA,sDAAsD;AACtD,YAAY;AACZ,gCAAgC;AAChC,iCAAiC;AACjC,+CAA+C;AAE/C,kBAAkB;;;;;;;;;;;IAgELA,qBAAqB;eAArBA;;IAfGC,yBAAyB;eAAzBA;;;+BAhD6B;4BACpB;AA4BzBC,oBAAQ,CAAC,6BAA6B,GAAG;IACvCC,YAAWC,KAAW;QACpB,OAAO;YAAEC,SAASD,MAAME,OAAO,KAAK;YAAMC,OAAO,AAACH,MAAME,OAAO,KAAK,OAAQ;QAAI;IAClF;IACAE,UAASC,OAA2C;QAClD,OAAO,IAAIC,KAAKD,QAAQJ,OAAO,GAAG,OAAOI,QAAQF,KAAK,GAAG;IAC3D;AACF;AAYO,SAASN;IACd,OAAO,SAAUU,WAAqB;QACpC,MAAMC,cAAwB;YAAC;SAAqB;QACpD,KAAK,MAAMC,UAAUD,YAAa;YAChC,MAAME,aAAkBC,QAAQC,wBAAwB,CAACL,YAAYM,SAAS,EAAEJ;YAChFK,IAAAA,yBAAU,EAAC,YAAYL,QAAQF,YAAYM,SAAS,CAACJ,OAAO,EAAEA,QAAQC;QACxE;QACA,MAAMK,oBAA8B,EAAE;QACtC,KAAK,MAAMN,UAAUM,kBAAmB;YACtC,MAAML,aAAkBC,QAAQC,wBAAwB,CAACL,YAAYM,SAAS,EAAEJ;YAChFO,IAAAA,+BAAgB,EAAC,YAAYP,QAAQF,YAAYM,SAAS,CAACJ,OAAO,EAAEA,QAAQC;QAC9E;IACF;AACF;AAEO,MAAMd,wBAAwB"}
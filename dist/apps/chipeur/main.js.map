{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/main.ts?fc28","webpack:///./src/main.ts","webpack:///external commonjs \"@nestjs/common\"","webpack:///external commonjs \"@nestjs/core\"","webpack:///./src/app.module.ts?289f","webpack:///./src/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///./src/crawlers/billy.service.ts?ba45","webpack:///./src/crawlers/billy.service.ts","webpack:///external commonjs \"nestjs-grpc-exceptions\"","webpack:///./src/env.ts?9ef0","webpack:///./src/env.ts","webpack:///../../libs/env-utils/src/index.ts?fb00","webpack:///../../libs/env-utils/src/index.ts","webpack:///../../libs/env-utils/src/lib/index.ts?7d1b","webpack:///../../libs/env-utils/src/lib/index.ts","webpack:///../../libs/utilities/src/index.ts?c7ee","webpack:///../../libs/utilities/src/index.ts","webpack:///../../libs/utilities/src/arrays/index.ts?759c","webpack:///../../libs/utilities/src/arrays/index.ts","webpack:///../../libs/utilities/src/arrays/filter.ts?eeee","webpack:///../../libs/utilities/src/arrays/filter.ts","webpack:///../../libs/utilities/src/functions/nullish.ts?3bd5","webpack:///../../libs/utilities/src/functions/nullish.ts","webpack:///../../libs/utilities/src/arrays/lastNonZeroIndex.ts?397c","webpack:///../../libs/utilities/src/arrays/lastNonZeroIndex.ts","webpack:///../../libs/utilities/src/class/index.ts?b842","webpack:///../../libs/utilities/src/class/index.ts","webpack:///../../libs/utilities/src/class/PriorityQueue.ts?d166","webpack:///../../libs/utilities/src/class/PriorityQueue.ts","webpack:///../../libs/utilities/src/dates/index.ts?0b66","webpack:///../../libs/utilities/src/dates/index.ts","webpack:///../../libs/utilities/src/dates/getRange.ts?c8ab","webpack:///../../libs/utilities/src/dates/getRange.ts","webpack:///../../libs/utilities/src/enums/index.ts?2eba","webpack:///../../libs/utilities/src/enums/index.ts","webpack:///../../libs/utilities/src/enums/asset.enum.ts?e6ee","webpack:///../../libs/utilities/src/enums/asset.enum.ts","webpack:///../../libs/utilities/src/enums/ast.enum.ts?5137","webpack:///../../libs/utilities/src/enums/ast.enum.ts","webpack:///../../libs/utilities/src/enums/broker.enum.ts?22cf","webpack:///../../libs/utilities/src/enums/broker.enum.ts","webpack:///../../libs/utilities/src/enums/flow-status.enum.ts?2647","webpack:///../../libs/utilities/src/enums/flow-status.enum.ts","webpack:///../../libs/utilities/src/enums/graph-node-type.enum.ts?64a1","webpack:///../../libs/utilities/src/enums/graph-node-type.enum.ts","webpack:///../../libs/utilities/src/enums/indicators.enum.ts?8a6e","webpack:///../../libs/utilities/src/enums/indicators.enum.ts","webpack:///../../libs/utilities/src/enums/jarvis-conversation-role.enum.ts?24d8","webpack:///../../libs/utilities/src/enums/jarvis-conversation-role.enum.ts","webpack:///../../libs/utilities/src/enums/order.enum.ts?21c5","webpack:///../../libs/utilities/src/enums/order.enum.ts","webpack:///../../libs/utilities/src/enums/pluggable-type.enum.ts?5b56","webpack:///../../libs/utilities/src/enums/pluggable-type.enum.ts","webpack:///../../libs/utilities/src/enums/program-action.enum.ts?bf4c","webpack:///../../libs/utilities/src/enums/program-action.enum.ts","webpack:///../../libs/utilities/src/enums/strategy-parameters.enum.ts?08d7","webpack:///../../libs/utilities/src/enums/strategy-parameters.enum.ts","webpack:///../../libs/utilities/src/enums/strategy-type.enum.ts?eee9","webpack:///../../libs/utilities/src/enums/strategy-type.enum.ts","webpack:///../../libs/utilities/src/functions/index.ts?08aa","webpack:///../../libs/utilities/src/functions/index.ts","webpack:///../../libs/utilities/src/functions/breadthFirstSearch.ts?ca42","webpack:///../../libs/utilities/src/functions/breadthFirstSearch.ts","webpack:///../../libs/utilities/src/interpreter/index.ts?81bc","webpack:///../../libs/utilities/src/interpreter/index.ts","webpack:///../../libs/utilities/src/interpreter/BinaryExpressionMetadata.ts?0e72","webpack:///../../libs/utilities/src/interpreter/BinaryExpressionMetadata.ts","webpack:///../../libs/utilities/src/interpreter/IndicatorInputMetadata.ts?2a1e","webpack:///../../libs/utilities/src/interpreter/IndicatorInputMetadata.ts","webpack:///../../libs/utilities/src/interpreter/LiteralInputMetadata.ts?3602","webpack:///../../libs/utilities/src/interpreter/LiteralInputMetadata.ts","webpack:///../../libs/utilities/src/interpreter/StrategyInputMetadata.ts?c8df","webpack:///../../libs/utilities/src/interpreter/StrategyInputMetadata.ts","webpack:///../../libs/utilities/src/interpreter/UnaryExpressionMetadata.ts?5aad","webpack:///../../libs/utilities/src/interpreter/UnaryExpressionMetadata.ts","webpack:///../../libs/utilities/src/string/index.ts?133b","webpack:///../../libs/utilities/src/string/index.ts","webpack:///../../libs/utilities/src/string/case.ts?d246","webpack:///../../libs/utilities/src/string/case.ts","webpack:///../../libs/utilities/src/types/index.ts?c55c","webpack:///../../libs/utilities/src/types/index.ts","webpack:///../../libs/utilities/src/types/common.type.ts","webpack:///../../libs/utilities/src/types/pair-broker.type.ts","webpack:///../../libs/utilities/src/types/pair.type.ts","webpack:///../../libs/utilities/src/validators/index.ts?d4ad","webpack:///../../libs/utilities/src/validators/index.ts","webpack:///../../libs/utilities/src/validators/isFQDN.ts?1ca7","webpack:///../../libs/utilities/src/validators/isFQDN.ts","webpack:///../../libs/utilities/src/validators/isIP.ts?29c8","webpack:///../../libs/utilities/src/validators/isIP.ts","webpack:///external commonjs \"envalid\"","webpack:///./src/models/models.ts?a66f","webpack:///./src/models/models.ts","webpack:///external commonjs \"@langchain/openai\"","webpack:///./src/lib/impact-json.module.ts?5df8","webpack:///./src/lib/impact-json.module.ts","webpack:///./src/crawlers/forbes.service.ts?eb7b","webpack:///./src/crawlers/forbes.service.ts","webpack:///external commonjs \"@mozilla/readability\"","webpack:///external commonjs \"dayjs\"","webpack:///external commonjs \"dayjs/plugin/customParseFormat\"","webpack:///external commonjs \"dayjs/plugin/timezone\"","webpack:///external commonjs \"jsdom\"","webpack:///./src/crawlers/crawler.service.ts?2e86","webpack:///./src/crawlers/crawler.service.ts","webpack:///./src/grpc-exception.filter.ts?cc5d","webpack:///./src/grpc-exception.filter.ts","webpack:///external commonjs \"@nestjs/microservices\"","webpack:///external commonjs \"rxjs\"","webpack:///webpack/bootstrap","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.handler = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst core_1 = require(\"@nestjs/core\");\nconst app_module_1 = require(\"./app.module\");\nconst billy_service_1 = require(\"./crawlers/billy.service\");\nconst forbes_service_1 = require(\"./crawlers/forbes.service\");\nconst env_1 = require(\"./env\");\nconst sourceServiceMap = {\n    forbes: forbes_service_1.ForbesCrawlerService,\n};\nconst handler = async () => {\n    const appContext = await core_1.NestFactory.createApplicationContext(app_module_1.AppModule);\n    common_1.Logger.log(`Starting chipeur with source: ${env_1.env.CHIPEUR_SOURCE}`);\n    const crawlerService = appContext.get(sourceServiceMap[env_1.env.CHIPEUR_SOURCE]);\n    const articles = await crawlerService.crawl(env_1.env.CHIPEUR_START_DATE, env_1.env.CHIPEUR_END_DATE);\n    common_1.Logger.log(`📰 Found ${articles.length} article(s) to process`);\n    const billyService = appContext.get(billy_service_1.BillyService);\n    const articlesList = await billyService.processArticles(articles);\n    common_1.Logger.log(`✅ Processed ${articlesList.length} article(s)`);\n    common_1.Logger.log('\\n📊 Results:');\n    common_1.Logger.log(JSON.stringify(articlesList, null, 2));\n    // Fermer l'application proprement\n    await appContext.close();\n};\nexports.handler = handler;\nvoid (0, exports.handler)();\n","import { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nimport { BillyService } from './crawlers/billy.service';\nimport { ForbesCrawlerService } from './crawlers/forbes.service';\nimport { env } from './env';\n\nconst sourceServiceMap = {\n  forbes: ForbesCrawlerService,\n};\n\nexport const handler = async () => {\n  const appContext = await NestFactory.createApplicationContext(AppModule);\n\n  Logger.log(`Starting chipeur with source: ${env.CHIPEUR_SOURCE}`);\n\n  const crawlerService = appContext.get(sourceServiceMap[env.CHIPEUR_SOURCE]);\n  const articles = await crawlerService.crawl(env.CHIPEUR_START_DATE, env.CHIPEUR_END_DATE);\n\n  Logger.log(`📰 Found ${articles.length} article(s) to process`);\n\n  const billyService = appContext.get(BillyService);\n  const articlesList = await billyService.processArticles(articles);\n\n  Logger.log(`✅ Processed ${articlesList.length} article(s)`);\n  Logger.log('\\n📊 Results:');\n  Logger.log(JSON.stringify(articlesList, null, 2));\n\n  // Fermer l'application proprement\n  await appContext.close();\n};\n\nvoid handler();\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppModule = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@nestjs/common\");\nconst core_1 = require(\"@nestjs/core\");\nconst billy_service_1 = require(\"./crawlers/billy.service\");\nconst forbes_service_1 = require(\"./crawlers/forbes.service\");\nconst grpc_exception_filter_1 = require(\"./grpc-exception.filter\");\nlet AppModule = class AppModule {\n};\nexports.AppModule = AppModule;\nexports.AppModule = AppModule = tslib_1.__decorate([\n    (0, common_1.Module)({\n        imports: [],\n        providers: [\n            {\n                provide: core_1.APP_FILTER,\n                useClass: grpc_exception_filter_1.GrpcExceptionFilter,\n            },\n            forbes_service_1.ForbesCrawlerService,\n            billy_service_1.BillyService,\n        ],\n    })\n], AppModule);\n","import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { BillyService } from './crawlers/billy.service';\nimport { ForbesCrawlerService } from './crawlers/forbes.service';\nimport { GrpcExceptionFilter } from './grpc-exception.filter';\n\n@Module({\n  imports: [],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: GrpcExceptionFilter,\n    },\n    ForbesCrawlerService,\n    BillyService,\n  ],\n})\nexport class AppModule {}\n","module.exports = require(\"tslib\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BillyService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@nestjs/common\");\nconst nestjs_grpc_exceptions_1 = require(\"nestjs-grpc-exceptions\");\nconst env_1 = require(\"../env\");\nconst models_1 = require(\"../models/models\");\nlet BillyService = class BillyService {\n    async processArticles(articles) {\n        const results = [];\n        common_1.Logger.log(`🚀 Début de l'analyse financière de ${articles.length} article(s)...`);\n        for (const article of articles) {\n            common_1.Logger.log(`\\n📰 Analyse de l'article: \"${article.title}\"`);\n            const prompt = [\n                {\n                    role: 'system',\n                    content: `You are an expert in financial impact analysis. Analyze the following article and identify key financial topics.\n\n          Requirements:\n          - Return a strictly valid JSON object with this structure:\n          {\n            \"result\": {\n              \"Topic name\": {\n                \"description\": \"Detailed financial impact description, including expected timeframe\",\n                \"score\": (-1 to 1 numerical impact score), -0.7 for example if it is a highly negative impact\n              },\n              \"Topic name\": {\n                \"description\": \"Detailed financial impact description, including expected timeframe\",\n                \"score\": (-1 to 1 numerical impact score), 0.8 for example if it is a highly positive impact\n              }\n            }\n          }\n\n          Return only valid JSON, without any additional text.`,\n                },\n                {\n                    role: 'user',\n                    content: article.text,\n                },\n            ];\n            common_1.Logger.log(`🤖 Analyse des impacts financiers en cours...`);\n            const impactAnalysis = await models_1.mistralChain.invoke(prompt);\n            if (!impactAnalysis.result) {\n                common_1.Logger.warn(`⚠️  Aucun impact financier détecté pour cet article`);\n                continue;\n            }\n            const topicCount = Object.keys(impactAnalysis.result).length;\n            common_1.Logger.log(`✅ ${topicCount} impact(s) financier(s) identifié(s):`);\n            // Afficher les topics au format JSON propre\n            const topicsJson = {};\n            Object.keys(impactAnalysis.result).forEach((topic) => {\n                const topicData = impactAnalysis.result[topic];\n                topicsJson[topic] = {\n                    description: topicData.description,\n                    impact: topicData.score,\n                };\n            });\n            common_1.Logger.log(JSON.stringify(topicsJson, null, 2));\n            const topicsWithDescriptions = Object.keys(impactAnalysis.result).map((topic) => {\n                const topicData = impactAnalysis.result[topic];\n                return `${article.title}, ${topic}. ${topicData.description}`;\n            });\n            common_1.Logger.log(`🔢 Génération des embeddings pour ${topicCount} topic(s)...`);\n            const topicEmbeddings = await this.getTopicsEmbeddings(topicsWithDescriptions);\n            common_1.Logger.log(`✅ Embeddings générés avec succès`);\n            const articleResult = {\n                title: article.title,\n                text: article.text,\n                url: article.url,\n                publicationDate: article.publicationDate,\n                topics: Object.keys(impactAnalysis.result).map((topic) => {\n                    const topicKey = `${article.title}, ${topic}. ${impactAnalysis.result[topic].description}`;\n                    return {\n                        name: topic,\n                        impact: impactAnalysis.result[topic].score,\n                        embedding: topicEmbeddings[topicKey] || [],\n                    };\n                }),\n            };\n            results.push(articleResult);\n        }\n        common_1.Logger.log(`🎯 Analyse terminée: ${results.length} article(s) traité(s) avec succès`);\n        return results;\n    }\n    async getOllamaEmbedding(text) {\n        const requestBody = {\n            model: env_1.env.OLLAMA_EMBEDDING_MODEL,\n            prompt: text,\n        };\n        const startTime = Date.now();\n        const response = await fetch(env_1.env.OLLAMA_URL + '/api/embeddings', {\n            method: 'POST',\n            headers: {\n                // eslint-disable-next-line @typescript-eslint/naming-convention\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(requestBody),\n        });\n        const duration = Date.now() - startTime;\n        if (!response.ok) {\n            common_1.Logger.error(`❌ Erreur lors de la génération d'embedding: ${response.status} ${response.statusText}`);\n            throw new nestjs_grpc_exceptions_1.GrpcAbortedException(`Error while requesting Ollama: ${response.status} ${response.statusText}`);\n        }\n        const data = await response.json();\n        return data.embedding;\n    }\n    async getTopicsEmbeddings(topics) {\n        const embeddings = {};\n        await Promise.all(topics.map(async (topic) => {\n            embeddings[topic] = await this.getOllamaEmbedding(topic);\n        }));\n        return embeddings;\n    }\n};\nexports.BillyService = BillyService;\nexports.BillyService = BillyService = tslib_1.__decorate([\n    (0, common_1.Injectable)()\n], BillyService);\n","import { Injectable, Logger } from '@nestjs/common';\nimport { GrpcAbortedException } from 'nestjs-grpc-exceptions';\nimport { env } from '../env';\nimport { mistralChain } from '../models/models';\nimport type { Article } from '../types';\n\nexport interface ArticleResult {\n  title: string;\n  text: string;\n  url: string;\n  publicationDate: Date;\n  topics: Topic[];\n}\n\nexport interface Topic {\n  name: string;\n  impact: number;\n  embedding: number[];\n}\n\n@Injectable()\nexport class BillyService {\n  public async processArticles(articles: Article[]): Promise<ArticleResult[]> {\n    const results: ArticleResult[] = [];\n\n    Logger.log(`🚀 Début de l'analyse financière de ${articles.length} article(s)...`);\n\n    for (const article of articles) {\n      Logger.log(`\\n📰 Analyse de l'article: \"${article.title}\"`);\n\n      const prompt = [\n        {\n          role: 'system',\n          content: `You are an expert in financial impact analysis. Analyze the following article and identify key financial topics.\n\n          Requirements:\n          - Return a strictly valid JSON object with this structure:\n          {\n            \"result\": {\n              \"Topic name\": {\n                \"description\": \"Detailed financial impact description, including expected timeframe\",\n                \"score\": (-1 to 1 numerical impact score), -0.7 for example if it is a highly negative impact\n              },\n              \"Topic name\": {\n                \"description\": \"Detailed financial impact description, including expected timeframe\",\n                \"score\": (-1 to 1 numerical impact score), 0.8 for example if it is a highly positive impact\n              }\n            }\n          }\n\n          Return only valid JSON, without any additional text.`,\n        },\n        {\n          role: 'user',\n          content: article.text,\n        },\n      ];\n\n      Logger.log(`🤖 Analyse des impacts financiers en cours...`);\n      const impactAnalysis = await mistralChain.invoke(prompt);\n\n      if (!impactAnalysis.result) {\n        Logger.warn(`⚠️  Aucun impact financier détecté pour cet article`);\n        continue;\n      }\n\n      const topicCount = Object.keys(impactAnalysis.result).length;\n      Logger.log(`✅ ${topicCount} impact(s) financier(s) identifié(s):`);\n\n      // Afficher les topics au format JSON propre\n      const topicsJson: Record<string, { description: string; impact: number }> = {};\n      Object.keys(impactAnalysis.result).forEach((topic) => {\n        const topicData = impactAnalysis.result[topic];\n        topicsJson[topic] = {\n          description: topicData.description,\n          impact: topicData.score,\n        };\n      });\n      Logger.log(JSON.stringify(topicsJson, null, 2));\n\n      const topicsWithDescriptions = Object.keys(impactAnalysis.result).map((topic) => {\n        const topicData = impactAnalysis.result[topic];\n        return `${article.title}, ${topic}. ${topicData.description}`;\n      });\n\n      Logger.log(`🔢 Génération des embeddings pour ${topicCount} topic(s)...`);\n      const topicEmbeddings = await this.getTopicsEmbeddings(topicsWithDescriptions);\n      Logger.log(`✅ Embeddings générés avec succès`);\n\n      const articleResult: ArticleResult = {\n        title: article.title,\n        text: article.text,\n        url: article.url,\n        publicationDate: article.publicationDate,\n        topics: Object.keys(impactAnalysis.result).map((topic) => {\n          const topicKey = `${article.title}, ${topic}. ${impactAnalysis.result[topic].description}`;\n\n          return {\n            name: topic,\n            impact: impactAnalysis.result[topic].score,\n            embedding: topicEmbeddings[topicKey] || [],\n          };\n        }),\n      };\n\n      results.push(articleResult);\n    }\n\n    Logger.log(`🎯 Analyse terminée: ${results.length} article(s) traité(s) avec succès`);\n    return results;\n  }\n\n  private async getOllamaEmbedding(text: string): Promise<number[]> {\n    const requestBody = {\n      model: env.OLLAMA_EMBEDDING_MODEL,\n      prompt: text,\n    };\n\n    const startTime = Date.now();\n    const response = await fetch(env.OLLAMA_URL + '/api/embeddings', {\n      method: 'POST',\n      headers: {\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(requestBody),\n    });\n    const duration = Date.now() - startTime;\n\n    if (!response.ok) {\n      Logger.error(`❌ Erreur lors de la génération d'embedding: ${response.status} ${response.statusText}`);\n      throw new GrpcAbortedException(`Error while requesting Ollama: ${response.status} ${response.statusText}`);\n    }\n\n    const data = await response.json();\n\n    return data.embedding;\n  }\n\n  private async getTopicsEmbeddings(topics: string[]): Promise<Record<string, number[]>> {\n    const embeddings: Record<string, number[]> = {};\n    await Promise.all(\n      topics.map(async (topic) => {\n        embeddings[topic] = await this.getOllamaEmbedding(topic);\n      }),\n    );\n    return embeddings;\n  }\n}\n","module.exports = require(\"nestjs-grpc-exceptions\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.env = void 0;\nconst env_utils_1 = require(\"@straufi/env-utils\");\nconst envalid_1 = require(\"envalid\");\nexports.env = (0, envalid_1.cleanEnv)(process.env, {\n    CHIPEUR_SOURCE: (0, envalid_1.str)({ choices: ['forbes'], desc: 'Source to scrape articles from.' }),\n    CHIPEUR_START_DATE: (0, env_utils_1.date)({ desc: 'Start date for scraped articles.', default: new Date('2025-09-26') }),\n    CHIPEUR_END_DATE: (0, env_utils_1.date)({ desc: 'End date for scraped articles.', default: new Date('2025-10-03') }),\n    CHIPEUR_FORBES_URLS: (0, env_utils_1.urlArray)({ desc: 'Forbes URLs to scrape articles from.' }),\n    ABACUS_URL: (0, envalid_1.url)(), // jsp si c'est le bon\n    OLLAMA_EMBEDDING_MODEL: (0, envalid_1.str)(),\n    OLLAMA_URL: (0, envalid_1.url)(),\n    OPEN_AI_KEY: (0, envalid_1.str)(),\n});\n","import { date, urlArray } from '@straufi/env-utils';\n\nimport { cleanEnv, str, url } from 'envalid';\n\nexport const env = cleanEnv(process.env, {\n  CHIPEUR_SOURCE: str({ choices: ['forbes'], desc: 'Source to scrape articles from.' }),\n  CHIPEUR_START_DATE: date({ desc: 'Start date for scraped articles.', default: new Date('2025-09-26') }),\n  CHIPEUR_END_DATE: date({ desc: 'End date for scraped articles.', default: new Date('2025-10-03') }),\n  CHIPEUR_FORBES_URLS: urlArray({ desc: 'Forbes URLs to scrape articles from.' }),\n\n  ABACUS_URL: url(), // jsp si c'est le bon\n  OLLAMA_EMBEDDING_MODEL: str(),\n  OLLAMA_URL: url(),\n  OPEN_AI_KEY: str(),\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./lib\"), exports);\n","export * from './lib';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.number = exports.address = exports.date = exports.urlArray = void 0;\nconst utilities_1 = require(\"@straufi/utilities\");\nconst envalid_1 = require(\"envalid\");\nexports.urlArray = (0, envalid_1.makeValidator)((input) => {\n    try {\n        return input\n            .split(',')\n            .filter(Boolean)\n            .map((url) => new URL(url));\n    }\n    catch {\n        throw new envalid_1.EnvError(`Invalid urls: \"${input}\"`);\n    }\n});\nexports.date = (0, envalid_1.makeValidator)((input) => {\n    const dateInput = new Date(input);\n    if (Number.isNaN(dateInput.getTime())) {\n        throw new envalid_1.EnvError(`Invalid date: \"${input}\"`);\n    }\n    return dateInput;\n});\nexports.address = (0, envalid_1.makeValidator)((input) => {\n    const [ip, port] = input.split(':');\n    if (!(0, utilities_1.isFQDN)(ip) && !(0, utilities_1.isIP)(ip)) {\n        throw new envalid_1.EnvError(`Invalid address: \"${ip}\"`);\n    }\n    const portNumber = Number(port);\n    if (Number.isNaN(portNumber) || portNumber <= 0 || portNumber > 65_535) {\n        throw new envalid_1.EnvError(`Invalid port: \"${port}\"`);\n    }\n    return input;\n});\nconst number = (options) => (0, envalid_1.makeValidator)((input) => {\n    const numberValue = Number(input);\n    if (Number.isNaN(numberValue)) {\n        throw new envalid_1.EnvError(`Invalid number: \"${input}\"`);\n    }\n    if (options.integer && !Number.isInteger(numberValue)) {\n        throw new envalid_1.EnvError(`Invalid integer: \"${input}\"`);\n    }\n    if (options.min && numberValue < options.min) {\n        throw new envalid_1.EnvError(`Number is smaller than min: \"${input}\"`);\n    }\n    if (options.max && numberValue > options.max) {\n        throw new envalid_1.EnvError(`Number is bigger than max: \"${input}\"`);\n    }\n    return numberValue;\n});\nexports.number = number;\n","import { isFQDN, isIP } from '@straufi/utilities';\nimport { EnvError, makeValidator } from 'envalid';\n\ninterface NumberValidatorOptions {\n  min?: number;\n  max?: number;\n  integer?: boolean;\n}\n\nexport const urlArray = makeValidator<URL[]>((input: string) => {\n  try {\n    return input\n      .split(',')\n      .filter(Boolean)\n      .map((url) => new URL(url));\n  } catch {\n    throw new EnvError(`Invalid urls: \"${input}\"`);\n  }\n});\n\nexport const date = makeValidator<Date>((input: string) => {\n  const dateInput = new Date(input);\n\n  if (Number.isNaN(dateInput.getTime())) {\n    throw new EnvError(`Invalid date: \"${input}\"`);\n  }\n\n  return dateInput;\n});\n\nexport const address = makeValidator<string>((input: string) => {\n  const [ip, port] = input.split(':');\n\n  if (!isFQDN(ip) && !isIP(ip)) {\n    throw new EnvError(`Invalid address: \"${ip}\"`);\n  }\n\n  const portNumber = Number(port);\n  if (Number.isNaN(portNumber) || portNumber <= 0 || portNumber > 65_535) {\n    throw new EnvError(`Invalid port: \"${port}\"`);\n  }\n\n  return input;\n});\n\nexport const number = (options: NumberValidatorOptions) =>\n  makeValidator<number>((input: string) => {\n    const numberValue = Number(input);\n\n    if (Number.isNaN(numberValue)) {\n      throw new EnvError(`Invalid number: \"${input}\"`);\n    }\n\n    if (options.integer && !Number.isInteger(numberValue)) {\n      throw new EnvError(`Invalid integer: \"${input}\"`);\n    }\n\n    if (options.min && numberValue < options.min) {\n      throw new EnvError(`Number is smaller than min: \"${input}\"`);\n    }\n\n    if (options.max && numberValue > options.max) {\n      throw new EnvError(`Number is bigger than max: \"${input}\"`);\n    }\n\n    return numberValue;\n  });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./arrays\"), exports);\ntslib_1.__exportStar(require(\"./class\"), exports);\ntslib_1.__exportStar(require(\"./dates\"), exports);\ntslib_1.__exportStar(require(\"./enums\"), exports);\ntslib_1.__exportStar(require(\"./functions\"), exports);\ntslib_1.__exportStar(require(\"./interpreter\"), exports);\ntslib_1.__exportStar(require(\"./string\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\ntslib_1.__exportStar(require(\"./validators\"), exports);\n","export * from './arrays';\nexport * from './class';\nexport * from './dates';\nexport * from './enums';\nexport * from './functions';\nexport * from './interpreter';\nexport * from './string';\nexport * from './types';\nexport * from './validators';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./filter\"), exports);\ntslib_1.__exportStar(require(\"./lastNonZeroIndex\"), exports);\n","export * from './filter';\nexport * from './lastNonZeroIndex';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterNullish = filterNullish;\nexports.filterNullishAndEmpty = filterNullishAndEmpty;\nconst nullish_1 = require(\"../functions/nullish\");\nfunction filterNullish(value) {\n    return !(0, nullish_1.isNullish)(value);\n}\nfunction filterNullishAndEmpty(value) {\n    return !(0, nullish_1.isNullishOrEmpty)(value);\n}\n","import { isNullish, isNullishOrEmpty } from '../functions/nullish';\nimport type { Nullish } from '../types';\n\nexport function filterNullish<T>(value: Nullish | T): value is T {\n  return !isNullish(value);\n}\n\nexport function filterNullishAndEmpty<T>(value: Nullish | T | ''): value is T {\n  return !isNullishOrEmpty(value);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isNullish = isNullish;\nexports.isNullishOrEmpty = isNullishOrEmpty;\nfunction isNullish(value) {\n    return value === undefined || value === null;\n}\nfunction isNullishOrEmpty(value) {\n    return isNullish(value) || value.length === 0;\n}\n","import type { Nullish } from '../types';\n\nexport function isNullish(value: unknown): value is Nullish {\n  return value === undefined || value === null;\n}\n\nexport function isNullishOrEmpty(value: unknown): value is Nullish | '' {\n  return isNullish(value) || (value as unknown[] | string).length === 0;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lastNonZeroIndex = lastNonZeroIndex;\n/**\n * Returns the index of the last non-zero element in the array.\n * You can optionally specify the index up to which to search.\n *\n * @example\n * lastNonZeroIndex([0, 1, 0, 1, 0, 1]);    // => 5\n * lastNonZeroIndex([0, 1, 0, 1, 0, 0]);    // => 3\n * lastNonZeroIndex([0, 0, 0, 1, 1, 1], 3); // => 3\n * lastNonZeroIndex([1, 0, 0, 0, 1, 1], 3); // => 0\n */\nfunction lastNonZeroIndex(arr, upTo = arr.length) {\n    for (let i = upTo - 1; i >= 0; i--) {\n        if (arr[i] !== 0)\n            return i;\n    }\n    return -1;\n}\n","/**\n * Returns the index of the last non-zero element in the array.\n * You can optionally specify the index up to which to search.\n *\n * @example\n * lastNonZeroIndex([0, 1, 0, 1, 0, 1]);    // => 5\n * lastNonZeroIndex([0, 1, 0, 1, 0, 0]);    // => 3\n * lastNonZeroIndex([0, 0, 0, 1, 1, 1], 3); // => 3\n * lastNonZeroIndex([1, 0, 0, 0, 1, 1], 3); // => 0\n */\nexport function lastNonZeroIndex(arr: number[], upTo = arr.length) {\n  for (let i = upTo - 1; i >= 0; i--) {\n    if (arr[i] !== 0) return i;\n  }\n\n  return -1;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PriorityQueue = void 0;\nvar PriorityQueue_1 = require(\"./PriorityQueue\");\nObject.defineProperty(exports, \"PriorityQueue\", { enumerable: true, get: function () { return PriorityQueue_1.PriorityQueue; } });\n","export { PriorityQueue } from './PriorityQueue';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PriorityQueue = void 0;\nclass PriorityQueue {\n    constructor(priorityGetter) {\n        this.priorityGetter = priorityGetter;\n        this.queue = [];\n    }\n    get length() {\n        return this.queue.length;\n    }\n    enqueue(item) {\n        this.queue.splice(this.indexOf(item), 0, item);\n    }\n    dequeue(filter) {\n        if (typeof filter === 'undefined') {\n            return this.queue.shift();\n        }\n        const index = this.queue.findIndex(filter);\n        if (index === -1) {\n            return undefined;\n        }\n        return this.queue.splice(index, 1)[0];\n    }\n    peek() {\n        return this.queue[0];\n    }\n    delete(filter) {\n        const index = this.queue.findIndex(filter);\n        if (index !== -1) {\n            this.queue.splice(index, 1);\n        }\n    }\n    filter(filter) {\n        return this.queue.filter(filter);\n    }\n    indexOf(item) {\n        let low = 0;\n        let high = this.queue.length - 1;\n        const itemPriority = this.priorityGetter(item);\n        while (low <= high) {\n            const mid = (low + high) >>> 1;\n            const midPriority = this.priorityGetter(this.queue[mid]);\n            for (const [i, itemValue] of itemPriority.entries()) {\n                const midValue = midPriority[i];\n                if (itemValue === undefined || itemValue === null) {\n                    low = mid + 1;\n                    break;\n                }\n                if (midValue === undefined || midValue === null) {\n                    high = mid - 1;\n                    break;\n                }\n                if (midValue < itemValue) {\n                    high = mid - 1;\n                    break;\n                }\n                else if (midValue > itemValue || (midValue === itemValue && i === itemPriority.length - 1)) {\n                    low = mid + 1;\n                    break;\n                }\n            }\n        }\n        return low;\n    }\n}\nexports.PriorityQueue = PriorityQueue;\n","export class PriorityQueue<T> {\n  private readonly queue: T[] = [];\n\n  constructor(private readonly priorityGetter: (item: T) => Array<number | string | undefined | null>) {}\n\n  public get length() {\n    return this.queue.length;\n  }\n\n  public enqueue(item: T) {\n    this.queue.splice(this.indexOf(item), 0, item);\n  }\n\n  public dequeue(filter?: (item: T) => boolean): T | undefined {\n    if (typeof filter === 'undefined') {\n      return this.queue.shift();\n    }\n\n    const index = this.queue.findIndex(filter);\n\n    if (index === -1) {\n      return undefined;\n    }\n\n    return this.queue.splice(index, 1)[0];\n  }\n\n  public peek(): T | undefined {\n    return this.queue[0];\n  }\n\n  public delete(filter: (item: T) => boolean): void {\n    const index = this.queue.findIndex(filter);\n\n    if (index !== -1) {\n      this.queue.splice(index, 1);\n    }\n  }\n\n  public filter(filter: (item: T) => boolean): T[] {\n    return this.queue.filter(filter);\n  }\n\n  private indexOf(item: T): number {\n    let low = 0;\n    let high = this.queue.length - 1;\n    const itemPriority = this.priorityGetter(item);\n\n    while (low <= high) {\n      const mid = (low + high) >>> 1;\n      const midPriority = this.priorityGetter(this.queue[mid]);\n\n      for (const [i, itemValue] of itemPriority.entries()) {\n        const midValue = midPriority[i];\n\n        if (itemValue === undefined || itemValue === null) {\n          low = mid + 1;\n          break;\n        }\n\n        if (midValue === undefined || midValue === null) {\n          high = mid - 1;\n          break;\n        }\n\n        if (midValue < itemValue) {\n          high = mid - 1;\n          break;\n        } else if (midValue > itemValue || (midValue === itemValue && i === itemPriority.length - 1)) {\n          low = mid + 1;\n          break;\n        }\n      }\n    }\n\n    return low;\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./getRange\"), exports);\n","export * from './getRange';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRange = getRange;\nfunction getRange(start, end) {\n    const result = [];\n    const currentDate = new Date(start);\n    while (currentDate <= end) {\n        const formattedDate = currentDate.toISOString().split('T')[0]; // Format as YYYY-MM-DD\n        result.push(formattedDate);\n        currentDate.setDate(currentDate.getDate() + 1); // Increment by one day\n    }\n    return result;\n}\n","export function getRange(start: Date, end: Date): string[] {\n  const result: string[] = [];\n  const currentDate = new Date(start);\n\n  while (currentDate <= end) {\n    const formattedDate = currentDate.toISOString().split('T')[0]; // Format as YYYY-MM-DD\n    result.push(formattedDate);\n    currentDate.setDate(currentDate.getDate() + 1); // Increment by one day\n  }\n\n  return result;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./asset.enum\"), exports);\ntslib_1.__exportStar(require(\"./ast.enum\"), exports);\ntslib_1.__exportStar(require(\"./broker.enum\"), exports);\ntslib_1.__exportStar(require(\"./flow-status.enum\"), exports);\ntslib_1.__exportStar(require(\"./graph-node-type.enum\"), exports);\ntslib_1.__exportStar(require(\"./indicators.enum\"), exports);\ntslib_1.__exportStar(require(\"./jarvis-conversation-role.enum\"), exports);\ntslib_1.__exportStar(require(\"./order.enum\"), exports);\ntslib_1.__exportStar(require(\"./pluggable-type.enum\"), exports);\ntslib_1.__exportStar(require(\"./program-action.enum\"), exports);\ntslib_1.__exportStar(require(\"./strategy-parameters.enum\"), exports);\ntslib_1.__exportStar(require(\"./strategy-type.enum\"), exports);\n","export * from './asset.enum';\nexport * from './ast.enum';\nexport * from './broker.enum';\nexport * from './flow-status.enum';\nexport * from './graph-node-type.enum';\nexport * from './indicators.enum';\nexport * from './jarvis-conversation-role.enum';\nexport * from './order.enum';\nexport * from './pluggable-type.enum';\nexport * from './program-action.enum';\nexport * from './strategy-parameters.enum';\nexport * from './strategy-type.enum';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssetEnum = void 0;\nvar AssetEnum;\n(function (AssetEnum) {\n    AssetEnum[\"ADA\"] = \"ADA\";\n    AssetEnum[\"APT\"] = \"APT\";\n    AssetEnum[\"AUD\"] = \"AUD\";\n    AssetEnum[\"AVAX\"] = \"AVAX\";\n    AssetEnum[\"BCH\"] = \"BCH\";\n    AssetEnum[\"BNB\"] = \"BNB\";\n    AssetEnum[\"BONK\"] = \"BONK\";\n    AssetEnum[\"BTC\"] = \"BTC\";\n    AssetEnum[\"DAI\"] = \"DAI\";\n    AssetEnum[\"DOGE\"] = \"DOGE\";\n    AssetEnum[\"DOT\"] = \"DOT\";\n    AssetEnum[\"ETC\"] = \"ETC\";\n    AssetEnum[\"ETH\"] = \"ETH\";\n    AssetEnum[\"EUR\"] = \"EUR\";\n    AssetEnum[\"FET\"] = \"FET\";\n    AssetEnum[\"GBP\"] = \"GBP\";\n    AssetEnum[\"HBAR\"] = \"HBAR\";\n    AssetEnum[\"ICP\"] = \"ICP\";\n    AssetEnum[\"LINK\"] = \"LINK\";\n    AssetEnum[\"LTC\"] = \"LTC\";\n    AssetEnum[\"NEAR\"] = \"NEAR\";\n    AssetEnum[\"PEOPLE\"] = \"PEOPLE\";\n    AssetEnum[\"PEPE\"] = \"PEPE\";\n    AssetEnum[\"RENDER\"] = \"RENDER\";\n    AssetEnum[\"SHIB\"] = \"SHIB\";\n    AssetEnum[\"SOL\"] = \"SOL\";\n    AssetEnum[\"SUI\"] = \"SUI\";\n    AssetEnum[\"TRX\"] = \"TRX\";\n    AssetEnum[\"TRY\"] = \"TRY\";\n    AssetEnum[\"UNI\"] = \"UNI\";\n    AssetEnum[\"USD\"] = \"USD\";\n    AssetEnum[\"USDC\"] = \"USDC\";\n    AssetEnum[\"USDT\"] = \"USDT\";\n    AssetEnum[\"WIF\"] = \"WIF\";\n    AssetEnum[\"XLM\"] = \"XLM\";\n    AssetEnum[\"XRP\"] = \"XRP\";\n    AssetEnum[\"TAO\"] = \"TAO\";\n})(AssetEnum || (exports.AssetEnum = AssetEnum = {}));\n","export enum AssetEnum {\n  ADA = 'ADA',\n  APT = 'APT',\n  AUD = 'AUD',\n  AVAX = 'AVAX',\n  BCH = 'BCH',\n  BNB = 'BNB',\n  BONK = 'BONK',\n  BTC = 'BTC',\n  DAI = 'DAI',\n  DOGE = 'DOGE',\n  DOT = 'DOT',\n  ETC = 'ETC',\n  ETH = 'ETH',\n  EUR = 'EUR',\n  FET = 'FET',\n  GBP = 'GBP',\n  HBAR = 'HBAR',\n  ICP = 'ICP',\n  LINK = 'LINK',\n  LTC = 'LTC',\n  NEAR = 'NEAR',\n  PEOPLE = 'PEOPLE',\n  PEPE = 'PEPE',\n  RENDER = 'RENDER',\n  SHIB = 'SHIB',\n  SOL = 'SOL',\n  SUI = 'SUI',\n  TRX = 'TRX',\n  TRY = 'TRY',\n  UNI = 'UNI',\n  USD = 'USD',\n  USDC = 'USDC',\n  USDT = 'USDT',\n  WIF = 'WIF',\n  XLM = 'XLM',\n  XRP = 'XRP',\n  TAO = 'TAO',\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.currentVersion = exports.AstVersion = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nvar AstVersion;\n(function (AstVersion) {\n    AstVersion[\"V1_0\"] = \"1.0\";\n})(AstVersion || (exports.AstVersion = AstVersion = {}));\n/* eslint-enable @typescript-eslint/naming-convention */\nexports.currentVersion = AstVersion.V1_0;\n","/* eslint-disable @typescript-eslint/naming-convention */\nexport enum AstVersion {\n  V1_0 = '1.0',\n}\n/* eslint-enable @typescript-eslint/naming-convention */\n\nexport const currentVersion = AstVersion.V1_0;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BrokerEnum = void 0;\nvar BrokerEnum;\n(function (BrokerEnum) {\n    BrokerEnum[\"COINBASE\"] = \"COINBASE\";\n    BrokerEnum[\"BINANCE\"] = \"BINANCE\";\n    BrokerEnum[\"KRAKEN\"] = \"KRAKEN\";\n})(BrokerEnum || (exports.BrokerEnum = BrokerEnum = {}));\n","export enum BrokerEnum {\n  COINBASE = 'COINBASE',\n  BINANCE = 'BINANCE',\n  KRAKEN = 'KRAKEN',\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FlowStatus = void 0;\nvar FlowStatus;\n(function (FlowStatus) {\n    FlowStatus[\"Active\"] = \"active\";\n    FlowStatus[\"Draft\"] = \"draft\";\n})(FlowStatus || (exports.FlowStatus = FlowStatus = {}));\n","export enum FlowStatus {\n  Active = 'active',\n  Draft = 'draft',\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GraphNodeType = void 0;\nvar GraphNodeType;\n(function (GraphNodeType) {\n    GraphNodeType[\"IndicatorInput\"] = \"IndicatorInput\";\n    GraphNodeType[\"StrategyInput\"] = \"StrategyInput\";\n    GraphNodeType[\"LiteralInput\"] = \"LiteralInput\";\n    GraphNodeType[\"Expression\"] = \"Expression\";\n    GraphNodeType[\"IfStatement\"] = \"IfStatement\";\n    GraphNodeType[\"IfConsequent\"] = \"IfConsequent\";\n    GraphNodeType[\"NotificationEffect\"] = \"NotificationEffect\";\n    GraphNodeType[\"OrderEffect\"] = \"OrderEffect\";\n})(GraphNodeType || (exports.GraphNodeType = GraphNodeType = {}));\n","export enum GraphNodeType {\n  IndicatorInput = 'IndicatorInput',\n  StrategyInput = 'StrategyInput',\n  LiteralInput = 'LiteralInput',\n\n  Expression = 'Expression',\n\n  IfStatement = 'IfStatement',\n  IfConsequent = 'IfConsequent',\n\n  NotificationEffect = 'NotificationEffect',\n  OrderEffect = 'OrderEffect',\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IndicatorEnum = void 0;\nvar IndicatorEnum;\n(function (IndicatorEnum) {\n    IndicatorEnum[\"SMA\"] = \"SMA\";\n    IndicatorEnum[\"EMA\"] = \"EMA\";\n    IndicatorEnum[\"RSI\"] = \"RSI\";\n    IndicatorEnum[\"MACD\"] = \"MACD\";\n    IndicatorEnum[\"BollingerBands\"] = \"BollingerBands\";\n    IndicatorEnum[\"ATR\"] = \"ATR\";\n    IndicatorEnum[\"Hype\"] = \"Hype\";\n})(IndicatorEnum || (exports.IndicatorEnum = IndicatorEnum = {}));\n","export enum IndicatorEnum {\n  SMA = 'SMA',\n  EMA = 'EMA',\n  RSI = 'RSI',\n  MACD = 'MACD',\n  BollingerBands = 'BollingerBands',\n  ATR = 'ATR',\n  Hype = 'Hype',\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JarvisConversationRoleEnum = void 0;\nvar JarvisConversationRoleEnum;\n(function (JarvisConversationRoleEnum) {\n    JarvisConversationRoleEnum[\"User\"] = \"user\";\n    JarvisConversationRoleEnum[\"Assistant\"] = \"assistant\";\n})(JarvisConversationRoleEnum || (exports.JarvisConversationRoleEnum = JarvisConversationRoleEnum = {}));\n","export enum JarvisConversationRoleEnum {\n  User = 'user',\n  Assistant = 'assistant',\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OrderStatusEnum = exports.OrderTimeInForceEnum = exports.OrderSideEnum = exports.OrderTypeEnum = void 0;\nvar OrderTypeEnum;\n(function (OrderTypeEnum) {\n    OrderTypeEnum[\"Market\"] = \"market\";\n    OrderTypeEnum[\"Limit\"] = \"limit\";\n    OrderTypeEnum[\"Iceberg\"] = \"iceberg\";\n    OrderTypeEnum[\"StopLoss\"] = \"stop-loss\";\n    OrderTypeEnum[\"TakeProfit\"] = \"take-profit\";\n    OrderTypeEnum[\"StopLossLimit\"] = \"stop-loss-limit\";\n    OrderTypeEnum[\"TakeProfitLimit\"] = \"take-profit-limit\";\n    OrderTypeEnum[\"LimitMaker\"] = \"limit-maker\";\n})(OrderTypeEnum || (exports.OrderTypeEnum = OrderTypeEnum = {}));\nvar OrderSideEnum;\n(function (OrderSideEnum) {\n    OrderSideEnum[\"Buy\"] = \"buy\";\n    OrderSideEnum[\"Sell\"] = \"sell\";\n})(OrderSideEnum || (exports.OrderSideEnum = OrderSideEnum = {}));\nvar OrderTimeInForceEnum;\n(function (OrderTimeInForceEnum) {\n    /**\n     * Kraken: GTC\n     * Binance: GTC\n     */\n    OrderTimeInForceEnum[\"GoodTilCanceled\"] = \"gtc\";\n    /**\n     * Kraken: IOC\n     * Binance: IOC\n     */\n    OrderTimeInForceEnum[\"ImmediateOrCancel\"] = \"ioc\";\n    /**\n     * Kraken: N/A\n     * Binance: FOK\n     * Choose to support the intersection of features of supported brokers\n     */\n    // FillOrKill = 'fok',\n    /**\n     * Kraken: GTD\n     * Binance: N/A\n     * Choose to support the intersection of features of supported brokers\n     */\n    // GoodTilDate = 'gtd',\n})(OrderTimeInForceEnum || (exports.OrderTimeInForceEnum = OrderTimeInForceEnum = {}));\nvar OrderStatusEnum;\n(function (OrderStatusEnum) {\n    /**\n     * Not yet processed by the broker\n     */\n    OrderStatusEnum[\"Created\"] = \"created\";\n    /**\n     * Kraken: pending\n     * Binance: NEW, PENDING_NEW\n     */\n    OrderStatusEnum[\"Pending\"] = \"pending\";\n    /**\n     * Kraken: opened\n     * Binance: PARTIALLY_FILLED\n     */\n    OrderStatusEnum[\"Opened\"] = \"opened\";\n    /**\n     * Kraken: closed\n     * Binance: FILLED\n     */\n    OrderStatusEnum[\"Closed\"] = \"closed\";\n    /**\n     * Kraken: canceled\n     * Binance: CANCELED, PENDING_CANCEL, REJECTED\n     */\n    OrderStatusEnum[\"Canceled\"] = \"canceled\";\n    /**\n     * Kraken: expired\n     * Binance: EXPIRED, EXPIRED_IN_MATCH\n     */\n    OrderStatusEnum[\"Expired\"] = \"expired\";\n})(OrderStatusEnum || (exports.OrderStatusEnum = OrderStatusEnum = {}));\n","export enum OrderTypeEnum {\n  Market = 'market',\n  Limit = 'limit',\n  Iceberg = 'iceberg',\n  StopLoss = 'stop-loss',\n  TakeProfit = 'take-profit',\n  StopLossLimit = 'stop-loss-limit',\n  TakeProfitLimit = 'take-profit-limit',\n  LimitMaker = 'limit-maker',\n}\n\nexport enum OrderSideEnum {\n  Buy = 'buy',\n  Sell = 'sell',\n}\n\nexport enum OrderTimeInForceEnum {\n  /**\n   * Kraken: GTC\n   * Binance: GTC\n   */\n  GoodTilCanceled = 'gtc',\n  /**\n   * Kraken: IOC\n   * Binance: IOC\n   */\n  ImmediateOrCancel = 'ioc',\n  /**\n   * Kraken: N/A\n   * Binance: FOK\n   * Choose to support the intersection of features of supported brokers\n   */\n  // FillOrKill = 'fok',\n  /**\n   * Kraken: GTD\n   * Binance: N/A\n   * Choose to support the intersection of features of supported brokers\n   */\n  // GoodTilDate = 'gtd',\n}\n\nexport enum OrderStatusEnum {\n  /**\n   * Not yet processed by the broker\n   */\n  Created = 'created',\n\n  /**\n   * Kraken: pending\n   * Binance: NEW, PENDING_NEW\n   */\n  Pending = 'pending',\n  /**\n   * Kraken: opened\n   * Binance: PARTIALLY_FILLED\n   */\n  Opened = 'opened',\n  /**\n   * Kraken: closed\n   * Binance: FILLED\n   */\n  Closed = 'closed',\n  /**\n   * Kraken: canceled\n   * Binance: CANCELED, PENDING_CANCEL, REJECTED\n   */\n  Canceled = 'canceled',\n  /**\n   * Kraken: expired\n   * Binance: EXPIRED, EXPIRED_IN_MATCH\n   */\n  Expired = 'expired',\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PluggableTypeEnum = void 0;\nvar PluggableTypeEnum;\n(function (PluggableTypeEnum) {\n    PluggableTypeEnum[\"String\"] = \"String\";\n    PluggableTypeEnum[\"Boolean\"] = \"Boolean\";\n    PluggableTypeEnum[\"Numeric\"] = \"Numeric\";\n})(PluggableTypeEnum || (exports.PluggableTypeEnum = PluggableTypeEnum = {}));\n","export enum PluggableTypeEnum {\n  String = 'String',\n  Boolean = 'Boolean',\n  Numeric = 'Numeric',\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProgramActionEnum = void 0;\nvar ProgramActionEnum;\n(function (ProgramActionEnum) {\n    ProgramActionEnum[\"Notify\"] = \"Notify\";\n    ProgramActionEnum[\"PlaceOrder\"] = \"PlaceOrder\";\n})(ProgramActionEnum || (exports.ProgramActionEnum = ProgramActionEnum = {}));\n","export enum ProgramActionEnum {\n  Notify = 'Notify',\n  PlaceOrder = 'PlaceOrder',\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StrategyParameterEnum = void 0;\nvar StrategyParameterEnum;\n(function (StrategyParameterEnum) {\n    StrategyParameterEnum[\"QuoteBudget\"] = \"quoteBudget\";\n    StrategyParameterEnum[\"BaseBudget\"] = \"baseBudget\";\n    StrategyParameterEnum[\"Broker\"] = \"broker\";\n    StrategyParameterEnum[\"Quote\"] = \"quote\";\n    StrategyParameterEnum[\"Base\"] = \"base\";\n})(StrategyParameterEnum || (exports.StrategyParameterEnum = StrategyParameterEnum = {}));\n","export enum StrategyParameterEnum {\n  QuoteBudget = 'quoteBudget',\n  BaseBudget = 'baseBudget',\n  Broker = 'broker',\n  Quote = 'quote',\n  Base = 'base',\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StrategyType = void 0;\nvar StrategyType;\n(function (StrategyType) {\n    StrategyType[\"PAPER\"] = \"PAPER\";\n    StrategyType[\"LIVE\"] = \"LIVE\";\n})(StrategyType || (exports.StrategyType = StrategyType = {}));\n","export enum StrategyType {\n  PAPER = 'PAPER',\n  LIVE = 'LIVE',\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./breadthFirstSearch\"), exports);\ntslib_1.__exportStar(require(\"./nullish\"), exports);\n","export * from './breadthFirstSearch';\nexport * from './nullish';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.breadthFirstSearch = breadthFirstSearch;\nfunction breadthFirstSearch(edges, start, end, serializer = (x) => (typeof x === 'string' ? x : JSON.stringify(x))) {\n    const adjacencyMatrix = new Map();\n    // Build the adjacency list\n    for (const [from, to] of edges) {\n        if (!adjacencyMatrix.has(from))\n            adjacencyMatrix.set(from, []);\n        if (!adjacencyMatrix.has(to))\n            adjacencyMatrix.set(to, []);\n        adjacencyMatrix.get(from).push(to);\n    }\n    const queue = [[start, []]];\n    const visited = new Set();\n    // BFS\n    while (queue.length > 0) {\n        const [current, path] = queue.shift();\n        if (current === end)\n            return path;\n        const serialized = serializer(current);\n        if (!visited.has(serialized)) {\n            visited.add(serialized);\n            for (const neighbor of adjacencyMatrix.get(current) ?? []) {\n                queue.push([neighbor, [...path, [current, neighbor]]]);\n            }\n        }\n    }\n    return [];\n}\n","type Edge<T> = [T, T];\ntype Edges<T> = Array<Edge<T>>;\n\nexport function breadthFirstSearch<T>(\n  edges: Edges<T>,\n  start: T,\n  end: T,\n  serializer: (val: T) => string = (x) => (typeof x === 'string' ? x : JSON.stringify(x)),\n): Edges<T> {\n  const adjacencyMatrix = new Map<T, T[]>();\n\n  // Build the adjacency list\n  for (const [from, to] of edges) {\n    if (!adjacencyMatrix.has(from)) adjacencyMatrix.set(from, []);\n    if (!adjacencyMatrix.has(to)) adjacencyMatrix.set(to, []);\n    adjacencyMatrix.get(from)!.push(to);\n  }\n\n  const queue: Array<[T, Edges<T>]> = [[start, []]];\n  const visited = new Set<string>();\n\n  // BFS\n  while (queue.length > 0) {\n    const [current, path] = queue.shift()!;\n    if (current === end) return path;\n\n    const serialized = serializer(current);\n    if (!visited.has(serialized)) {\n      visited.add(serialized);\n      for (const neighbor of adjacencyMatrix.get(current) ?? []) {\n        queue.push([neighbor, [...path, [current, neighbor]]]);\n      }\n    }\n  }\n\n  return [];\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnaryExpressionMetadata = exports.StrategyInputMetadata = exports.LiteralInputMetadata = exports.IndicatorInputMetadata = exports.BinaryExpressionMetadata = void 0;\nconst tslib_1 = require(\"tslib\");\nexports.BinaryExpressionMetadata = tslib_1.__importStar(require(\"./BinaryExpressionMetadata\"));\nexports.IndicatorInputMetadata = tslib_1.__importStar(require(\"./IndicatorInputMetadata\"));\nexports.LiteralInputMetadata = tslib_1.__importStar(require(\"./LiteralInputMetadata\"));\nexports.StrategyInputMetadata = tslib_1.__importStar(require(\"./StrategyInputMetadata\"));\nexports.UnaryExpressionMetadata = tslib_1.__importStar(require(\"./UnaryExpressionMetadata\"));\n","export * as BinaryExpressionMetadata from './BinaryExpressionMetadata';\nexport * as IndicatorInputMetadata from './IndicatorInputMetadata';\nexport * as LiteralInputMetadata from './LiteralInputMetadata';\nexport * as StrategyInputMetadata from './StrategyInputMetadata';\nexport * as UnaryExpressionMetadata from './UnaryExpressionMetadata';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OperatorToSymbol = exports.OperatorToResultType = exports.OperatorToArgumentType = exports.OperatorEnum = void 0;\nconst enums_1 = require(\"../enums\");\nvar OperatorEnum;\n(function (OperatorEnum) {\n    OperatorEnum[\"Addition\"] = \"Addition\";\n    OperatorEnum[\"Subtraction\"] = \"Subtraction\";\n    OperatorEnum[\"Multiplication\"] = \"Multiplication\";\n    OperatorEnum[\"Division\"] = \"Division\";\n    OperatorEnum[\"WholeDivision\"] = \"WholeDivision\";\n    OperatorEnum[\"Modulo\"] = \"Modulo\";\n    OperatorEnum[\"Percent\"] = \"Percent\";\n    OperatorEnum[\"Exponentiation\"] = \"Exponentiation\";\n    OperatorEnum[\"Minimum\"] = \"Minimum\";\n    OperatorEnum[\"Maximum\"] = \"Maximum\";\n    OperatorEnum[\"Mean\"] = \"Mean\";\n    OperatorEnum[\"GreaterThan\"] = \"GreaterThan\";\n    OperatorEnum[\"GreaterThanEqual\"] = \"GreaterThanEqual\";\n    OperatorEnum[\"LessThan\"] = \"LessThan\";\n    OperatorEnum[\"LessThanEqual\"] = \"LessThanEqual\";\n    OperatorEnum[\"Equal\"] = \"Equal\";\n    OperatorEnum[\"NotEqual\"] = \"NotEqual\";\n    OperatorEnum[\"And\"] = \"And\";\n    OperatorEnum[\"Or\"] = \"Or\";\n})(OperatorEnum || (exports.OperatorEnum = OperatorEnum = {}));\nexports.OperatorToArgumentType = {\n    [OperatorEnum.Addition]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.Subtraction]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.Multiplication]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.Division]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.WholeDivision]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.Modulo]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.Percent]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.Exponentiation]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.Minimum]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.Maximum]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.Mean]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.GreaterThan]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.GreaterThanEqual]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.LessThan]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.LessThanEqual]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.Equal]: [enums_1.PluggableTypeEnum.Numeric, enums_1.PluggableTypeEnum.String],\n    [OperatorEnum.NotEqual]: [enums_1.PluggableTypeEnum.Numeric, enums_1.PluggableTypeEnum.String],\n    [OperatorEnum.And]: [enums_1.PluggableTypeEnum.Boolean],\n    [OperatorEnum.Or]: [enums_1.PluggableTypeEnum.Boolean],\n};\nexports.OperatorToResultType = {\n    [OperatorEnum.Addition]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.Subtraction]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.Multiplication]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.Division]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.WholeDivision]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.Modulo]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.Percent]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.Exponentiation]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.Minimum]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.Maximum]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.Mean]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.GreaterThan]: enums_1.PluggableTypeEnum.Boolean,\n    [OperatorEnum.GreaterThanEqual]: enums_1.PluggableTypeEnum.Boolean,\n    [OperatorEnum.LessThan]: enums_1.PluggableTypeEnum.Boolean,\n    [OperatorEnum.LessThanEqual]: enums_1.PluggableTypeEnum.Boolean,\n    [OperatorEnum.Equal]: enums_1.PluggableTypeEnum.Boolean,\n    [OperatorEnum.NotEqual]: enums_1.PluggableTypeEnum.Boolean,\n    [OperatorEnum.And]: enums_1.PluggableTypeEnum.Boolean,\n    [OperatorEnum.Or]: enums_1.PluggableTypeEnum.Boolean,\n};\nexports.OperatorToSymbol = {\n    [OperatorEnum.Addition]: '+',\n    [OperatorEnum.Subtraction]: '-',\n    [OperatorEnum.Multiplication]: '*',\n    [OperatorEnum.Division]: '/',\n    [OperatorEnum.WholeDivision]: '//',\n    [OperatorEnum.Modulo]: '%',\n    [OperatorEnum.Percent]: '%',\n    [OperatorEnum.Exponentiation]: '**',\n    [OperatorEnum.Minimum]: 'min',\n    [OperatorEnum.Maximum]: 'max',\n    [OperatorEnum.Mean]: 'mean',\n    [OperatorEnum.GreaterThan]: '>',\n    [OperatorEnum.GreaterThanEqual]: '>=',\n    [OperatorEnum.LessThan]: '<',\n    [OperatorEnum.LessThanEqual]: '<=',\n    [OperatorEnum.Equal]: '==',\n    [OperatorEnum.NotEqual]: '!=',\n    [OperatorEnum.And]: '&&',\n    [OperatorEnum.Or]: '||',\n};\n","import { PluggableTypeEnum } from '../enums';\n\nexport enum OperatorEnum {\n  Addition = 'Addition',\n  Subtraction = 'Subtraction',\n  Multiplication = 'Multiplication',\n  Division = 'Division',\n  WholeDivision = 'WholeDivision',\n  Modulo = 'Modulo',\n  Percent = 'Percent',\n  Exponentiation = 'Exponentiation',\n  Minimum = 'Minimum',\n  Maximum = 'Maximum',\n  Mean = 'Mean',\n  GreaterThan = 'GreaterThan',\n  GreaterThanEqual = 'GreaterThanEqual',\n  LessThan = 'LessThan',\n  LessThanEqual = 'LessThanEqual',\n  Equal = 'Equal',\n  NotEqual = 'NotEqual',\n  And = 'And',\n  Or = 'Or',\n}\n\nexport const OperatorToArgumentType = {\n  [OperatorEnum.Addition]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.Subtraction]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.Multiplication]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.Division]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.WholeDivision]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.Modulo]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.Percent]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.Exponentiation]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.Minimum]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.Maximum]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.Mean]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.GreaterThan]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.GreaterThanEqual]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.LessThan]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.LessThanEqual]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.Equal]: [PluggableTypeEnum.Numeric, PluggableTypeEnum.String],\n  [OperatorEnum.NotEqual]: [PluggableTypeEnum.Numeric, PluggableTypeEnum.String],\n  [OperatorEnum.And]: [PluggableTypeEnum.Boolean],\n  [OperatorEnum.Or]: [PluggableTypeEnum.Boolean],\n} as const;\n\nexport const OperatorToResultType = {\n  [OperatorEnum.Addition]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.Subtraction]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.Multiplication]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.Division]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.WholeDivision]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.Modulo]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.Percent]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.Exponentiation]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.Minimum]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.Maximum]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.Mean]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.GreaterThan]: PluggableTypeEnum.Boolean,\n  [OperatorEnum.GreaterThanEqual]: PluggableTypeEnum.Boolean,\n  [OperatorEnum.LessThan]: PluggableTypeEnum.Boolean,\n  [OperatorEnum.LessThanEqual]: PluggableTypeEnum.Boolean,\n  [OperatorEnum.Equal]: PluggableTypeEnum.Boolean,\n  [OperatorEnum.NotEqual]: PluggableTypeEnum.Boolean,\n  [OperatorEnum.And]: PluggableTypeEnum.Boolean,\n  [OperatorEnum.Or]: PluggableTypeEnum.Boolean,\n} as const;\n\nexport const OperatorToSymbol = {\n  [OperatorEnum.Addition]: '+',\n  [OperatorEnum.Subtraction]: '-',\n  [OperatorEnum.Multiplication]: '*',\n  [OperatorEnum.Division]: '/',\n  [OperatorEnum.WholeDivision]: '//',\n  [OperatorEnum.Modulo]: '%',\n  [OperatorEnum.Percent]: '%',\n  [OperatorEnum.Exponentiation]: '**',\n  [OperatorEnum.Minimum]: 'min',\n  [OperatorEnum.Maximum]: 'max',\n  [OperatorEnum.Mean]: 'mean',\n  [OperatorEnum.GreaterThan]: '>',\n  [OperatorEnum.GreaterThanEqual]: '>=',\n  [OperatorEnum.LessThan]: '<',\n  [OperatorEnum.LessThanEqual]: '<=',\n  [OperatorEnum.Equal]: '==',\n  [OperatorEnum.NotEqual]: '!=',\n  [OperatorEnum.And]: '&&',\n  [OperatorEnum.Or]: '||',\n} as const;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IndicatorToResultType = exports.IndicatorEnum = void 0;\nconst enums_1 = require(\"../enums\");\nexports.IndicatorEnum = enums_1.IndicatorEnum;\nexports.IndicatorToResultType = {\n    [exports.IndicatorEnum.SMA]: { sma: enums_1.PluggableTypeEnum.Numeric },\n    [exports.IndicatorEnum.EMA]: { ema: enums_1.PluggableTypeEnum.Numeric },\n    [exports.IndicatorEnum.RSI]: { rsi: enums_1.PluggableTypeEnum.Numeric },\n    [exports.IndicatorEnum.MACD]: { macd: enums_1.PluggableTypeEnum.Numeric, signal: enums_1.PluggableTypeEnum.Numeric },\n    [exports.IndicatorEnum.BollingerBands]: {\n        upper: enums_1.PluggableTypeEnum.Numeric,\n        lower: enums_1.PluggableTypeEnum.Numeric,\n        middle: enums_1.PluggableTypeEnum.Numeric,\n    },\n    [exports.IndicatorEnum.ATR]: { atr: enums_1.PluggableTypeEnum.Numeric },\n    [exports.IndicatorEnum.Hype]: { hype: enums_1.PluggableTypeEnum.Numeric },\n};\n","import { PluggableTypeEnum, IndicatorEnum as UtilitiesIndicatorEnum } from '../enums';\n\nexport import IndicatorEnum = UtilitiesIndicatorEnum;\n\nexport const IndicatorToResultType = {\n  [IndicatorEnum.SMA]: { sma: PluggableTypeEnum.Numeric },\n  [IndicatorEnum.EMA]: { ema: PluggableTypeEnum.Numeric },\n  [IndicatorEnum.RSI]: { rsi: PluggableTypeEnum.Numeric },\n  [IndicatorEnum.MACD]: { macd: PluggableTypeEnum.Numeric, signal: PluggableTypeEnum.Numeric },\n  [IndicatorEnum.BollingerBands]: {\n    upper: PluggableTypeEnum.Numeric,\n    lower: PluggableTypeEnum.Numeric,\n    middle: PluggableTypeEnum.Numeric,\n  },\n  [IndicatorEnum.ATR]: { atr: PluggableTypeEnum.Numeric },\n  [IndicatorEnum.Hype]: { hype: PluggableTypeEnum.Numeric },\n} as const;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigurableEnum = void 0;\nvar ConfigurableEnum;\n(function (ConfigurableEnum) {\n    ConfigurableEnum[\"Configurable\"] = \"Configurable\";\n    ConfigurableEnum[\"Fixed\"] = \"Fixed\";\n})(ConfigurableEnum || (exports.ConfigurableEnum = ConfigurableEnum = {}));\n","export enum ConfigurableEnum {\n  Configurable = 'Configurable',\n  Fixed = 'Fixed',\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StrategyInputToResultType = exports.ParametersEnum = void 0;\nconst enums_1 = require(\"../enums\");\nexports.ParametersEnum = enums_1.StrategyParameterEnum;\nexports.StrategyInputToResultType = {\n    [enums_1.StrategyParameterEnum.Quote]: enums_1.PluggableTypeEnum.String,\n    [enums_1.StrategyParameterEnum.Base]: enums_1.PluggableTypeEnum.String,\n    [enums_1.StrategyParameterEnum.Broker]: enums_1.PluggableTypeEnum.String,\n    [enums_1.StrategyParameterEnum.QuoteBudget]: enums_1.PluggableTypeEnum.Numeric,\n    [enums_1.StrategyParameterEnum.BaseBudget]: enums_1.PluggableTypeEnum.Numeric,\n};\n","import { PluggableTypeEnum, StrategyParameterEnum } from '../enums';\n\nexport import ParametersEnum = StrategyParameterEnum;\n\nexport const StrategyInputToResultType = {\n  [StrategyParameterEnum.Quote]: PluggableTypeEnum.String,\n  [StrategyParameterEnum.Base]: PluggableTypeEnum.String,\n  [StrategyParameterEnum.Broker]: PluggableTypeEnum.String,\n  [StrategyParameterEnum.QuoteBudget]: PluggableTypeEnum.Numeric,\n  [StrategyParameterEnum.BaseBudget]: PluggableTypeEnum.Numeric,\n} as const;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OperatorToSymbol = exports.OperatorToResultType = exports.OperatorToArgumentType = exports.OperatorEnum = void 0;\nconst enums_1 = require(\"../enums\");\nvar OperatorEnum;\n(function (OperatorEnum) {\n    OperatorEnum[\"AdditiveInverse\"] = \"AdditiveInverse\";\n    OperatorEnum[\"MultiplicativeInverse\"] = \"MultiplicativeInverse\";\n    OperatorEnum[\"SquareRoot\"] = \"SquareRoot\";\n    OperatorEnum[\"Floor\"] = \"Floor\";\n    OperatorEnum[\"Ceil\"] = \"Ceil\";\n    OperatorEnum[\"Round\"] = \"Round\";\n    OperatorEnum[\"Not\"] = \"Not\";\n})(OperatorEnum || (exports.OperatorEnum = OperatorEnum = {}));\nexports.OperatorToArgumentType = {\n    [OperatorEnum.AdditiveInverse]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.MultiplicativeInverse]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.SquareRoot]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.Floor]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.Ceil]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.Round]: [enums_1.PluggableTypeEnum.Numeric],\n    [OperatorEnum.Not]: [enums_1.PluggableTypeEnum.Boolean],\n};\nexports.OperatorToResultType = {\n    [OperatorEnum.AdditiveInverse]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.MultiplicativeInverse]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.SquareRoot]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.Floor]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.Ceil]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.Round]: enums_1.PluggableTypeEnum.Numeric,\n    [OperatorEnum.Not]: enums_1.PluggableTypeEnum.Boolean,\n};\nexports.OperatorToSymbol = {\n    [OperatorEnum.AdditiveInverse]: '-',\n    [OperatorEnum.MultiplicativeInverse]: '1/',\n    [OperatorEnum.SquareRoot]: '√',\n    [OperatorEnum.Floor]: '⌊⌋',\n    [OperatorEnum.Ceil]: '⌈⌉',\n    [OperatorEnum.Round]: '⌊⌉',\n    [OperatorEnum.Not]: '!',\n};\n","import { PluggableTypeEnum } from '../enums';\n\nexport enum OperatorEnum {\n  AdditiveInverse = 'AdditiveInverse',\n  MultiplicativeInverse = 'MultiplicativeInverse',\n  SquareRoot = 'SquareRoot',\n  Floor = 'Floor',\n  Ceil = 'Ceil',\n  Round = 'Round',\n  Not = 'Not',\n}\n\nexport const OperatorToArgumentType = {\n  [OperatorEnum.AdditiveInverse]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.MultiplicativeInverse]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.SquareRoot]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.Floor]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.Ceil]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.Round]: [PluggableTypeEnum.Numeric],\n  [OperatorEnum.Not]: [PluggableTypeEnum.Boolean],\n} as const;\n\nexport const OperatorToResultType = {\n  [OperatorEnum.AdditiveInverse]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.MultiplicativeInverse]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.SquareRoot]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.Floor]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.Ceil]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.Round]: PluggableTypeEnum.Numeric,\n  [OperatorEnum.Not]: PluggableTypeEnum.Boolean,\n} as const;\n\nexport const OperatorToSymbol = {\n  [OperatorEnum.AdditiveInverse]: '-',\n  [OperatorEnum.MultiplicativeInverse]: '1/',\n  [OperatorEnum.SquareRoot]: '√',\n  [OperatorEnum.Floor]: '⌊⌋',\n  [OperatorEnum.Ceil]: '⌈⌉',\n  [OperatorEnum.Round]: '⌊⌉',\n  [OperatorEnum.Not]: '!',\n} as const;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./case\"), exports);\n","export * from './case';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.noCase = noCase;\nexports.camelCase = camelCase;\nexports.pascalCase = pascalCase;\nexports.titleCase = titleCase;\nexports.screamingSnakeCase = screamingSnakeCase;\nexports.dotCase = dotCase;\nexports.kebabCase = kebabCase;\nexports.snakeCase = snakeCase;\n// Regexps involved with splitting words in various case formats.\nconst SPLIT_LOWER_UPPER_RE = /(?<lower>[\\p{Ll}\\d])(?<upper>\\p{Lu})/gu;\nconst SPLIT_UPPER_UPPER_RE = /(?<upper1>\\p{Lu})(?<upper2>[\\p{Lu}][\\p{Ll}])/gu;\n// Regexp involved with stripping non-word characters from the result.\nconst DEFAULT_STRIP_REGEXP = /[^\\p{L}\\d]+/giu;\nfunction split(value) {\n    let result = value.trim();\n    result = result.replaceAll(SPLIT_LOWER_UPPER_RE, '$1\\0$2').replaceAll(SPLIT_UPPER_UPPER_RE, '$1\\0$2');\n    result = result.replaceAll(DEFAULT_STRIP_REGEXP, '\\0');\n    let start = 0;\n    let end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === '\\0')\n        start++;\n    if (start === end)\n        return [];\n    while (result.charAt(end - 1) === '\\0')\n        end--;\n    return result.slice(start, end).split(/\\0/g);\n}\nfunction capitalCaseTransformFactory() {\n    return (word) => `${word[0].toUpperCase()}${word.slice(1).toLowerCase()}`;\n}\nfunction pascalCaseTransformFactory() {\n    return (word, index) => {\n        const char0 = word[0];\n        const initial = index > 0 && char0 >= '0' && char0 <= '9' ? `_${char0}` : char0.toUpperCase();\n        return initial + word.slice(1).toLowerCase();\n    };\n}\nfunction splitPrefixSuffix(input) {\n    let prefixIndex = 0;\n    let suffixIndex = input.length;\n    while (prefixIndex < input.length) {\n        const char = input.charAt(prefixIndex);\n        if (char !== '')\n            break;\n        prefixIndex++;\n    }\n    while (suffixIndex > prefixIndex) {\n        const index = suffixIndex - 1;\n        const char = input.charAt(index);\n        if (char !== '')\n            break;\n        suffixIndex = index;\n    }\n    return [input.slice(0, prefixIndex), split(input.slice(prefixIndex, suffixIndex)), input.slice(suffixIndex)];\n}\n/**\n * Convert a string to space separated lower case (`foo bar`).\n */\nfunction noCase(input, delimiter = ' ') {\n    const [prefix, words, suffix] = splitPrefixSuffix(input);\n    return prefix + words.map((w) => w.toLowerCase()).join(delimiter) + suffix;\n}\n/**\n * Convert a string to camel case (`fooBar`).\n */\nfunction camelCase(input) {\n    const [prefix, words, suffix] = splitPrefixSuffix(input);\n    const transform = pascalCaseTransformFactory();\n    return (prefix + words.map((word, index) => (index === 0 ? word.toLowerCase() : transform(word, index))).join('') + suffix);\n}\n/**\n * Convert a string to pascal case (`FooBar`).\n */\nfunction pascalCase(input) {\n    const [prefix, words, suffix] = splitPrefixSuffix(input);\n    const transform = pascalCaseTransformFactory();\n    return prefix + words.map(transform).join('') + suffix;\n}\n/**\n * Convert a string to title case (`Foo Bar`).\n */\nfunction titleCase(input) {\n    const [prefix, words, suffix] = splitPrefixSuffix(input);\n    return prefix + words.map(capitalCaseTransformFactory()).join(' ') + suffix;\n}\n/**\n * Convert a string to screaming snake case (`FOO_BAR`).\n */\nfunction screamingSnakeCase(input) {\n    const [prefix, words, suffix] = splitPrefixSuffix(input);\n    return prefix + words.map((x) => x.toUpperCase()).join('_') + suffix;\n}\n/**\n * Convert a string to dot case (`foo.bar`).\n */\nfunction dotCase(input) {\n    return noCase(input, '.');\n}\n/**\n * Convert a string to kebab case (`foo-bar`).\n */\nfunction kebabCase(input) {\n    return noCase(input, '-');\n}\n/**\n * Convert a string to snake case (`foo_bar`).\n */\nfunction snakeCase(input) {\n    return noCase(input, '_');\n}\n","// Regexps involved with splitting words in various case formats.\nconst SPLIT_LOWER_UPPER_RE = /(?<lower>[\\p{Ll}\\d])(?<upper>\\p{Lu})/gu;\nconst SPLIT_UPPER_UPPER_RE = /(?<upper1>\\p{Lu})(?<upper2>[\\p{Lu}][\\p{Ll}])/gu;\n\n// Regexp involved with stripping non-word characters from the result.\nconst DEFAULT_STRIP_REGEXP = /[^\\p{L}\\d]+/giu;\n\nfunction split(value: string) {\n  let result = value.trim();\n\n  result = result.replaceAll(SPLIT_LOWER_UPPER_RE, '$1\\0$2').replaceAll(SPLIT_UPPER_UPPER_RE, '$1\\0$2');\n\n  result = result.replaceAll(DEFAULT_STRIP_REGEXP, '\\0');\n\n  let start = 0;\n  let end = result.length;\n\n  // Trim the delimiter from around the output string.\n  while (result.charAt(start) === '\\0') start++;\n  if (start === end) return [];\n  while (result.charAt(end - 1) === '\\0') end--;\n\n  return result.slice(start, end).split(/\\0/g);\n}\n\nfunction capitalCaseTransformFactory() {\n  return (word: string) => `${word[0].toUpperCase()}${word.slice(1).toLowerCase()}`;\n}\n\nfunction pascalCaseTransformFactory() {\n  return (word: string, index: number) => {\n    const char0 = word[0];\n    const initial = index > 0 && char0 >= '0' && char0 <= '9' ? `_${char0}` : char0.toUpperCase();\n    return initial + word.slice(1).toLowerCase();\n  };\n}\n\nfunction splitPrefixSuffix(input: string): [string, string[], string] {\n  let prefixIndex = 0;\n  let suffixIndex = input.length;\n\n  while (prefixIndex < input.length) {\n    const char = input.charAt(prefixIndex);\n    if (char !== '') break;\n    prefixIndex++;\n  }\n\n  while (suffixIndex > prefixIndex) {\n    const index = suffixIndex - 1;\n    const char = input.charAt(index);\n    if (char !== '') break;\n    suffixIndex = index;\n  }\n\n  return [input.slice(0, prefixIndex), split(input.slice(prefixIndex, suffixIndex)), input.slice(suffixIndex)];\n}\n\n/**\n * Convert a string to space separated lower case (`foo bar`).\n */\nexport function noCase(input: string, delimiter = ' ') {\n  const [prefix, words, suffix] = splitPrefixSuffix(input);\n  return prefix + words.map((w) => w.toLowerCase()).join(delimiter) + suffix;\n}\n\n/**\n * Convert a string to camel case (`fooBar`).\n */\nexport function camelCase(input: string) {\n  const [prefix, words, suffix] = splitPrefixSuffix(input);\n  const transform = pascalCaseTransformFactory();\n  return (\n    prefix + words.map((word, index) => (index === 0 ? word.toLowerCase() : transform(word, index))).join('') + suffix\n  );\n}\n\n/**\n * Convert a string to pascal case (`FooBar`).\n */\nexport function pascalCase(input: string) {\n  const [prefix, words, suffix] = splitPrefixSuffix(input);\n  const transform = pascalCaseTransformFactory();\n  return prefix + words.map(transform).join('') + suffix;\n}\n\n/**\n * Convert a string to title case (`Foo Bar`).\n */\nexport function titleCase(input: string) {\n  const [prefix, words, suffix] = splitPrefixSuffix(input);\n  return prefix + words.map(capitalCaseTransformFactory()).join(' ') + suffix;\n}\n\n/**\n * Convert a string to screaming snake case (`FOO_BAR`).\n */\nexport function screamingSnakeCase(input: string) {\n  const [prefix, words, suffix] = splitPrefixSuffix(input);\n  return prefix + words.map((x) => x.toUpperCase()).join('_') + suffix;\n}\n\n/**\n * Convert a string to dot case (`foo.bar`).\n */\nexport function dotCase(input: string) {\n  return noCase(input, '.');\n}\n\n/**\n * Convert a string to kebab case (`foo-bar`).\n */\nexport function kebabCase(input: string) {\n  return noCase(input, '-');\n}\n\n/**\n * Convert a string to snake case (`foo_bar`).\n */\nexport function snakeCase(input: string) {\n  return noCase(input, '_');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./common.type\"), exports);\ntslib_1.__exportStar(require(\"./pair-broker.type\"), exports);\ntslib_1.__exportStar(require(\"./pair.type\"), exports);\n","export * from './common.type';\nexport * from './pair-broker.type';\nexport * from './pair.type';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isIP = exports.isFQDN = void 0;\nvar isFQDN_1 = require(\"./isFQDN\");\nObject.defineProperty(exports, \"isFQDN\", { enumerable: true, get: function () { return isFQDN_1.isFQDN; } });\nvar isIP_1 = require(\"./isIP\");\nObject.defineProperty(exports, \"isIP\", { enumerable: true, get: function () { return isIP_1.isIP; } });\n","export { isFQDN } from './isFQDN';\nexport { isIP } from './isIP';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFQDN = isFQDN;\nfunction isFQDN(input) {\n    if (input.length === 0)\n        return false;\n    const parts = input.split('.');\n    for (const part of parts) {\n        if (!/^[\\da-z\\u00A1-\\uFFFF-]+$/i.test(part) ||\n            /[\\uFF01-\\uFF5E]/.test(part) ||\n            part.startsWith('-') ||\n            part.at(-1) === '-')\n            return false;\n    }\n    return true;\n}\n","export function isFQDN(input: string) {\n  if (input.length === 0) return false;\n\n  const parts = input.split('.');\n  for (const part of parts) {\n    if (\n      !/^[\\da-z\\u00A1-\\uFFFF-]+$/i.test(part) ||\n      /[\\uFF01-\\uFF5E]/.test(part) ||\n      part.startsWith('-') ||\n      part.at(-1) === '-'\n    )\n      return false;\n  }\n  return true;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isIP = isIP;\nconst ipv4Regex = /^(?:(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])$/;\nfunction isIP(input) {\n    return ipv4Regex.test(input);\n}\n","const ipv4Regex = /^(?:(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])$/;\n\nexport function isIP(input: string) {\n  return ipv4Regex.test(input);\n}\n","module.exports = require(\"envalid\");","\"use strict\";\n// import { ChatMistralAI } from '@langchain/mistralai';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mistralChain = void 0;\nconst openai_1 = require(\"@langchain/openai\");\nconst env_1 = require(\"../env\");\nconst impact_json_module_1 = require(\"../lib/impact-json.module\");\nexports.mistralChain = new openai_1.ChatOpenAI({\n    model: 'gpt-4o-mini',\n    temperature: 0,\n    apiKey: env_1.env.OPEN_AI_KEY,\n}).withStructuredOutput(impact_json_module_1.impactAnalysisSchema);\n","// import { ChatMistralAI } from '@langchain/mistralai';\n\nimport { ChatOpenAI } from '@langchain/openai';\nimport { env } from '../env';\nimport { impactAnalysisSchema } from '../lib/impact-json.module';\n\nexport const mistralChain = new ChatOpenAI({\n  model: 'gpt-4o-mini',\n  temperature: 0,\n  apiKey: env.OPEN_AI_KEY,\n}).withStructuredOutput(impactAnalysisSchema);\n","module.exports = require(\"@langchain/openai\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.impactAnalysisSchema = void 0;\nexports.impactAnalysisSchema = {\n    title: 'impactAnalysisSchema',\n    description: 'A JSON object representing the financial impact of topics',\n    type: 'object',\n    properties: {\n        result: {\n            type: 'object',\n            description: 'A dictionary of financial topics with detailed description and impact scores',\n            additionalProperties: {\n                type: 'object',\n                properties: {\n                    description: {\n                        type: 'string',\n                        description: 'Comprehensive description of financial topic and impact timeframe',\n                    },\n                    score: {\n                        type: 'number',\n                        minimum: -1,\n                        maximum: 1,\n                        description: 'Numerical impact score from -1 (very negative) to 1 (very positive)',\n                    },\n                },\n                required: ['description', 'score'],\n            },\n        },\n    },\n    required: ['result'],\n};\n","export const impactAnalysisSchema = {\n  title: 'impactAnalysisSchema',\n  description: 'A JSON object representing the financial impact of topics',\n  type: 'object',\n  properties: {\n    result: {\n      type: 'object',\n      description: 'A dictionary of financial topics with detailed description and impact scores',\n      additionalProperties: {\n        type: 'object',\n        properties: {\n          description: {\n            type: 'string',\n            description: 'Comprehensive description of financial topic and impact timeframe',\n          },\n          score: {\n            type: 'number',\n            minimum: -1,\n            maximum: 1,\n            description: 'Numerical impact score from -1 (very negative) to 1 (very positive)',\n          },\n        },\n        required: ['description', 'score'],\n      },\n    },\n  },\n  required: ['result'],\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForbesCrawlerService = void 0;\nconst tslib_1 = require(\"tslib\");\nconst readability_1 = require(\"@mozilla/readability\");\nconst common_1 = require(\"@nestjs/common\");\nconst dayjs_1 = tslib_1.__importDefault(require(\"dayjs\"));\nconst customParseFormat_1 = tslib_1.__importDefault(require(\"dayjs/plugin/customParseFormat\"));\nconst timezone_1 = tslib_1.__importDefault(require(\"dayjs/plugin/timezone\"));\nconst jsdom_1 = require(\"jsdom\");\nconst env_1 = require(\"../env\");\nconst crawler_service_1 = require(\"./crawler.service\");\ndayjs_1.default.extend(customParseFormat_1.default);\ndayjs_1.default.extend(timezone_1.default);\n// Créer une console virtuelle pour ignorer les erreurs CSS\nconst virtualConsole = new jsdom_1.VirtualConsole();\nvirtualConsole.on('error', () => {\n    // Ignorer les erreurs (notamment les erreurs CSS)\n});\nlet ForbesCrawlerService = class ForbesCrawlerService extends crawler_service_1.CrawlerService {\n    async getUrls() {\n        const re = /https:\\/\\/www\\.forbes\\.com\\/sites\\/[\\dA-Za-z-]+\\/\\d{4}\\/\\d{2}\\/\\d{2}\\/[\\dA-Za-z-]+\\//;\n        const htmlLinks = [];\n        await Promise.all(env_1.env.CHIPEUR_FORBES_URLS.map(async (forbesUrl) => {\n            const req = await fetch(forbesUrl);\n            const dom = new jsdom_1.JSDOM(await req.text(), { virtualConsole }).window.document;\n            htmlLinks.push(...[...dom.querySelectorAll('a[data-ga-track]')]\n                .map((elem) => elem.getAttribute('href') ?? '')\n                .filter((href) => re.test(href)));\n        }));\n        return [...new Set(htmlLinks)];\n    }\n    async getArticle(url) {\n        common_1.Logger.log(`📖 Scraping article: ${url}`);\n        const req = await fetch(url);\n        const dom = new jsdom_1.JSDOM(await req.text(), { virtualConsole });\n        const article = new readability_1.Readability(dom.window.document).parse();\n        if (article === null) {\n            // throw new Error('Article is null');\n            return {\n                title: '',\n                text: '',\n                url,\n                publicationDate: this.getDate(dom, url),\n            };\n        }\n        return {\n            title: article.title,\n            text: article?.textContent ?? '',\n            url,\n            publicationDate: this.getDate(dom, url),\n        };\n    }\n    getDate(dom, url) {\n        const dateElements = [\n            ...dom.window.document.querySelectorAll('div.top-contrib-block time, div.top-contrib-block__premium time'),\n        ];\n        const dateText = dateElements\n            .map((node) => node.textContent ?? '')\n            .join(' ');\n        common_1.Logger.log(`🔍 Date text found for ${url}: \"${dateText}\"`);\n        if (!dateText) {\n            common_1.Logger.warn(`⚠️  No date found in article ${url}, using current date as fallback`);\n            return new Date();\n        }\n        const parsedDate = (0, dayjs_1.default)(dateText, 'MMM D, YYYY, hh:mma', false);\n        if (!parsedDate.isValid()) {\n            common_1.Logger.warn(`⚠️  Could not parse date: \"${dateText}\" for ${url}, using current date as fallback`);\n            return new Date();\n        }\n        common_1.Logger.log(`✅ Parsed date: ${parsedDate.toISOString()}`);\n        return parsedDate.toDate();\n    }\n};\nexports.ForbesCrawlerService = ForbesCrawlerService;\nexports.ForbesCrawlerService = ForbesCrawlerService = tslib_1.__decorate([\n    (0, common_1.Injectable)()\n], ForbesCrawlerService);\n","import { Readability } from '@mozilla/readability';\nimport { Injectable, Logger } from '@nestjs/common';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport tz from 'dayjs/plugin/timezone';\nimport { JSDOM, VirtualConsole } from 'jsdom';\nimport { env } from '../env';\nimport type { Article } from '../types';\nimport { CrawlerService } from './crawler.service';\n\ndayjs.extend(customParseFormat);\ndayjs.extend(tz);\n\n// Créer une console virtuelle pour ignorer les erreurs CSS\nconst virtualConsole = new VirtualConsole();\nvirtualConsole.on('error', () => {\n  // Ignorer les erreurs (notamment les erreurs CSS)\n});\n\n@Injectable()\nexport class ForbesCrawlerService extends CrawlerService {\n  protected async getUrls(): Promise<string[]> {\n    const re = /https:\\/\\/www\\.forbes\\.com\\/sites\\/[\\dA-Za-z-]+\\/\\d{4}\\/\\d{2}\\/\\d{2}\\/[\\dA-Za-z-]+\\//;\n    const htmlLinks: string[] = [];\n\n    await Promise.all(\n      env.CHIPEUR_FORBES_URLS.map(async (forbesUrl) => {\n        const req = await fetch(forbesUrl);\n        const dom = new JSDOM(await req.text(), { virtualConsole }).window.document;\n\n        htmlLinks.push(\n          ...[...dom.querySelectorAll('a[data-ga-track]')]\n            .map((elem) => elem.getAttribute('href') ?? '')\n            .filter((href) => re.test(href)),\n        );\n      }),\n    );\n\n    return [...new Set(htmlLinks)];\n  }\n\n  protected async getArticle(url: string): Promise<Article> {\n    Logger.log(`📖 Scraping article: ${url}`);\n    const req = await fetch(url);\n    const dom = new JSDOM(await req.text(), { virtualConsole });\n    const article = new Readability(dom.window.document).parse();\n\n    if (article === null) {\n      // throw new Error('Article is null');\n      return {\n        title: '',\n        text: '',\n        url,\n        publicationDate: this.getDate(dom, url),\n      };\n    }\n\n    return {\n      title: article.title,\n      text: article?.textContent ?? '',\n      url,\n      publicationDate: this.getDate(dom, url),\n    };\n  }\n\n  private getDate(dom: JSDOM, url: string): Date {\n    const dateElements = [\n      ...dom.window.document.querySelectorAll('div.top-contrib-block time, div.top-contrib-block__premium time'),\n    ];\n    \n    const dateText = dateElements\n      .map((node) => node.textContent ?? '')\n      .join(' ');\n\n    Logger.log(`🔍 Date text found for ${url}: \"${dateText}\"`);\n\n    if (!dateText) {\n      Logger.warn(`⚠️  No date found in article ${url}, using current date as fallback`);\n      return new Date();\n    }\n\n    const parsedDate = dayjs(dateText, 'MMM D, YYYY, hh:mma', false);\n    \n    if (!parsedDate.isValid()) {\n      Logger.warn(`⚠️  Could not parse date: \"${dateText}\" for ${url}, using current date as fallback`);\n      return new Date();\n    }\n\n    Logger.log(`✅ Parsed date: ${parsedDate.toISOString()}`);\n    return parsedDate.toDate();\n  }\n}\n","module.exports = require(\"@mozilla/readability\");","module.exports = require(\"dayjs\");","module.exports = require(\"dayjs/plugin/customParseFormat\");","module.exports = require(\"dayjs/plugin/timezone\");","module.exports = require(\"jsdom\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CrawlerService = void 0;\nconst common_1 = require(\"@nestjs/common\");\nclass CrawlerService {\n    async crawl(startDate, endDate) {\n        common_1.Logger.log(`🔍 Starting crawl from ${startDate.toISOString()} to ${endDate.toISOString()}`);\n        const urls = await this.getUrls();\n        common_1.Logger.log(`🔗 Found ${urls.length} URL(s) to scrape`);\n        const articles = await Promise.all(urls.map(async (url) => await this.getArticle(url)));\n        common_1.Logger.log(`📄 Scraped ${articles.length} article(s)`);\n        // Log des dates pour debug\n        articles.forEach((article, index) => {\n            const dateStr = article.publicationDate instanceof Date && !isNaN(article.publicationDate.getTime())\n                ? article.publicationDate.toISOString()\n                : 'Invalid Date';\n            common_1.Logger.log(`Article ${index + 1}: \"${article.title.substring(0, 50)}...\" - Date: ${dateStr}`);\n        });\n        const filteredArticles = articles.filter((article) => article.publicationDate >= startDate && article.publicationDate <= endDate);\n        common_1.Logger.log(`✅ ${filteredArticles.length} article(s) match the date range`);\n        return filteredArticles;\n    }\n}\nexports.CrawlerService = CrawlerService;\n","import { Logger } from '@nestjs/common';\nimport type { Article } from '../types';\n\nexport abstract class CrawlerService {\n  public async crawl(startDate: Date, endDate: Date): Promise<Article[]> {\n    Logger.log(`🔍 Starting crawl from ${startDate.toISOString()} to ${endDate.toISOString()}`);\n    \n    const urls = await this.getUrls();\n    Logger.log(`🔗 Found ${urls.length} URL(s) to scrape`);\n\n    const articles = await Promise.all(urls.map(async (url) => await this.getArticle(url)));\n    Logger.log(`📄 Scraped ${articles.length} article(s)`);\n\n    // Log des dates pour debug\n    articles.forEach((article, index) => {\n      const dateStr = article.publicationDate instanceof Date && !isNaN(article.publicationDate.getTime())\n        ? article.publicationDate.toISOString()\n        : 'Invalid Date';\n      Logger.log(`Article ${index + 1}: \"${article.title.substring(0, 50)}...\" - Date: ${dateStr}`);\n    });\n\n    const filteredArticles = articles.filter((article) => article.publicationDate >= startDate && article.publicationDate <= endDate);\n    Logger.log(`✅ ${filteredArticles.length} article(s) match the date range`);\n\n    return filteredArticles;\n  }\n\n  protected abstract getUrls(): Promise<string[]>;\n  protected abstract getArticle(url: string): Promise<Article>;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GrpcExceptionFilter = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@nestjs/common\");\nconst microservices_1 = require(\"@nestjs/microservices\");\nconst rxjs_1 = require(\"rxjs\");\nlet GrpcExceptionFilter = class GrpcExceptionFilter {\n    catch(exception) {\n        return (0, rxjs_1.throwError)(() => exception.getError());\n    }\n};\nexports.GrpcExceptionFilter = GrpcExceptionFilter;\nexports.GrpcExceptionFilter = GrpcExceptionFilter = tslib_1.__decorate([\n    (0, common_1.Catch)(microservices_1.RpcException)\n], GrpcExceptionFilter);\n","import { Catch, RpcExceptionFilter } from '@nestjs/common';\nimport { RpcException } from '@nestjs/microservices';\nimport { Observable, throwError } from 'rxjs';\n\n@Catch(RpcException)\nexport class GrpcExceptionFilter implements RpcExceptionFilter<RpcException> {\n  public catch(exception: RpcException): Observable<never> {\n    return throwError(() => exception.getError());\n  }\n}\n","module.exports = require(\"@nestjs/microservices\");","module.exports = require(\"rxjs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(0);\n",""],"names":[],"sourceRoot":""}